2024-03-02 18:58:37,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 18:58:37,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 18:58:37,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 18:58:37,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 19:01:04,264:INFO:PyCaret RegressionExperiment
2024-03-02 19:01:04,264:INFO:Logging name: reg-default-name
2024-03-02 19:01:04,265:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 19:01:04,266:INFO:version 3.3.0
2024-03-02 19:01:04,266:INFO:Initializing setup()
2024-03-02 19:01:04,266:INFO:self.USI: 15d2
2024-03-02 19:01:04,266:INFO:self._variable_keys: {'data', 'y_test', 'X', 'X_train', 'log_plots_param', 'gpu_param', 'gpu_n_jobs_param', 'y', 'seed', 'USI', 'X_test', 'exp_name_log', 'y_train', 'exp_id', 'transform_target_param', 'pipeline', 'html_param', 'logging_param', 'target_param', 'memory', 'idx', '_ml_usecase', '_available_plots', 'n_jobs_param', 'fold_groups_param', 'fold_shuffle_param', 'fold_generator'}
2024-03-02 19:01:04,267:INFO:Checking environment
2024-03-02 19:01:04,267:INFO:python_version: 3.11.0
2024-03-02 19:01:04,267:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-03-02 19:01:04,267:INFO:machine: AMD64
2024-03-02 19:01:04,267:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-02 19:01:04,287:INFO:Memory: svmem(total=8428179456, available=1099583488, percent=87.0, used=7328595968, free=1099583488)
2024-03-02 19:01:04,288:INFO:Physical Core: 4
2024-03-02 19:01:04,288:INFO:Logical Core: 8
2024-03-02 19:01:04,288:INFO:Checking libraries
2024-03-02 19:01:04,288:INFO:System:
2024-03-02 19:01:04,289:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-03-02 19:01:04,289:INFO:executable: d:\dev\venv\Scripts\python.exe
2024-03-02 19:01:04,289:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-02 19:01:04,289:INFO:PyCaret required dependencies:
2024-03-02 19:01:04,659:INFO:                 pip: 23.2.1
2024-03-02 19:01:04,659:INFO:          setuptools: 68.2.2
2024-03-02 19:01:04,660:INFO:             pycaret: 3.3.0
2024-03-02 19:01:04,660:INFO:             IPython: 8.14.0
2024-03-02 19:01:04,660:INFO:          ipywidgets: 8.1.1
2024-03-02 19:01:04,660:INFO:                tqdm: 4.66.1
2024-03-02 19:01:04,660:INFO:               numpy: 1.26.0
2024-03-02 19:01:04,660:INFO:              pandas: 2.1.1
2024-03-02 19:01:04,660:INFO:              jinja2: 3.1.2
2024-03-02 19:01:04,660:INFO:               scipy: 1.11.3
2024-03-02 19:01:04,660:INFO:              joblib: 1.3.2
2024-03-02 19:01:04,660:INFO:             sklearn: 1.4.1.post1
2024-03-02 19:01:04,660:INFO:                pyod: 1.1.3
2024-03-02 19:01:04,660:INFO:            imblearn: 0.12.0
2024-03-02 19:01:04,660:INFO:   category_encoders: 2.6.3
2024-03-02 19:01:04,660:INFO:            lightgbm: 4.3.0
2024-03-02 19:01:04,660:INFO:               numba: 0.59.0
2024-03-02 19:01:04,660:INFO:            requests: 2.31.0
2024-03-02 19:01:04,660:INFO:          matplotlib: 3.7.5
2024-03-02 19:01:04,660:INFO:          scikitplot: 0.3.7
2024-03-02 19:01:04,660:INFO:         yellowbrick: 1.5
2024-03-02 19:01:04,660:INFO:              plotly: 5.19.0
2024-03-02 19:01:04,660:INFO:    plotly-resampler: Not installed
2024-03-02 19:01:04,660:INFO:             kaleido: 0.2.1
2024-03-02 19:01:04,660:INFO:           schemdraw: 0.15
2024-03-02 19:01:04,660:INFO:         statsmodels: 0.14.1
2024-03-02 19:01:04,660:INFO:              sktime: 0.27.0
2024-03-02 19:01:04,661:INFO:               tbats: 1.1.3
2024-03-02 19:01:04,661:INFO:            pmdarima: 2.0.4
2024-03-02 19:01:04,661:INFO:              psutil: 5.9.5
2024-03-02 19:01:04,661:INFO:          markupsafe: 2.1.3
2024-03-02 19:01:04,661:INFO:             pickle5: Not installed
2024-03-02 19:01:04,661:INFO:         cloudpickle: 3.0.0
2024-03-02 19:01:04,661:INFO:         deprecation: 2.1.0
2024-03-02 19:01:04,661:INFO:              xxhash: 3.4.1
2024-03-02 19:01:04,661:INFO:           wurlitzer: Not installed
2024-03-02 19:01:04,661:INFO:PyCaret optional dependencies:
2024-03-02 19:01:05,237:INFO:                shap: Not installed
2024-03-02 19:01:05,237:INFO:           interpret: Not installed
2024-03-02 19:01:05,237:INFO:                umap: Not installed
2024-03-02 19:01:05,238:INFO:     ydata_profiling: Not installed
2024-03-02 19:01:05,238:INFO:  explainerdashboard: Not installed
2024-03-02 19:01:05,238:INFO:             autoviz: Not installed
2024-03-02 19:01:05,238:INFO:           fairlearn: Not installed
2024-03-02 19:01:05,238:INFO:          deepchecks: Not installed
2024-03-02 19:01:05,238:INFO:             xgboost: 2.0.3
2024-03-02 19:01:05,238:INFO:            catboost: Not installed
2024-03-02 19:01:05,238:INFO:              kmodes: Not installed
2024-03-02 19:01:05,238:INFO:             mlxtend: Not installed
2024-03-02 19:01:05,238:INFO:       statsforecast: Not installed
2024-03-02 19:01:05,238:INFO:        tune_sklearn: Not installed
2024-03-02 19:01:05,238:INFO:                 ray: Not installed
2024-03-02 19:01:05,238:INFO:            hyperopt: Not installed
2024-03-02 19:01:05,238:INFO:              optuna: Not installed
2024-03-02 19:01:05,238:INFO:               skopt: Not installed
2024-03-02 19:01:05,238:INFO:              mlflow: Not installed
2024-03-02 19:01:05,238:INFO:              gradio: Not installed
2024-03-02 19:01:05,238:INFO:             fastapi: Not installed
2024-03-02 19:01:05,238:INFO:             uvicorn: Not installed
2024-03-02 19:01:05,238:INFO:              m2cgen: Not installed
2024-03-02 19:01:05,238:INFO:           evidently: Not installed
2024-03-02 19:01:05,238:INFO:               fugue: Not installed
2024-03-02 19:01:05,238:INFO:           streamlit: 1.31.1
2024-03-02 19:01:05,238:INFO:             prophet: Not installed
2024-03-02 19:01:05,238:INFO:None
2024-03-02 19:01:05,238:INFO:Set up data.
2024-03-02 19:01:05,319:INFO:Set up folding strategy.
2024-03-02 19:01:05,320:INFO:Set up train/test split.
2024-03-02 19:01:05,341:INFO:Set up index.
2024-03-02 19:01:05,382:INFO:Assigning column types.
2024-03-02 19:01:05,400:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 19:01:05,400:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,410:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,417:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,576:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:05,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:05,580:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,585:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,590:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,650:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,705:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:05,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:05,708:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 19:01:05,712:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,775:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,822:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:05,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:05,831:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,836:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:05,950:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:05,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:05,953:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 19:01:05,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,078:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,089:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,195:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,198:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 19:01:06,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,317:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,440:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,441:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,445:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 19:01:06,513:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,562:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,636:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:01:06,683:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,686:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 19:01:06,801:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:06,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:06,923:INFO:Preparing preprocessing pipeline...
2024-03-02 19:01:06,923:INFO:Set up simple imputation.
2024-03-02 19:01:07,058:INFO:Finished creating preprocessing pipeline.
2024-03-02 19:01:07,079:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amir\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crim', 'zn', 'indus', 'chas',
                                             'nox', 'rm', 'age', 'dis', 'rad',
                                             'tax', 'ptratio', 'black',
                                             'lstat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-03-02 19:01:07,079:INFO:Creating final display dataframe.
2024-03-02 19:01:07,145:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              medv
2                   Target type        Regression
3           Original data shape         (506, 14)
4        Transformed data shape         (506, 14)
5   Transformed train set shape         (354, 14)
6    Transformed test set shape         (152, 14)
7              Numeric features                13
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              15d2
2024-03-02 19:01:07,286:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:07,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:07,407:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:01:07,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:01:07,410:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 19:01:07,410:INFO:setup() successfully completed in 3.55s...............
2024-03-02 19:05:30,795:INFO:Initializing compare_models()
2024-03-02 19:05:30,795:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-02 19:05:30,797:INFO:Checking exceptions
2024-03-02 19:05:30,801:INFO:Preparing display monitor
2024-03-02 19:05:30,835:INFO:Initializing Linear Regression
2024-03-02 19:05:30,837:INFO:Total runtime is 2.2427241007486978e-05 minutes
2024-03-02 19:05:30,844:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:30,846:INFO:Initializing create_model()
2024-03-02 19:05:30,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:30,846:INFO:Checking exceptions
2024-03-02 19:05:30,846:INFO:Importing libraries
2024-03-02 19:05:30,846:INFO:Copying training dataset
2024-03-02 19:05:30,855:INFO:Defining folds
2024-03-02 19:05:30,855:INFO:Declaring metric variables
2024-03-02 19:05:30,894:INFO:Importing untrained model
2024-03-02 19:05:30,914:INFO:Linear Regression Imported successfully
2024-03-02 19:05:30,944:INFO:Starting cross validation
2024-03-02 19:05:31,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:37,735:INFO:Calculating mean and std
2024-03-02 19:05:37,738:INFO:Creating metrics dataframe
2024-03-02 19:05:37,751:INFO:Uploading results into container
2024-03-02 19:05:37,752:INFO:Uploading model into container now
2024-03-02 19:05:37,753:INFO:_master_model_container: 1
2024-03-02 19:05:37,753:INFO:_display_container: 2
2024-03-02 19:05:37,754:INFO:LinearRegression(n_jobs=-1)
2024-03-02 19:05:37,754:INFO:create_model() successfully completed......................................
2024-03-02 19:05:37,855:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:37,855:INFO:Creating metrics dataframe
2024-03-02 19:05:37,867:INFO:Initializing Lasso Regression
2024-03-02 19:05:37,867:INFO:Total runtime is 0.11719456116358438 minutes
2024-03-02 19:05:37,871:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:37,871:INFO:Initializing create_model()
2024-03-02 19:05:37,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:37,872:INFO:Checking exceptions
2024-03-02 19:05:37,872:INFO:Importing libraries
2024-03-02 19:05:37,872:INFO:Copying training dataset
2024-03-02 19:05:37,878:INFO:Defining folds
2024-03-02 19:05:37,878:INFO:Declaring metric variables
2024-03-02 19:05:37,883:INFO:Importing untrained model
2024-03-02 19:05:37,887:INFO:Lasso Regression Imported successfully
2024-03-02 19:05:37,897:INFO:Starting cross validation
2024-03-02 19:05:37,898:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:38,081:INFO:Calculating mean and std
2024-03-02 19:05:38,082:INFO:Creating metrics dataframe
2024-03-02 19:05:38,085:INFO:Uploading results into container
2024-03-02 19:05:38,086:INFO:Uploading model into container now
2024-03-02 19:05:38,086:INFO:_master_model_container: 2
2024-03-02 19:05:38,086:INFO:_display_container: 2
2024-03-02 19:05:38,087:INFO:Lasso(random_state=123)
2024-03-02 19:05:38,087:INFO:create_model() successfully completed......................................
2024-03-02 19:05:38,170:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:38,171:INFO:Creating metrics dataframe
2024-03-02 19:05:38,182:INFO:Initializing Ridge Regression
2024-03-02 19:05:38,182:INFO:Total runtime is 0.12243760824203491 minutes
2024-03-02 19:05:38,186:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:38,186:INFO:Initializing create_model()
2024-03-02 19:05:38,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:38,186:INFO:Checking exceptions
2024-03-02 19:05:38,187:INFO:Importing libraries
2024-03-02 19:05:38,187:INFO:Copying training dataset
2024-03-02 19:05:38,192:INFO:Defining folds
2024-03-02 19:05:38,192:INFO:Declaring metric variables
2024-03-02 19:05:38,196:INFO:Importing untrained model
2024-03-02 19:05:38,198:INFO:Ridge Regression Imported successfully
2024-03-02 19:05:38,209:INFO:Starting cross validation
2024-03-02 19:05:38,210:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:38,383:INFO:Calculating mean and std
2024-03-02 19:05:38,385:INFO:Creating metrics dataframe
2024-03-02 19:05:38,386:INFO:Uploading results into container
2024-03-02 19:05:38,387:INFO:Uploading model into container now
2024-03-02 19:05:38,387:INFO:_master_model_container: 3
2024-03-02 19:05:38,387:INFO:_display_container: 2
2024-03-02 19:05:38,387:INFO:Ridge(random_state=123)
2024-03-02 19:05:38,388:INFO:create_model() successfully completed......................................
2024-03-02 19:05:38,486:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:38,488:INFO:Creating metrics dataframe
2024-03-02 19:05:38,500:INFO:Initializing Elastic Net
2024-03-02 19:05:38,500:INFO:Total runtime is 0.12774523893992107 minutes
2024-03-02 19:05:38,507:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:38,507:INFO:Initializing create_model()
2024-03-02 19:05:38,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:38,508:INFO:Checking exceptions
2024-03-02 19:05:38,508:INFO:Importing libraries
2024-03-02 19:05:38,508:INFO:Copying training dataset
2024-03-02 19:05:38,514:INFO:Defining folds
2024-03-02 19:05:38,514:INFO:Declaring metric variables
2024-03-02 19:05:38,519:INFO:Importing untrained model
2024-03-02 19:05:38,523:INFO:Elastic Net Imported successfully
2024-03-02 19:05:38,530:INFO:Starting cross validation
2024-03-02 19:05:38,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:38,608:INFO:Calculating mean and std
2024-03-02 19:05:38,608:INFO:Creating metrics dataframe
2024-03-02 19:05:38,611:INFO:Uploading results into container
2024-03-02 19:05:38,611:INFO:Uploading model into container now
2024-03-02 19:05:38,611:INFO:_master_model_container: 4
2024-03-02 19:05:38,611:INFO:_display_container: 2
2024-03-02 19:05:38,612:INFO:ElasticNet(random_state=123)
2024-03-02 19:05:38,612:INFO:create_model() successfully completed......................................
2024-03-02 19:05:38,699:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:38,699:INFO:Creating metrics dataframe
2024-03-02 19:05:38,714:INFO:Initializing Least Angle Regression
2024-03-02 19:05:38,714:INFO:Total runtime is 0.1313015898068746 minutes
2024-03-02 19:05:38,719:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:38,719:INFO:Initializing create_model()
2024-03-02 19:05:38,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:38,720:INFO:Checking exceptions
2024-03-02 19:05:38,720:INFO:Importing libraries
2024-03-02 19:05:38,720:INFO:Copying training dataset
2024-03-02 19:05:38,727:INFO:Defining folds
2024-03-02 19:05:38,727:INFO:Declaring metric variables
2024-03-02 19:05:38,732:INFO:Importing untrained model
2024-03-02 19:05:38,739:INFO:Least Angle Regression Imported successfully
2024-03-02 19:05:38,746:INFO:Starting cross validation
2024-03-02 19:05:38,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:38,882:INFO:Calculating mean and std
2024-03-02 19:05:38,882:INFO:Creating metrics dataframe
2024-03-02 19:05:38,885:INFO:Uploading results into container
2024-03-02 19:05:38,887:INFO:Uploading model into container now
2024-03-02 19:05:38,887:INFO:_master_model_container: 5
2024-03-02 19:05:38,887:INFO:_display_container: 2
2024-03-02 19:05:38,888:INFO:Lars(random_state=123)
2024-03-02 19:05:38,888:INFO:create_model() successfully completed......................................
2024-03-02 19:05:38,972:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:38,972:INFO:Creating metrics dataframe
2024-03-02 19:05:38,985:INFO:Initializing Lasso Least Angle Regression
2024-03-02 19:05:38,985:INFO:Total runtime is 0.13581770658493042 minutes
2024-03-02 19:05:38,990:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:38,990:INFO:Initializing create_model()
2024-03-02 19:05:38,990:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:38,990:INFO:Checking exceptions
2024-03-02 19:05:38,990:INFO:Importing libraries
2024-03-02 19:05:38,991:INFO:Copying training dataset
2024-03-02 19:05:38,998:INFO:Defining folds
2024-03-02 19:05:38,998:INFO:Declaring metric variables
2024-03-02 19:05:39,002:INFO:Importing untrained model
2024-03-02 19:05:39,008:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 19:05:39,015:INFO:Starting cross validation
2024-03-02 19:05:39,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:39,089:INFO:Calculating mean and std
2024-03-02 19:05:39,090:INFO:Creating metrics dataframe
2024-03-02 19:05:39,091:INFO:Uploading results into container
2024-03-02 19:05:39,092:INFO:Uploading model into container now
2024-03-02 19:05:39,092:INFO:_master_model_container: 6
2024-03-02 19:05:39,092:INFO:_display_container: 2
2024-03-02 19:05:39,093:INFO:LassoLars(random_state=123)
2024-03-02 19:05:39,093:INFO:create_model() successfully completed......................................
2024-03-02 19:05:39,172:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:39,172:INFO:Creating metrics dataframe
2024-03-02 19:05:39,182:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 19:05:39,182:INFO:Total runtime is 0.13910805384318034 minutes
2024-03-02 19:05:39,187:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:39,187:INFO:Initializing create_model()
2024-03-02 19:05:39,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:39,188:INFO:Checking exceptions
2024-03-02 19:05:39,188:INFO:Importing libraries
2024-03-02 19:05:39,188:INFO:Copying training dataset
2024-03-02 19:05:39,194:INFO:Defining folds
2024-03-02 19:05:39,194:INFO:Declaring metric variables
2024-03-02 19:05:39,197:INFO:Importing untrained model
2024-03-02 19:05:39,204:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 19:05:39,213:INFO:Starting cross validation
2024-03-02 19:05:39,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:39,304:INFO:Calculating mean and std
2024-03-02 19:05:39,305:INFO:Creating metrics dataframe
2024-03-02 19:05:39,307:INFO:Uploading results into container
2024-03-02 19:05:39,307:INFO:Uploading model into container now
2024-03-02 19:05:39,307:INFO:_master_model_container: 7
2024-03-02 19:05:39,307:INFO:_display_container: 2
2024-03-02 19:05:39,308:INFO:OrthogonalMatchingPursuit()
2024-03-02 19:05:39,308:INFO:create_model() successfully completed......................................
2024-03-02 19:05:39,395:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:39,396:INFO:Creating metrics dataframe
2024-03-02 19:05:39,410:INFO:Initializing Bayesian Ridge
2024-03-02 19:05:39,410:INFO:Total runtime is 0.14290938377380372 minutes
2024-03-02 19:05:39,415:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:39,415:INFO:Initializing create_model()
2024-03-02 19:05:39,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:39,415:INFO:Checking exceptions
2024-03-02 19:05:39,415:INFO:Importing libraries
2024-03-02 19:05:39,416:INFO:Copying training dataset
2024-03-02 19:05:39,422:INFO:Defining folds
2024-03-02 19:05:39,422:INFO:Declaring metric variables
2024-03-02 19:05:39,426:INFO:Importing untrained model
2024-03-02 19:05:39,431:INFO:Bayesian Ridge Imported successfully
2024-03-02 19:05:39,439:INFO:Starting cross validation
2024-03-02 19:05:39,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:39,524:INFO:Calculating mean and std
2024-03-02 19:05:39,526:INFO:Creating metrics dataframe
2024-03-02 19:05:39,527:INFO:Uploading results into container
2024-03-02 19:05:39,528:INFO:Uploading model into container now
2024-03-02 19:05:39,528:INFO:_master_model_container: 8
2024-03-02 19:05:39,528:INFO:_display_container: 2
2024-03-02 19:05:39,529:INFO:BayesianRidge()
2024-03-02 19:05:39,529:INFO:create_model() successfully completed......................................
2024-03-02 19:05:39,604:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:39,605:INFO:Creating metrics dataframe
2024-03-02 19:05:39,616:INFO:Initializing Passive Aggressive Regressor
2024-03-02 19:05:39,616:INFO:Total runtime is 0.14633861382802327 minutes
2024-03-02 19:05:39,620:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:39,620:INFO:Initializing create_model()
2024-03-02 19:05:39,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:39,620:INFO:Checking exceptions
2024-03-02 19:05:39,620:INFO:Importing libraries
2024-03-02 19:05:39,620:INFO:Copying training dataset
2024-03-02 19:05:39,626:INFO:Defining folds
2024-03-02 19:05:39,627:INFO:Declaring metric variables
2024-03-02 19:05:39,631:INFO:Importing untrained model
2024-03-02 19:05:39,634:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 19:05:39,642:INFO:Starting cross validation
2024-03-02 19:05:39,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:39,748:INFO:Calculating mean and std
2024-03-02 19:05:39,749:INFO:Creating metrics dataframe
2024-03-02 19:05:39,751:INFO:Uploading results into container
2024-03-02 19:05:39,751:INFO:Uploading model into container now
2024-03-02 19:05:39,751:INFO:_master_model_container: 9
2024-03-02 19:05:39,752:INFO:_display_container: 2
2024-03-02 19:05:39,752:INFO:PassiveAggressiveRegressor(random_state=123)
2024-03-02 19:05:39,752:INFO:create_model() successfully completed......................................
2024-03-02 19:05:39,836:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:39,837:INFO:Creating metrics dataframe
2024-03-02 19:05:39,846:INFO:Initializing Huber Regressor
2024-03-02 19:05:39,846:INFO:Total runtime is 0.15018169482549032 minutes
2024-03-02 19:05:39,850:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:39,851:INFO:Initializing create_model()
2024-03-02 19:05:39,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:39,851:INFO:Checking exceptions
2024-03-02 19:05:39,851:INFO:Importing libraries
2024-03-02 19:05:39,851:INFO:Copying training dataset
2024-03-02 19:05:39,859:INFO:Defining folds
2024-03-02 19:05:39,859:INFO:Declaring metric variables
2024-03-02 19:05:39,864:INFO:Importing untrained model
2024-03-02 19:05:39,869:INFO:Huber Regressor Imported successfully
2024-03-02 19:05:39,879:INFO:Starting cross validation
2024-03-02 19:05:39,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:40,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,073:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:05:40,091:INFO:Calculating mean and std
2024-03-02 19:05:40,102:INFO:Creating metrics dataframe
2024-03-02 19:05:40,108:INFO:Uploading results into container
2024-03-02 19:05:40,109:INFO:Uploading model into container now
2024-03-02 19:05:40,109:INFO:_master_model_container: 10
2024-03-02 19:05:40,110:INFO:_display_container: 2
2024-03-02 19:05:40,110:INFO:HuberRegressor()
2024-03-02 19:05:40,110:INFO:create_model() successfully completed......................................
2024-03-02 19:05:40,265:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:40,265:INFO:Creating metrics dataframe
2024-03-02 19:05:40,274:INFO:Initializing K Neighbors Regressor
2024-03-02 19:05:40,274:INFO:Total runtime is 0.1573115070660909 minutes
2024-03-02 19:05:40,278:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:40,280:INFO:Initializing create_model()
2024-03-02 19:05:40,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:40,280:INFO:Checking exceptions
2024-03-02 19:05:40,280:INFO:Importing libraries
2024-03-02 19:05:40,280:INFO:Copying training dataset
2024-03-02 19:05:40,287:INFO:Defining folds
2024-03-02 19:05:40,287:INFO:Declaring metric variables
2024-03-02 19:05:40,290:INFO:Importing untrained model
2024-03-02 19:05:40,296:INFO:K Neighbors Regressor Imported successfully
2024-03-02 19:05:40,306:INFO:Starting cross validation
2024-03-02 19:05:40,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:40,476:INFO:Calculating mean and std
2024-03-02 19:05:40,477:INFO:Creating metrics dataframe
2024-03-02 19:05:40,479:INFO:Uploading results into container
2024-03-02 19:05:40,479:INFO:Uploading model into container now
2024-03-02 19:05:40,480:INFO:_master_model_container: 11
2024-03-02 19:05:40,480:INFO:_display_container: 2
2024-03-02 19:05:40,480:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 19:05:40,480:INFO:create_model() successfully completed......................................
2024-03-02 19:05:40,576:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:40,576:INFO:Creating metrics dataframe
2024-03-02 19:05:40,594:INFO:Initializing Decision Tree Regressor
2024-03-02 19:05:40,594:INFO:Total runtime is 0.16264720757802328 minutes
2024-03-02 19:05:40,602:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:40,603:INFO:Initializing create_model()
2024-03-02 19:05:40,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:40,603:INFO:Checking exceptions
2024-03-02 19:05:40,603:INFO:Importing libraries
2024-03-02 19:05:40,603:INFO:Copying training dataset
2024-03-02 19:05:40,613:INFO:Defining folds
2024-03-02 19:05:40,613:INFO:Declaring metric variables
2024-03-02 19:05:40,622:INFO:Importing untrained model
2024-03-02 19:05:40,627:INFO:Decision Tree Regressor Imported successfully
2024-03-02 19:05:40,638:INFO:Starting cross validation
2024-03-02 19:05:40,641:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:40,824:INFO:Calculating mean and std
2024-03-02 19:05:40,825:INFO:Creating metrics dataframe
2024-03-02 19:05:40,826:INFO:Uploading results into container
2024-03-02 19:05:40,827:INFO:Uploading model into container now
2024-03-02 19:05:40,827:INFO:_master_model_container: 12
2024-03-02 19:05:40,827:INFO:_display_container: 2
2024-03-02 19:05:40,828:INFO:DecisionTreeRegressor(random_state=123)
2024-03-02 19:05:40,828:INFO:create_model() successfully completed......................................
2024-03-02 19:05:40,925:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:40,925:INFO:Creating metrics dataframe
2024-03-02 19:05:40,940:INFO:Initializing Random Forest Regressor
2024-03-02 19:05:40,940:INFO:Total runtime is 0.16840447982152304 minutes
2024-03-02 19:05:40,943:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:40,943:INFO:Initializing create_model()
2024-03-02 19:05:40,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:40,943:INFO:Checking exceptions
2024-03-02 19:05:40,944:INFO:Importing libraries
2024-03-02 19:05:40,944:INFO:Copying training dataset
2024-03-02 19:05:40,948:INFO:Defining folds
2024-03-02 19:05:40,948:INFO:Declaring metric variables
2024-03-02 19:05:40,953:INFO:Importing untrained model
2024-03-02 19:05:40,958:INFO:Random Forest Regressor Imported successfully
2024-03-02 19:05:40,968:INFO:Starting cross validation
2024-03-02 19:05:40,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:42,150:INFO:Calculating mean and std
2024-03-02 19:05:42,152:INFO:Creating metrics dataframe
2024-03-02 19:05:42,153:INFO:Uploading results into container
2024-03-02 19:05:42,154:INFO:Uploading model into container now
2024-03-02 19:05:42,155:INFO:_master_model_container: 13
2024-03-02 19:05:42,155:INFO:_display_container: 2
2024-03-02 19:05:42,155:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:05:42,155:INFO:create_model() successfully completed......................................
2024-03-02 19:05:42,248:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:42,248:INFO:Creating metrics dataframe
2024-03-02 19:05:42,267:INFO:Initializing Extra Trees Regressor
2024-03-02 19:05:42,267:INFO:Total runtime is 0.19053040345509847 minutes
2024-03-02 19:05:42,272:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:42,273:INFO:Initializing create_model()
2024-03-02 19:05:42,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:42,273:INFO:Checking exceptions
2024-03-02 19:05:42,273:INFO:Importing libraries
2024-03-02 19:05:42,273:INFO:Copying training dataset
2024-03-02 19:05:42,280:INFO:Defining folds
2024-03-02 19:05:42,280:INFO:Declaring metric variables
2024-03-02 19:05:42,284:INFO:Importing untrained model
2024-03-02 19:05:42,290:INFO:Extra Trees Regressor Imported successfully
2024-03-02 19:05:42,297:INFO:Starting cross validation
2024-03-02 19:05:42,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:42,986:INFO:Calculating mean and std
2024-03-02 19:05:42,987:INFO:Creating metrics dataframe
2024-03-02 19:05:42,990:INFO:Uploading results into container
2024-03-02 19:05:42,990:INFO:Uploading model into container now
2024-03-02 19:05:42,991:INFO:_master_model_container: 14
2024-03-02 19:05:42,991:INFO:_display_container: 2
2024-03-02 19:05:42,992:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:05:42,992:INFO:create_model() successfully completed......................................
2024-03-02 19:05:43,085:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:43,085:INFO:Creating metrics dataframe
2024-03-02 19:05:43,097:INFO:Initializing AdaBoost Regressor
2024-03-02 19:05:43,097:INFO:Total runtime is 0.20435816844304402 minutes
2024-03-02 19:05:43,103:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:43,103:INFO:Initializing create_model()
2024-03-02 19:05:43,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:43,104:INFO:Checking exceptions
2024-03-02 19:05:43,104:INFO:Importing libraries
2024-03-02 19:05:43,104:INFO:Copying training dataset
2024-03-02 19:05:43,108:INFO:Defining folds
2024-03-02 19:05:43,108:INFO:Declaring metric variables
2024-03-02 19:05:43,112:INFO:Importing untrained model
2024-03-02 19:05:43,118:INFO:AdaBoost Regressor Imported successfully
2024-03-02 19:05:43,127:INFO:Starting cross validation
2024-03-02 19:05:43,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:43,614:INFO:Calculating mean and std
2024-03-02 19:05:43,614:INFO:Creating metrics dataframe
2024-03-02 19:05:43,617:INFO:Uploading results into container
2024-03-02 19:05:43,618:INFO:Uploading model into container now
2024-03-02 19:05:43,618:INFO:_master_model_container: 15
2024-03-02 19:05:43,618:INFO:_display_container: 2
2024-03-02 19:05:43,618:INFO:AdaBoostRegressor(random_state=123)
2024-03-02 19:05:43,618:INFO:create_model() successfully completed......................................
2024-03-02 19:05:43,707:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:43,707:INFO:Creating metrics dataframe
2024-03-02 19:05:43,720:INFO:Initializing Gradient Boosting Regressor
2024-03-02 19:05:43,722:INFO:Total runtime is 0.21477052370707195 minutes
2024-03-02 19:05:43,725:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:43,726:INFO:Initializing create_model()
2024-03-02 19:05:43,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:43,726:INFO:Checking exceptions
2024-03-02 19:05:43,726:INFO:Importing libraries
2024-03-02 19:05:43,726:INFO:Copying training dataset
2024-03-02 19:05:43,734:INFO:Defining folds
2024-03-02 19:05:43,735:INFO:Declaring metric variables
2024-03-02 19:05:43,738:INFO:Importing untrained model
2024-03-02 19:05:43,742:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 19:05:43,752:INFO:Starting cross validation
2024-03-02 19:05:43,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:44,363:INFO:Calculating mean and std
2024-03-02 19:05:44,364:INFO:Creating metrics dataframe
2024-03-02 19:05:44,367:INFO:Uploading results into container
2024-03-02 19:05:44,367:INFO:Uploading model into container now
2024-03-02 19:05:44,368:INFO:_master_model_container: 16
2024-03-02 19:05:44,368:INFO:_display_container: 2
2024-03-02 19:05:44,368:INFO:GradientBoostingRegressor(random_state=123)
2024-03-02 19:05:44,368:INFO:create_model() successfully completed......................................
2024-03-02 19:05:44,456:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:44,456:INFO:Creating metrics dataframe
2024-03-02 19:05:44,469:INFO:Initializing Extreme Gradient Boosting
2024-03-02 19:05:44,469:INFO:Total runtime is 0.22722465991973878 minutes
2024-03-02 19:05:44,473:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:44,473:INFO:Initializing create_model()
2024-03-02 19:05:44,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:44,474:INFO:Checking exceptions
2024-03-02 19:05:44,474:INFO:Importing libraries
2024-03-02 19:05:44,474:INFO:Copying training dataset
2024-03-02 19:05:44,481:INFO:Defining folds
2024-03-02 19:05:44,481:INFO:Declaring metric variables
2024-03-02 19:05:44,486:INFO:Importing untrained model
2024-03-02 19:05:44,492:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 19:05:44,507:INFO:Starting cross validation
2024-03-02 19:05:44,508:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:46,764:INFO:Calculating mean and std
2024-03-02 19:05:46,765:INFO:Creating metrics dataframe
2024-03-02 19:05:46,768:INFO:Uploading results into container
2024-03-02 19:05:46,768:INFO:Uploading model into container now
2024-03-02 19:05:46,768:INFO:_master_model_container: 17
2024-03-02 19:05:46,769:INFO:_display_container: 2
2024-03-02 19:05:46,769:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-03-02 19:05:46,769:INFO:create_model() successfully completed......................................
2024-03-02 19:05:46,860:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:46,860:INFO:Creating metrics dataframe
2024-03-02 19:05:46,878:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 19:05:46,878:INFO:Total runtime is 0.26738127072652185 minutes
2024-03-02 19:05:46,884:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:46,884:INFO:Initializing create_model()
2024-03-02 19:05:46,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:46,884:INFO:Checking exceptions
2024-03-02 19:05:46,884:INFO:Importing libraries
2024-03-02 19:05:46,885:INFO:Copying training dataset
2024-03-02 19:05:46,892:INFO:Defining folds
2024-03-02 19:05:46,892:INFO:Declaring metric variables
2024-03-02 19:05:46,896:INFO:Importing untrained model
2024-03-02 19:05:46,904:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 19:05:46,913:INFO:Starting cross validation
2024-03-02 19:05:46,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:47,761:INFO:Calculating mean and std
2024-03-02 19:05:47,763:INFO:Creating metrics dataframe
2024-03-02 19:05:47,765:INFO:Uploading results into container
2024-03-02 19:05:47,766:INFO:Uploading model into container now
2024-03-02 19:05:47,767:INFO:_master_model_container: 18
2024-03-02 19:05:47,767:INFO:_display_container: 2
2024-03-02 19:05:47,768:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:05:47,768:INFO:create_model() successfully completed......................................
2024-03-02 19:05:47,853:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:47,853:INFO:Creating metrics dataframe
2024-03-02 19:05:47,864:INFO:Initializing Dummy Regressor
2024-03-02 19:05:47,864:INFO:Total runtime is 0.2838154514630636 minutes
2024-03-02 19:05:47,868:INFO:SubProcess create_model() called ==================================
2024-03-02 19:05:47,868:INFO:Initializing create_model()
2024-03-02 19:05:47,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214041132D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:47,868:INFO:Checking exceptions
2024-03-02 19:05:47,868:INFO:Importing libraries
2024-03-02 19:05:47,868:INFO:Copying training dataset
2024-03-02 19:05:47,873:INFO:Defining folds
2024-03-02 19:05:47,874:INFO:Declaring metric variables
2024-03-02 19:05:47,877:INFO:Importing untrained model
2024-03-02 19:05:47,880:INFO:Dummy Regressor Imported successfully
2024-03-02 19:05:47,887:INFO:Starting cross validation
2024-03-02 19:05:47,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:05:47,961:INFO:Calculating mean and std
2024-03-02 19:05:47,961:INFO:Creating metrics dataframe
2024-03-02 19:05:47,962:INFO:Uploading results into container
2024-03-02 19:05:47,962:INFO:Uploading model into container now
2024-03-02 19:05:47,963:INFO:_master_model_container: 19
2024-03-02 19:05:47,963:INFO:_display_container: 2
2024-03-02 19:05:47,964:INFO:DummyRegressor()
2024-03-02 19:05:47,964:INFO:create_model() successfully completed......................................
2024-03-02 19:05:48,055:INFO:SubProcess create_model() end ==================================
2024-03-02 19:05:48,055:INFO:Creating metrics dataframe
2024-03-02 19:05:48,075:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-02 19:05:48,086:INFO:Initializing create_model()
2024-03-02 19:05:48,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021401046D50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:05:48,087:INFO:Checking exceptions
2024-03-02 19:05:48,090:INFO:Importing libraries
2024-03-02 19:05:48,090:INFO:Copying training dataset
2024-03-02 19:05:48,096:INFO:Defining folds
2024-03-02 19:05:48,097:INFO:Declaring metric variables
2024-03-02 19:05:48,097:INFO:Importing untrained model
2024-03-02 19:05:48,097:INFO:Declaring custom model
2024-03-02 19:05:48,098:INFO:Extra Trees Regressor Imported successfully
2024-03-02 19:05:48,099:INFO:Cross validation set to False
2024-03-02 19:05:48,100:INFO:Fitting Model
2024-03-02 19:05:48,210:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:05:48,211:INFO:create_model() successfully completed......................................
2024-03-02 19:05:48,336:INFO:_master_model_container: 19
2024-03-02 19:05:48,336:INFO:_display_container: 2
2024-03-02 19:05:48,336:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:05:48,336:INFO:compare_models() successfully completed......................................
2024-03-02 19:13:00,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 19:13:01,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 19:13:01,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 19:13:01,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 19:15:01,270:INFO:PyCaret RegressionExperiment
2024-03-02 19:15:01,270:INFO:Logging name: reg-default-name
2024-03-02 19:15:01,270:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 19:15:01,270:INFO:version 3.3.0
2024-03-02 19:15:01,270:INFO:Initializing setup()
2024-03-02 19:15:01,270:INFO:self.USI: deea
2024-03-02 19:15:01,270:INFO:self._variable_keys: {'y_train', 'gpu_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_groups_param', '_ml_usecase', 'logging_param', 'fold_generator', 'USI', 'transform_target_param', 'X_train', 'pipeline', 'target_param', 'y', 'html_param', 'memory', 'idx', '_available_plots', 'exp_id', 'X', 'exp_name_log', 'y_test', 'n_jobs_param', 'data', 'seed', 'X_test', 'log_plots_param'}
2024-03-02 19:15:01,270:INFO:Checking environment
2024-03-02 19:15:01,270:INFO:python_version: 3.11.0
2024-03-02 19:15:01,271:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-03-02 19:15:01,271:INFO:machine: AMD64
2024-03-02 19:15:01,271:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-02 19:15:01,367:INFO:Memory: svmem(total=8428179456, available=1443803136, percent=82.9, used=6984376320, free=1443803136)
2024-03-02 19:15:01,367:INFO:Physical Core: 4
2024-03-02 19:15:01,367:INFO:Logical Core: 8
2024-03-02 19:15:01,368:INFO:Checking libraries
2024-03-02 19:15:01,368:INFO:System:
2024-03-02 19:15:01,368:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-03-02 19:15:01,368:INFO:executable: d:\dev\venv\Scripts\python.exe
2024-03-02 19:15:01,368:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-02 19:15:01,368:INFO:PyCaret required dependencies:
2024-03-02 19:15:01,693:INFO:                 pip: 23.2.1
2024-03-02 19:15:01,693:INFO:          setuptools: 68.2.2
2024-03-02 19:15:01,693:INFO:             pycaret: 3.3.0
2024-03-02 19:15:01,693:INFO:             IPython: 8.14.0
2024-03-02 19:15:01,693:INFO:          ipywidgets: 8.1.1
2024-03-02 19:15:01,694:INFO:                tqdm: 4.66.1
2024-03-02 19:15:01,694:INFO:               numpy: 1.26.0
2024-03-02 19:15:01,694:INFO:              pandas: 2.1.1
2024-03-02 19:15:01,694:INFO:              jinja2: 3.1.2
2024-03-02 19:15:01,694:INFO:               scipy: 1.11.3
2024-03-02 19:15:01,694:INFO:              joblib: 1.3.2
2024-03-02 19:15:01,694:INFO:             sklearn: 1.4.1.post1
2024-03-02 19:15:01,694:INFO:                pyod: 1.1.3
2024-03-02 19:15:01,694:INFO:            imblearn: 0.12.0
2024-03-02 19:15:01,694:INFO:   category_encoders: 2.6.3
2024-03-02 19:15:01,694:INFO:            lightgbm: 4.3.0
2024-03-02 19:15:01,694:INFO:               numba: 0.59.0
2024-03-02 19:15:01,694:INFO:            requests: 2.31.0
2024-03-02 19:15:01,695:INFO:          matplotlib: 3.7.5
2024-03-02 19:15:01,695:INFO:          scikitplot: 0.3.7
2024-03-02 19:15:01,695:INFO:         yellowbrick: 1.5
2024-03-02 19:15:01,695:INFO:              plotly: 5.19.0
2024-03-02 19:15:01,695:INFO:    plotly-resampler: Not installed
2024-03-02 19:15:01,695:INFO:             kaleido: 0.2.1
2024-03-02 19:15:01,695:INFO:           schemdraw: 0.15
2024-03-02 19:15:01,695:INFO:         statsmodels: 0.14.1
2024-03-02 19:15:01,695:INFO:              sktime: 0.27.0
2024-03-02 19:15:01,695:INFO:               tbats: 1.1.3
2024-03-02 19:15:01,695:INFO:            pmdarima: 2.0.4
2024-03-02 19:15:01,695:INFO:              psutil: 5.9.5
2024-03-02 19:15:01,696:INFO:          markupsafe: 2.1.3
2024-03-02 19:15:01,696:INFO:             pickle5: Not installed
2024-03-02 19:15:01,696:INFO:         cloudpickle: 3.0.0
2024-03-02 19:15:01,696:INFO:         deprecation: 2.1.0
2024-03-02 19:15:01,696:INFO:              xxhash: 3.4.1
2024-03-02 19:15:01,696:INFO:           wurlitzer: Not installed
2024-03-02 19:15:01,696:INFO:PyCaret optional dependencies:
2024-03-02 19:15:02,178:INFO:                shap: Not installed
2024-03-02 19:15:02,178:INFO:           interpret: Not installed
2024-03-02 19:15:02,178:INFO:                umap: Not installed
2024-03-02 19:15:02,178:INFO:     ydata_profiling: Not installed
2024-03-02 19:15:02,178:INFO:  explainerdashboard: Not installed
2024-03-02 19:15:02,178:INFO:             autoviz: Not installed
2024-03-02 19:15:02,178:INFO:           fairlearn: Not installed
2024-03-02 19:15:02,178:INFO:          deepchecks: Not installed
2024-03-02 19:15:02,178:INFO:             xgboost: 2.0.3
2024-03-02 19:15:02,178:INFO:            catboost: Not installed
2024-03-02 19:15:02,178:INFO:              kmodes: Not installed
2024-03-02 19:15:02,178:INFO:             mlxtend: Not installed
2024-03-02 19:15:02,178:INFO:       statsforecast: Not installed
2024-03-02 19:15:02,179:INFO:        tune_sklearn: Not installed
2024-03-02 19:15:02,179:INFO:                 ray: Not installed
2024-03-02 19:15:02,179:INFO:            hyperopt: Not installed
2024-03-02 19:15:02,179:INFO:              optuna: Not installed
2024-03-02 19:15:02,179:INFO:               skopt: Not installed
2024-03-02 19:15:02,179:INFO:              mlflow: Not installed
2024-03-02 19:15:02,179:INFO:              gradio: Not installed
2024-03-02 19:15:02,179:INFO:             fastapi: Not installed
2024-03-02 19:15:02,179:INFO:             uvicorn: Not installed
2024-03-02 19:15:02,179:INFO:              m2cgen: Not installed
2024-03-02 19:15:02,179:INFO:           evidently: Not installed
2024-03-02 19:15:02,179:INFO:               fugue: Not installed
2024-03-02 19:15:02,179:INFO:           streamlit: 1.31.1
2024-03-02 19:15:02,179:INFO:             prophet: Not installed
2024-03-02 19:15:02,179:INFO:None
2024-03-02 19:15:02,179:INFO:Set up data.
2024-03-02 19:15:02,189:INFO:Set up folding strategy.
2024-03-02 19:15:02,189:INFO:Set up train/test split.
2024-03-02 19:15:02,263:INFO:Set up index.
2024-03-02 19:15:02,263:INFO:Assigning column types.
2024-03-02 19:15:02,270:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 19:15:02,270:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,277:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,285:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,406:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,467:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:02,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:02,470:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,474:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,604:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:02,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:02,607:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 19:15:02,615:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,748:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,749:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:02,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:02,757:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,766:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:02,904:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:02,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:02,908:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 19:15:02,920:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,060:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,063:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,075:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,203:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,205:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 19:15:03,289:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,351:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,481:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,484:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 19:15:03,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,596:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 19:15:03,720:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,722:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 19:15:03,856:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:03,976:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:03,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:04,088:INFO:Preparing preprocessing pipeline...
2024-03-02 19:15:04,088:INFO:Set up simple imputation.
2024-03-02 19:15:04,245:INFO:Finished creating preprocessing pipeline.
2024-03-02 19:15:04,276:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amir\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crim', 'zn', 'indus', 'chas',
                                             'nox', 'rm', 'age', 'dis', 'rad',
                                             'tax', 'ptratio', 'black',
                                             'lstat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-03-02 19:15:04,276:INFO:Creating final display dataframe.
2024-03-02 19:15:04,354:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              medv
2                   Target type        Regression
3           Original data shape         (506, 14)
4        Transformed data shape         (506, 14)
5   Transformed train set shape         (354, 14)
6    Transformed test set shape         (152, 14)
7              Numeric features                13
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              deea
2024-03-02 19:15:04,487:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:04,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:04,626:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 19:15:04,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 19:15:04,697:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 19:15:04,697:INFO:setup() successfully completed in 3.5s...............
2024-03-02 19:15:07,145:INFO:Initializing compare_models()
2024-03-02 19:15:07,146:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-02 19:15:07,146:INFO:Checking exceptions
2024-03-02 19:15:07,150:INFO:Preparing display monitor
2024-03-02 19:15:07,194:INFO:Initializing Linear Regression
2024-03-02 19:15:07,194:INFO:Total runtime is 8.829434712727864e-06 minutes
2024-03-02 19:15:07,199:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:07,199:INFO:Initializing create_model()
2024-03-02 19:15:07,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:07,199:INFO:Checking exceptions
2024-03-02 19:15:07,200:INFO:Importing libraries
2024-03-02 19:15:07,200:INFO:Copying training dataset
2024-03-02 19:15:07,207:INFO:Defining folds
2024-03-02 19:15:07,208:INFO:Declaring metric variables
2024-03-02 19:15:07,216:INFO:Importing untrained model
2024-03-02 19:15:07,222:INFO:Linear Regression Imported successfully
2024-03-02 19:15:07,233:INFO:Starting cross validation
2024-03-02 19:15:07,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:20,409:INFO:Calculating mean and std
2024-03-02 19:15:20,411:INFO:Creating metrics dataframe
2024-03-02 19:15:20,414:INFO:Uploading results into container
2024-03-02 19:15:20,415:INFO:Uploading model into container now
2024-03-02 19:15:20,415:INFO:_master_model_container: 1
2024-03-02 19:15:20,415:INFO:_display_container: 2
2024-03-02 19:15:20,416:INFO:LinearRegression(n_jobs=-1)
2024-03-02 19:15:20,416:INFO:create_model() successfully completed......................................
2024-03-02 19:15:20,511:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:20,512:INFO:Creating metrics dataframe
2024-03-02 19:15:20,550:INFO:Initializing Lasso Regression
2024-03-02 19:15:20,550:INFO:Total runtime is 0.22260129849116006 minutes
2024-03-02 19:15:20,554:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:20,554:INFO:Initializing create_model()
2024-03-02 19:15:20,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:20,554:INFO:Checking exceptions
2024-03-02 19:15:20,554:INFO:Importing libraries
2024-03-02 19:15:20,555:INFO:Copying training dataset
2024-03-02 19:15:20,563:INFO:Defining folds
2024-03-02 19:15:20,563:INFO:Declaring metric variables
2024-03-02 19:15:20,567:INFO:Importing untrained model
2024-03-02 19:15:20,572:INFO:Lasso Regression Imported successfully
2024-03-02 19:15:20,581:INFO:Starting cross validation
2024-03-02 19:15:20,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:20,752:INFO:Calculating mean and std
2024-03-02 19:15:20,753:INFO:Creating metrics dataframe
2024-03-02 19:15:20,755:INFO:Uploading results into container
2024-03-02 19:15:20,755:INFO:Uploading model into container now
2024-03-02 19:15:20,756:INFO:_master_model_container: 2
2024-03-02 19:15:20,756:INFO:_display_container: 2
2024-03-02 19:15:20,756:INFO:Lasso(random_state=123)
2024-03-02 19:15:20,756:INFO:create_model() successfully completed......................................
2024-03-02 19:15:20,838:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:20,838:INFO:Creating metrics dataframe
2024-03-02 19:15:20,847:INFO:Initializing Ridge Regression
2024-03-02 19:15:20,847:INFO:Total runtime is 0.22755572795867918 minutes
2024-03-02 19:15:20,853:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:20,854:INFO:Initializing create_model()
2024-03-02 19:15:20,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:20,854:INFO:Checking exceptions
2024-03-02 19:15:20,854:INFO:Importing libraries
2024-03-02 19:15:20,854:INFO:Copying training dataset
2024-03-02 19:15:20,863:INFO:Defining folds
2024-03-02 19:15:20,863:INFO:Declaring metric variables
2024-03-02 19:15:20,866:INFO:Importing untrained model
2024-03-02 19:15:20,871:INFO:Ridge Regression Imported successfully
2024-03-02 19:15:20,880:INFO:Starting cross validation
2024-03-02 19:15:20,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:20,980:INFO:Calculating mean and std
2024-03-02 19:15:20,981:INFO:Creating metrics dataframe
2024-03-02 19:15:20,983:INFO:Uploading results into container
2024-03-02 19:15:20,983:INFO:Uploading model into container now
2024-03-02 19:15:20,984:INFO:_master_model_container: 3
2024-03-02 19:15:20,984:INFO:_display_container: 2
2024-03-02 19:15:20,984:INFO:Ridge(random_state=123)
2024-03-02 19:15:20,984:INFO:create_model() successfully completed......................................
2024-03-02 19:15:21,079:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:21,079:INFO:Creating metrics dataframe
2024-03-02 19:15:21,092:INFO:Initializing Elastic Net
2024-03-02 19:15:21,092:INFO:Total runtime is 0.23163124720255532 minutes
2024-03-02 19:15:21,099:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:21,100:INFO:Initializing create_model()
2024-03-02 19:15:21,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:21,100:INFO:Checking exceptions
2024-03-02 19:15:21,100:INFO:Importing libraries
2024-03-02 19:15:21,100:INFO:Copying training dataset
2024-03-02 19:15:21,106:INFO:Defining folds
2024-03-02 19:15:21,108:INFO:Declaring metric variables
2024-03-02 19:15:21,111:INFO:Importing untrained model
2024-03-02 19:15:21,116:INFO:Elastic Net Imported successfully
2024-03-02 19:15:21,123:INFO:Starting cross validation
2024-03-02 19:15:21,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:21,199:INFO:Calculating mean and std
2024-03-02 19:15:21,199:INFO:Creating metrics dataframe
2024-03-02 19:15:21,201:INFO:Uploading results into container
2024-03-02 19:15:21,201:INFO:Uploading model into container now
2024-03-02 19:15:21,202:INFO:_master_model_container: 4
2024-03-02 19:15:21,202:INFO:_display_container: 2
2024-03-02 19:15:21,202:INFO:ElasticNet(random_state=123)
2024-03-02 19:15:21,202:INFO:create_model() successfully completed......................................
2024-03-02 19:15:21,301:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:21,301:INFO:Creating metrics dataframe
2024-03-02 19:15:21,314:INFO:Initializing Least Angle Regression
2024-03-02 19:15:21,314:INFO:Total runtime is 0.23533139626185098 minutes
2024-03-02 19:15:21,319:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:21,320:INFO:Initializing create_model()
2024-03-02 19:15:21,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:21,320:INFO:Checking exceptions
2024-03-02 19:15:21,320:INFO:Importing libraries
2024-03-02 19:15:21,320:INFO:Copying training dataset
2024-03-02 19:15:21,330:INFO:Defining folds
2024-03-02 19:15:21,330:INFO:Declaring metric variables
2024-03-02 19:15:21,333:INFO:Importing untrained model
2024-03-02 19:15:21,341:INFO:Least Angle Regression Imported successfully
2024-03-02 19:15:21,347:INFO:Starting cross validation
2024-03-02 19:15:21,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:21,466:INFO:Calculating mean and std
2024-03-02 19:15:21,467:INFO:Creating metrics dataframe
2024-03-02 19:15:21,468:INFO:Uploading results into container
2024-03-02 19:15:21,469:INFO:Uploading model into container now
2024-03-02 19:15:21,469:INFO:_master_model_container: 5
2024-03-02 19:15:21,469:INFO:_display_container: 2
2024-03-02 19:15:21,469:INFO:Lars(random_state=123)
2024-03-02 19:15:21,469:INFO:create_model() successfully completed......................................
2024-03-02 19:15:21,557:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:21,557:INFO:Creating metrics dataframe
2024-03-02 19:15:21,569:INFO:Initializing Lasso Least Angle Regression
2024-03-02 19:15:21,569:INFO:Total runtime is 0.23959041436513265 minutes
2024-03-02 19:15:21,576:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:21,577:INFO:Initializing create_model()
2024-03-02 19:15:21,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:21,577:INFO:Checking exceptions
2024-03-02 19:15:21,577:INFO:Importing libraries
2024-03-02 19:15:21,577:INFO:Copying training dataset
2024-03-02 19:15:21,583:INFO:Defining folds
2024-03-02 19:15:21,583:INFO:Declaring metric variables
2024-03-02 19:15:21,587:INFO:Importing untrained model
2024-03-02 19:15:21,594:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 19:15:21,601:INFO:Starting cross validation
2024-03-02 19:15:21,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:21,688:INFO:Calculating mean and std
2024-03-02 19:15:21,690:INFO:Creating metrics dataframe
2024-03-02 19:15:21,691:INFO:Uploading results into container
2024-03-02 19:15:21,693:INFO:Uploading model into container now
2024-03-02 19:15:21,693:INFO:_master_model_container: 6
2024-03-02 19:15:21,693:INFO:_display_container: 2
2024-03-02 19:15:21,693:INFO:LassoLars(random_state=123)
2024-03-02 19:15:21,693:INFO:create_model() successfully completed......................................
2024-03-02 19:15:21,794:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:21,794:INFO:Creating metrics dataframe
2024-03-02 19:15:21,808:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 19:15:21,809:INFO:Total runtime is 0.24358333746592203 minutes
2024-03-02 19:15:21,816:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:21,816:INFO:Initializing create_model()
2024-03-02 19:15:21,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:21,817:INFO:Checking exceptions
2024-03-02 19:15:21,817:INFO:Importing libraries
2024-03-02 19:15:21,817:INFO:Copying training dataset
2024-03-02 19:15:21,824:INFO:Defining folds
2024-03-02 19:15:21,824:INFO:Declaring metric variables
2024-03-02 19:15:21,829:INFO:Importing untrained model
2024-03-02 19:15:21,834:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 19:15:21,844:INFO:Starting cross validation
2024-03-02 19:15:21,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:21,931:INFO:Calculating mean and std
2024-03-02 19:15:21,932:INFO:Creating metrics dataframe
2024-03-02 19:15:21,934:INFO:Uploading results into container
2024-03-02 19:15:21,934:INFO:Uploading model into container now
2024-03-02 19:15:21,935:INFO:_master_model_container: 7
2024-03-02 19:15:21,935:INFO:_display_container: 2
2024-03-02 19:15:21,935:INFO:OrthogonalMatchingPursuit()
2024-03-02 19:15:21,935:INFO:create_model() successfully completed......................................
2024-03-02 19:15:22,033:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:22,034:INFO:Creating metrics dataframe
2024-03-02 19:15:22,050:INFO:Initializing Bayesian Ridge
2024-03-02 19:15:22,050:INFO:Total runtime is 0.24760640462239583 minutes
2024-03-02 19:15:22,060:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:22,061:INFO:Initializing create_model()
2024-03-02 19:15:22,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:22,062:INFO:Checking exceptions
2024-03-02 19:15:22,062:INFO:Importing libraries
2024-03-02 19:15:22,062:INFO:Copying training dataset
2024-03-02 19:15:22,068:INFO:Defining folds
2024-03-02 19:15:22,068:INFO:Declaring metric variables
2024-03-02 19:15:22,075:INFO:Importing untrained model
2024-03-02 19:15:22,082:INFO:Bayesian Ridge Imported successfully
2024-03-02 19:15:22,093:INFO:Starting cross validation
2024-03-02 19:15:22,094:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:22,185:INFO:Calculating mean and std
2024-03-02 19:15:22,186:INFO:Creating metrics dataframe
2024-03-02 19:15:22,188:INFO:Uploading results into container
2024-03-02 19:15:22,189:INFO:Uploading model into container now
2024-03-02 19:15:22,189:INFO:_master_model_container: 8
2024-03-02 19:15:22,189:INFO:_display_container: 2
2024-03-02 19:15:22,190:INFO:BayesianRidge()
2024-03-02 19:15:22,190:INFO:create_model() successfully completed......................................
2024-03-02 19:15:22,285:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:22,285:INFO:Creating metrics dataframe
2024-03-02 19:15:22,302:INFO:Initializing Passive Aggressive Regressor
2024-03-02 19:15:22,302:INFO:Total runtime is 0.2517958720525106 minutes
2024-03-02 19:15:22,309:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:22,309:INFO:Initializing create_model()
2024-03-02 19:15:22,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:22,310:INFO:Checking exceptions
2024-03-02 19:15:22,310:INFO:Importing libraries
2024-03-02 19:15:22,310:INFO:Copying training dataset
2024-03-02 19:15:22,317:INFO:Defining folds
2024-03-02 19:15:22,317:INFO:Declaring metric variables
2024-03-02 19:15:22,320:INFO:Importing untrained model
2024-03-02 19:15:22,326:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 19:15:22,337:INFO:Starting cross validation
2024-03-02 19:15:22,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:22,426:INFO:Calculating mean and std
2024-03-02 19:15:22,427:INFO:Creating metrics dataframe
2024-03-02 19:15:22,430:INFO:Uploading results into container
2024-03-02 19:15:22,430:INFO:Uploading model into container now
2024-03-02 19:15:22,431:INFO:_master_model_container: 9
2024-03-02 19:15:22,431:INFO:_display_container: 2
2024-03-02 19:15:22,432:INFO:PassiveAggressiveRegressor(random_state=123)
2024-03-02 19:15:22,432:INFO:create_model() successfully completed......................................
2024-03-02 19:15:22,527:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:22,527:INFO:Creating metrics dataframe
2024-03-02 19:15:22,543:INFO:Initializing Huber Regressor
2024-03-02 19:15:22,543:INFO:Total runtime is 0.255825146039327 minutes
2024-03-02 19:15:22,549:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:22,549:INFO:Initializing create_model()
2024-03-02 19:15:22,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:22,550:INFO:Checking exceptions
2024-03-02 19:15:22,550:INFO:Importing libraries
2024-03-02 19:15:22,550:INFO:Copying training dataset
2024-03-02 19:15:22,561:INFO:Defining folds
2024-03-02 19:15:22,561:INFO:Declaring metric variables
2024-03-02 19:15:22,566:INFO:Importing untrained model
2024-03-02 19:15:22,570:INFO:Huber Regressor Imported successfully
2024-03-02 19:15:22,580:INFO:Starting cross validation
2024-03-02 19:15:22,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:22,710:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,765:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-02 19:15:22,782:INFO:Calculating mean and std
2024-03-02 19:15:22,783:INFO:Creating metrics dataframe
2024-03-02 19:15:22,785:INFO:Uploading results into container
2024-03-02 19:15:22,785:INFO:Uploading model into container now
2024-03-02 19:15:22,786:INFO:_master_model_container: 10
2024-03-02 19:15:22,786:INFO:_display_container: 2
2024-03-02 19:15:22,786:INFO:HuberRegressor()
2024-03-02 19:15:22,786:INFO:create_model() successfully completed......................................
2024-03-02 19:15:22,867:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:22,867:INFO:Creating metrics dataframe
2024-03-02 19:15:22,876:INFO:Initializing K Neighbors Regressor
2024-03-02 19:15:22,876:INFO:Total runtime is 0.2613774100939433 minutes
2024-03-02 19:15:22,881:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:22,882:INFO:Initializing create_model()
2024-03-02 19:15:22,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:22,882:INFO:Checking exceptions
2024-03-02 19:15:22,882:INFO:Importing libraries
2024-03-02 19:15:22,882:INFO:Copying training dataset
2024-03-02 19:15:22,888:INFO:Defining folds
2024-03-02 19:15:22,888:INFO:Declaring metric variables
2024-03-02 19:15:22,893:INFO:Importing untrained model
2024-03-02 19:15:22,897:INFO:K Neighbors Regressor Imported successfully
2024-03-02 19:15:22,904:INFO:Starting cross validation
2024-03-02 19:15:22,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:23,105:INFO:Calculating mean and std
2024-03-02 19:15:23,107:INFO:Creating metrics dataframe
2024-03-02 19:15:23,111:INFO:Uploading results into container
2024-03-02 19:15:23,112:INFO:Uploading model into container now
2024-03-02 19:15:23,112:INFO:_master_model_container: 11
2024-03-02 19:15:23,113:INFO:_display_container: 2
2024-03-02 19:15:23,113:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 19:15:23,114:INFO:create_model() successfully completed......................................
2024-03-02 19:15:23,208:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:23,208:INFO:Creating metrics dataframe
2024-03-02 19:15:23,223:INFO:Initializing Decision Tree Regressor
2024-03-02 19:15:23,223:INFO:Total runtime is 0.2671605070432027 minutes
2024-03-02 19:15:23,229:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:23,229:INFO:Initializing create_model()
2024-03-02 19:15:23,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:23,229:INFO:Checking exceptions
2024-03-02 19:15:23,229:INFO:Importing libraries
2024-03-02 19:15:23,229:INFO:Copying training dataset
2024-03-02 19:15:23,237:INFO:Defining folds
2024-03-02 19:15:23,237:INFO:Declaring metric variables
2024-03-02 19:15:23,242:INFO:Importing untrained model
2024-03-02 19:15:23,247:INFO:Decision Tree Regressor Imported successfully
2024-03-02 19:15:23,254:INFO:Starting cross validation
2024-03-02 19:15:23,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:23,356:INFO:Calculating mean and std
2024-03-02 19:15:23,360:INFO:Creating metrics dataframe
2024-03-02 19:15:23,366:INFO:Uploading results into container
2024-03-02 19:15:23,367:INFO:Uploading model into container now
2024-03-02 19:15:23,368:INFO:_master_model_container: 12
2024-03-02 19:15:23,368:INFO:_display_container: 2
2024-03-02 19:15:23,369:INFO:DecisionTreeRegressor(random_state=123)
2024-03-02 19:15:23,369:INFO:create_model() successfully completed......................................
2024-03-02 19:15:23,494:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:23,494:INFO:Creating metrics dataframe
2024-03-02 19:15:23,502:INFO:Initializing Random Forest Regressor
2024-03-02 19:15:23,503:INFO:Total runtime is 0.27182666858037313 minutes
2024-03-02 19:15:23,508:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:23,508:INFO:Initializing create_model()
2024-03-02 19:15:23,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:23,508:INFO:Checking exceptions
2024-03-02 19:15:23,509:INFO:Importing libraries
2024-03-02 19:15:23,509:INFO:Copying training dataset
2024-03-02 19:15:23,514:INFO:Defining folds
2024-03-02 19:15:23,514:INFO:Declaring metric variables
2024-03-02 19:15:23,519:INFO:Importing untrained model
2024-03-02 19:15:23,526:INFO:Random Forest Regressor Imported successfully
2024-03-02 19:15:23,533:INFO:Starting cross validation
2024-03-02 19:15:23,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:24,324:INFO:Calculating mean and std
2024-03-02 19:15:24,329:INFO:Creating metrics dataframe
2024-03-02 19:15:24,336:INFO:Uploading results into container
2024-03-02 19:15:24,339:INFO:Uploading model into container now
2024-03-02 19:15:24,341:INFO:_master_model_container: 13
2024-03-02 19:15:24,341:INFO:_display_container: 2
2024-03-02 19:15:24,343:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:24,344:INFO:create_model() successfully completed......................................
2024-03-02 19:15:24,447:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:24,447:INFO:Creating metrics dataframe
2024-03-02 19:15:24,463:INFO:Initializing Extra Trees Regressor
2024-03-02 19:15:24,463:INFO:Total runtime is 0.2878175377845764 minutes
2024-03-02 19:15:24,468:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:24,469:INFO:Initializing create_model()
2024-03-02 19:15:24,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:24,469:INFO:Checking exceptions
2024-03-02 19:15:24,469:INFO:Importing libraries
2024-03-02 19:15:24,469:INFO:Copying training dataset
2024-03-02 19:15:24,479:INFO:Defining folds
2024-03-02 19:15:24,479:INFO:Declaring metric variables
2024-03-02 19:15:24,483:INFO:Importing untrained model
2024-03-02 19:15:24,491:INFO:Extra Trees Regressor Imported successfully
2024-03-02 19:15:24,499:INFO:Starting cross validation
2024-03-02 19:15:24,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:25,079:INFO:Calculating mean and std
2024-03-02 19:15:25,081:INFO:Creating metrics dataframe
2024-03-02 19:15:25,083:INFO:Uploading results into container
2024-03-02 19:15:25,083:INFO:Uploading model into container now
2024-03-02 19:15:25,084:INFO:_master_model_container: 14
2024-03-02 19:15:25,084:INFO:_display_container: 2
2024-03-02 19:15:25,084:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:25,085:INFO:create_model() successfully completed......................................
2024-03-02 19:15:25,177:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:25,179:INFO:Creating metrics dataframe
2024-03-02 19:15:25,195:INFO:Initializing AdaBoost Regressor
2024-03-02 19:15:25,195:INFO:Total runtime is 0.3000114281972249 minutes
2024-03-02 19:15:25,199:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:25,199:INFO:Initializing create_model()
2024-03-02 19:15:25,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:25,200:INFO:Checking exceptions
2024-03-02 19:15:25,200:INFO:Importing libraries
2024-03-02 19:15:25,200:INFO:Copying training dataset
2024-03-02 19:15:25,209:INFO:Defining folds
2024-03-02 19:15:25,209:INFO:Declaring metric variables
2024-03-02 19:15:25,212:INFO:Importing untrained model
2024-03-02 19:15:25,217:INFO:AdaBoost Regressor Imported successfully
2024-03-02 19:15:25,226:INFO:Starting cross validation
2024-03-02 19:15:25,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:25,663:INFO:Calculating mean and std
2024-03-02 19:15:25,663:INFO:Creating metrics dataframe
2024-03-02 19:15:25,666:INFO:Uploading results into container
2024-03-02 19:15:25,667:INFO:Uploading model into container now
2024-03-02 19:15:25,667:INFO:_master_model_container: 15
2024-03-02 19:15:25,667:INFO:_display_container: 2
2024-03-02 19:15:25,667:INFO:AdaBoostRegressor(random_state=123)
2024-03-02 19:15:25,668:INFO:create_model() successfully completed......................................
2024-03-02 19:15:25,770:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:25,771:INFO:Creating metrics dataframe
2024-03-02 19:15:25,787:INFO:Initializing Gradient Boosting Regressor
2024-03-02 19:15:25,788:INFO:Total runtime is 0.30990591446558635 minutes
2024-03-02 19:15:25,793:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:25,794:INFO:Initializing create_model()
2024-03-02 19:15:25,794:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:25,794:INFO:Checking exceptions
2024-03-02 19:15:25,794:INFO:Importing libraries
2024-03-02 19:15:25,794:INFO:Copying training dataset
2024-03-02 19:15:25,803:INFO:Defining folds
2024-03-02 19:15:25,804:INFO:Declaring metric variables
2024-03-02 19:15:25,810:INFO:Importing untrained model
2024-03-02 19:15:25,814:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 19:15:25,821:INFO:Starting cross validation
2024-03-02 19:15:25,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:26,377:INFO:Calculating mean and std
2024-03-02 19:15:26,378:INFO:Creating metrics dataframe
2024-03-02 19:15:26,379:INFO:Uploading results into container
2024-03-02 19:15:26,380:INFO:Uploading model into container now
2024-03-02 19:15:26,380:INFO:_master_model_container: 16
2024-03-02 19:15:26,380:INFO:_display_container: 2
2024-03-02 19:15:26,380:INFO:GradientBoostingRegressor(random_state=123)
2024-03-02 19:15:26,380:INFO:create_model() successfully completed......................................
2024-03-02 19:15:26,473:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:26,473:INFO:Creating metrics dataframe
2024-03-02 19:15:26,492:INFO:Initializing Extreme Gradient Boosting
2024-03-02 19:15:26,492:INFO:Total runtime is 0.3216352701187134 minutes
2024-03-02 19:15:26,497:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:26,497:INFO:Initializing create_model()
2024-03-02 19:15:26,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:26,497:INFO:Checking exceptions
2024-03-02 19:15:26,498:INFO:Importing libraries
2024-03-02 19:15:26,498:INFO:Copying training dataset
2024-03-02 19:15:26,506:INFO:Defining folds
2024-03-02 19:15:26,506:INFO:Declaring metric variables
2024-03-02 19:15:26,510:INFO:Importing untrained model
2024-03-02 19:15:26,516:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 19:15:26,551:INFO:Starting cross validation
2024-03-02 19:15:26,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:28,722:INFO:Calculating mean and std
2024-03-02 19:15:28,723:INFO:Creating metrics dataframe
2024-03-02 19:15:28,725:INFO:Uploading results into container
2024-03-02 19:15:28,725:INFO:Uploading model into container now
2024-03-02 19:15:28,726:INFO:_master_model_container: 17
2024-03-02 19:15:28,726:INFO:_display_container: 2
2024-03-02 19:15:28,726:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-03-02 19:15:28,726:INFO:create_model() successfully completed......................................
2024-03-02 19:15:28,817:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:28,817:INFO:Creating metrics dataframe
2024-03-02 19:15:28,835:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 19:15:28,835:INFO:Total runtime is 0.36068293650945027 minutes
2024-03-02 19:15:28,840:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:28,840:INFO:Initializing create_model()
2024-03-02 19:15:28,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:28,840:INFO:Checking exceptions
2024-03-02 19:15:28,841:INFO:Importing libraries
2024-03-02 19:15:28,841:INFO:Copying training dataset
2024-03-02 19:15:28,847:INFO:Defining folds
2024-03-02 19:15:28,847:INFO:Declaring metric variables
2024-03-02 19:15:28,851:INFO:Importing untrained model
2024-03-02 19:15:28,856:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 19:15:28,863:INFO:Starting cross validation
2024-03-02 19:15:28,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:29,508:INFO:Calculating mean and std
2024-03-02 19:15:29,509:INFO:Creating metrics dataframe
2024-03-02 19:15:29,512:INFO:Uploading results into container
2024-03-02 19:15:29,513:INFO:Uploading model into container now
2024-03-02 19:15:29,513:INFO:_master_model_container: 18
2024-03-02 19:15:29,513:INFO:_display_container: 2
2024-03-02 19:15:29,514:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:29,514:INFO:create_model() successfully completed......................................
2024-03-02 19:15:29,604:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:29,605:INFO:Creating metrics dataframe
2024-03-02 19:15:29,616:INFO:Initializing Dummy Regressor
2024-03-02 19:15:29,617:INFO:Total runtime is 0.37371519406636555 minutes
2024-03-02 19:15:29,620:INFO:SubProcess create_model() called ==================================
2024-03-02 19:15:29,621:INFO:Initializing create_model()
2024-03-02 19:15:29,621:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017257A18590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:29,621:INFO:Checking exceptions
2024-03-02 19:15:29,621:INFO:Importing libraries
2024-03-02 19:15:29,621:INFO:Copying training dataset
2024-03-02 19:15:29,629:INFO:Defining folds
2024-03-02 19:15:29,629:INFO:Declaring metric variables
2024-03-02 19:15:29,633:INFO:Importing untrained model
2024-03-02 19:15:29,636:INFO:Dummy Regressor Imported successfully
2024-03-02 19:15:29,646:INFO:Starting cross validation
2024-03-02 19:15:29,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:29,718:INFO:Calculating mean and std
2024-03-02 19:15:29,718:INFO:Creating metrics dataframe
2024-03-02 19:15:29,720:INFO:Uploading results into container
2024-03-02 19:15:29,720:INFO:Uploading model into container now
2024-03-02 19:15:29,721:INFO:_master_model_container: 19
2024-03-02 19:15:29,721:INFO:_display_container: 2
2024-03-02 19:15:29,721:INFO:DummyRegressor()
2024-03-02 19:15:29,721:INFO:create_model() successfully completed......................................
2024-03-02 19:15:29,818:INFO:SubProcess create_model() end ==================================
2024-03-02 19:15:29,818:INFO:Creating metrics dataframe
2024-03-02 19:15:29,864:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-02 19:15:29,876:INFO:Initializing create_model()
2024-03-02 19:15:29,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:29,877:INFO:Checking exceptions
2024-03-02 19:15:29,881:INFO:Importing libraries
2024-03-02 19:15:29,881:INFO:Copying training dataset
2024-03-02 19:15:29,887:INFO:Defining folds
2024-03-02 19:15:29,887:INFO:Declaring metric variables
2024-03-02 19:15:29,887:INFO:Importing untrained model
2024-03-02 19:15:29,888:INFO:Declaring custom model
2024-03-02 19:15:29,889:INFO:Extra Trees Regressor Imported successfully
2024-03-02 19:15:29,890:INFO:Cross validation set to False
2024-03-02 19:15:29,890:INFO:Fitting Model
2024-03-02 19:15:29,993:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:29,995:INFO:create_model() successfully completed......................................
2024-03-02 19:15:30,133:INFO:_master_model_container: 19
2024-03-02 19:15:30,133:INFO:_display_container: 2
2024-03-02 19:15:30,133:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:30,133:INFO:compare_models() successfully completed......................................
2024-03-02 19:15:43,631:INFO:Initializing create_model()
2024-03-02 19:15:43,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 19:15:43,631:INFO:Checking exceptions
2024-03-02 19:15:43,649:INFO:Importing libraries
2024-03-02 19:15:43,649:INFO:Copying training dataset
2024-03-02 19:15:43,659:INFO:Defining folds
2024-03-02 19:15:43,659:INFO:Declaring metric variables
2024-03-02 19:15:43,665:INFO:Importing untrained model
2024-03-02 19:15:43,671:INFO:Random Forest Regressor Imported successfully
2024-03-02 19:15:43,683:INFO:Starting cross validation
2024-03-02 19:15:43,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 19:15:44,526:INFO:Calculating mean and std
2024-03-02 19:15:44,528:INFO:Creating metrics dataframe
2024-03-02 19:15:44,543:INFO:Finalizing model
2024-03-02 19:15:44,753:INFO:Uploading results into container
2024-03-02 19:15:44,755:INFO:Uploading model into container now
2024-03-02 19:15:44,772:INFO:_master_model_container: 20
2024-03-02 19:15:44,772:INFO:_display_container: 3
2024-03-02 19:15:44,773:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-03-02 19:15:44,773:INFO:create_model() successfully completed......................................
2024-03-02 19:15:50,004:INFO:Initializing plot_model()
2024-03-02 19:15:50,005:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-02 19:15:50,006:INFO:Checking exceptions
2024-03-02 19:15:50,044:INFO:Preloading libraries
2024-03-02 19:15:50,149:INFO:Copying training dataset
2024-03-02 19:15:50,149:INFO:Plot type: residuals
2024-03-02 19:15:50,412:INFO:Fitting Model
2024-03-02 19:15:50,490:WARNING:d:\dev\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-03-02 19:15:50,649:INFO:Scoring test/hold-out set
2024-03-02 19:15:52,115:INFO:Visual Rendered Successfully
2024-03-02 19:15:52,212:INFO:plot_model() successfully completed......................................
2024-03-02 19:15:55,581:INFO:Initializing evaluate_model()
2024-03-02 19:15:55,581:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-02 19:15:55,614:INFO:Initializing plot_model()
2024-03-02 19:15:55,615:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-02 19:15:55,615:INFO:Checking exceptions
2024-03-02 19:15:55,646:INFO:Preloading libraries
2024-03-02 19:15:55,656:INFO:Copying training dataset
2024-03-02 19:15:55,656:INFO:Plot type: pipeline
2024-03-02 19:15:56,008:INFO:Visual Rendered Successfully
2024-03-02 19:15:56,110:INFO:plot_model() successfully completed......................................
2024-03-02 19:16:20,919:INFO:Initializing plot_model()
2024-03-02 19:16:20,920:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), plot=parameter, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-02 19:16:20,920:INFO:Checking exceptions
2024-03-02 19:16:20,954:INFO:Preloading libraries
2024-03-02 19:16:20,962:INFO:Copying training dataset
2024-03-02 19:16:20,962:INFO:Plot type: parameter
2024-03-02 19:16:20,966:INFO:Visual Rendered Successfully
2024-03-02 19:16:21,061:INFO:plot_model() successfully completed......................................
2024-03-02 19:16:24,270:INFO:Initializing plot_model()
2024-03-02 19:16:24,271:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017254E81010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), plot=tree, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-02 19:16:24,271:INFO:Checking exceptions
2024-03-02 19:16:24,303:INFO:Preloading libraries
2024-03-02 19:16:24,312:INFO:Copying training dataset
2024-03-02 19:16:24,312:INFO:Plot type: tree
2024-03-02 19:16:25,748:INFO:Plotting decision trees
2024-03-02 19:16:25,766:INFO:Plotting tree 0
2024-03-02 19:16:27,840:INFO:Plotting tree 1
2024-03-02 19:16:28,832:INFO:Plotting tree 2
2024-03-02 19:16:29,796:INFO:Plotting tree 3
2024-03-02 19:16:30,725:INFO:Plotting tree 4
2024-03-02 19:16:31,623:INFO:Plotting tree 5
2024-03-02 19:16:33,269:INFO:Plotting tree 6
2024-03-02 19:16:34,231:INFO:Plotting tree 7
2024-03-02 19:16:35,301:INFO:Plotting tree 8
2024-03-02 19:16:36,248:INFO:Plotting tree 9
2024-03-02 19:16:37,132:INFO:Plotting tree 10
2024-03-02 19:16:38,207:INFO:Plotting tree 11
2024-03-02 19:16:39,357:INFO:Plotting tree 12
2024-03-02 19:16:40,516:INFO:Plotting tree 13
2024-03-02 19:16:41,474:INFO:Plotting tree 14
2024-03-02 19:16:42,423:INFO:Plotting tree 15
2024-03-02 19:16:43,350:INFO:Plotting tree 16
2024-03-02 19:16:44,243:INFO:Plotting tree 17
2024-03-02 19:16:45,173:INFO:Plotting tree 18
2024-03-02 19:16:46,162:INFO:Plotting tree 19
2024-03-02 19:16:46,967:INFO:Plotting tree 20
2024-03-02 19:16:48,232:INFO:Plotting tree 21
2024-03-02 19:16:49,168:INFO:Plotting tree 22
2024-03-02 19:16:50,032:INFO:Plotting tree 23
2024-03-02 19:16:50,948:INFO:Plotting tree 24
2024-03-02 19:16:51,806:INFO:Plotting tree 25
2024-03-02 19:16:52,723:INFO:Plotting tree 26
2024-03-02 19:16:53,618:INFO:Plotting tree 27
2024-03-02 19:16:54,535:INFO:Plotting tree 28
2024-03-02 19:16:55,553:INFO:Plotting tree 29
2024-03-02 19:16:56,973:INFO:Plotting tree 30
2024-03-02 19:16:58,215:INFO:Plotting tree 31
2024-03-02 19:16:59,220:INFO:Plotting tree 32
2024-03-02 19:17:00,190:INFO:Plotting tree 33
2024-03-02 19:17:01,075:INFO:Plotting tree 34
2024-03-02 19:17:01,958:INFO:Plotting tree 35
2024-03-02 19:17:02,996:INFO:Plotting tree 36
2024-03-02 19:17:03,991:INFO:Plotting tree 37
2024-03-02 19:17:04,883:INFO:Plotting tree 38
2024-03-02 19:17:05,906:INFO:Plotting tree 39
2024-03-02 19:17:06,785:INFO:Plotting tree 40
2024-03-02 19:17:07,629:INFO:Plotting tree 41
2024-03-02 19:17:08,528:INFO:Plotting tree 42
2024-03-02 19:17:09,859:INFO:Plotting tree 43
2024-03-02 19:17:10,769:INFO:Plotting tree 44
2024-03-02 19:17:11,620:INFO:Plotting tree 45
2024-03-02 19:17:12,562:INFO:Plotting tree 46
2024-03-02 19:17:13,419:INFO:Plotting tree 47
2024-03-02 19:17:14,327:INFO:Plotting tree 48
2024-03-02 19:17:15,214:INFO:Plotting tree 49
2024-03-02 19:17:16,116:INFO:Plotting tree 50
2024-03-02 19:17:17,038:INFO:Plotting tree 51
2024-03-02 19:17:17,913:INFO:Plotting tree 52
2024-03-02 19:17:18,802:INFO:Plotting tree 53
2024-03-02 19:17:19,677:INFO:Plotting tree 54
2024-03-02 19:17:20,554:INFO:Plotting tree 55
2024-03-02 19:17:21,425:INFO:Plotting tree 56
2024-03-02 19:17:22,755:INFO:Plotting tree 57
2024-03-02 19:17:23,614:INFO:Plotting tree 58
2024-03-02 19:17:24,455:INFO:Plotting tree 59
2024-03-02 19:17:25,349:INFO:Plotting tree 60
2024-03-02 19:17:26,219:INFO:Plotting tree 61
2024-03-02 19:17:27,048:INFO:Plotting tree 62
2024-03-02 19:17:28,014:INFO:Plotting tree 63
2024-03-02 19:17:28,888:INFO:Plotting tree 64
2024-03-02 19:17:29,826:INFO:Plotting tree 65
2024-03-02 19:17:30,724:INFO:Plotting tree 66
2024-03-02 19:17:31,626:INFO:Plotting tree 67
2024-03-02 19:17:32,559:INFO:Plotting tree 68
2024-03-02 19:17:33,453:INFO:Plotting tree 69
2024-03-02 19:17:34,349:INFO:Plotting tree 70
2024-03-02 19:17:35,205:INFO:Plotting tree 71
2024-03-02 19:17:36,099:INFO:Plotting tree 72
2024-03-02 19:17:37,262:INFO:Plotting tree 73
2024-03-02 19:17:38,712:INFO:Plotting tree 74
2024-03-02 19:17:39,598:INFO:Plotting tree 75
2024-03-02 19:17:40,472:INFO:Plotting tree 76
2024-03-02 19:17:41,437:INFO:Plotting tree 77
2024-03-02 19:17:42,320:INFO:Plotting tree 78
2024-03-02 19:17:43,169:INFO:Plotting tree 79
2024-03-02 19:17:44,058:INFO:Plotting tree 80
2024-03-02 19:17:44,879:INFO:Plotting tree 81
2024-03-02 19:17:45,788:INFO:Plotting tree 82
2024-03-02 19:17:46,712:INFO:Plotting tree 83
2024-03-02 19:17:47,555:INFO:Plotting tree 84
2024-03-02 19:17:48,412:INFO:Plotting tree 85
2024-03-02 19:17:49,317:INFO:Plotting tree 86
2024-03-02 19:17:50,152:INFO:Plotting tree 87
2024-03-02 19:17:51,018:INFO:Plotting tree 88
2024-03-02 19:17:51,844:INFO:Plotting tree 89
2024-03-02 19:17:52,768:INFO:Plotting tree 90
2024-03-02 19:17:53,632:INFO:Plotting tree 91
2024-03-02 19:17:54,478:INFO:Plotting tree 92
2024-03-02 19:17:55,397:INFO:Plotting tree 93
2024-03-02 19:17:56,925:INFO:Plotting tree 94
2024-03-02 19:17:57,851:INFO:Plotting tree 95
2024-03-02 19:17:58,669:INFO:Plotting tree 96
2024-03-02 19:17:59,605:INFO:Plotting tree 97
2024-03-02 19:18:00,421:INFO:Plotting tree 98
2024-03-02 19:18:01,270:INFO:Plotting tree 99
2024-03-03 19:25:18,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 19:25:18,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 19:25:18,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 19:25:18,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 19:26:03,936:INFO:PyCaret ClassificationExperiment
2024-03-03 19:26:03,936:INFO:Logging name: clf-default-name
2024-03-03 19:26:03,936:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-03 19:26:03,936:INFO:version 3.3.0
2024-03-03 19:26:03,936:INFO:Initializing setup()
2024-03-03 19:26:03,936:INFO:self.USI: 486e
2024-03-03 19:26:03,936:INFO:self._variable_keys: {'target_param', 'fix_imbalance', 'X_test', 'X_train', 'fold_groups_param', 'X', 'fold_generator', 'memory', 'log_plots_param', '_available_plots', 'USI', 'y', 'html_param', 'n_jobs_param', 'y_test', 'is_multiclass', 'exp_id', 'data', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'logging_param', 'pipeline', 'fold_shuffle_param', 'y_train', 'seed', '_ml_usecase'}
2024-03-03 19:26:03,936:INFO:Checking environment
2024-03-03 19:26:03,936:INFO:python_version: 3.11.0
2024-03-03 19:26:03,936:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-03-03 19:26:03,936:INFO:machine: AMD64
2024-03-03 19:26:03,936:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-03 19:26:03,958:INFO:Memory: svmem(total=8428179456, available=2156453888, percent=74.4, used=6271725568, free=2156453888)
2024-03-03 19:26:03,959:INFO:Physical Core: 4
2024-03-03 19:26:03,959:INFO:Logical Core: 8
2024-03-03 19:26:03,959:INFO:Checking libraries
2024-03-03 19:26:03,959:INFO:System:
2024-03-03 19:26:03,959:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-03-03 19:26:03,959:INFO:executable: d:\dev\venv\Scripts\python.exe
2024-03-03 19:26:03,959:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-03 19:26:03,959:INFO:PyCaret required dependencies:
2024-03-03 19:26:04,548:INFO:                 pip: 23.2.1
2024-03-03 19:26:04,548:INFO:          setuptools: 68.2.2
2024-03-03 19:26:04,548:INFO:             pycaret: 3.3.0
2024-03-03 19:26:04,548:INFO:             IPython: 8.14.0
2024-03-03 19:26:04,548:INFO:          ipywidgets: 8.1.1
2024-03-03 19:26:04,548:INFO:                tqdm: 4.66.1
2024-03-03 19:26:04,548:INFO:               numpy: 1.26.0
2024-03-03 19:26:04,548:INFO:              pandas: 2.1.1
2024-03-03 19:26:04,548:INFO:              jinja2: 3.1.2
2024-03-03 19:26:04,548:INFO:               scipy: 1.11.3
2024-03-03 19:26:04,548:INFO:              joblib: 1.3.2
2024-03-03 19:26:04,548:INFO:             sklearn: 1.4.1.post1
2024-03-03 19:26:04,548:INFO:                pyod: 1.1.3
2024-03-03 19:26:04,548:INFO:            imblearn: 0.12.0
2024-03-03 19:26:04,548:INFO:   category_encoders: 2.6.3
2024-03-03 19:26:04,548:INFO:            lightgbm: 4.3.0
2024-03-03 19:26:04,548:INFO:               numba: 0.59.0
2024-03-03 19:26:04,548:INFO:            requests: 2.31.0
2024-03-03 19:26:04,549:INFO:          matplotlib: 3.7.5
2024-03-03 19:26:04,549:INFO:          scikitplot: 0.3.7
2024-03-03 19:26:04,549:INFO:         yellowbrick: 1.5
2024-03-03 19:26:04,549:INFO:              plotly: 5.19.0
2024-03-03 19:26:04,549:INFO:    plotly-resampler: Not installed
2024-03-03 19:26:04,549:INFO:             kaleido: 0.2.1
2024-03-03 19:26:04,549:INFO:           schemdraw: 0.15
2024-03-03 19:26:04,549:INFO:         statsmodels: 0.14.1
2024-03-03 19:26:04,549:INFO:              sktime: 0.27.0
2024-03-03 19:26:04,549:INFO:               tbats: 1.1.3
2024-03-03 19:26:04,549:INFO:            pmdarima: 2.0.4
2024-03-03 19:26:04,549:INFO:              psutil: 5.9.5
2024-03-03 19:26:04,549:INFO:          markupsafe: 2.1.3
2024-03-03 19:26:04,549:INFO:             pickle5: Not installed
2024-03-03 19:26:04,549:INFO:         cloudpickle: 3.0.0
2024-03-03 19:26:04,549:INFO:         deprecation: 2.1.0
2024-03-03 19:26:04,549:INFO:              xxhash: 3.4.1
2024-03-03 19:26:04,549:INFO:           wurlitzer: Not installed
2024-03-03 19:26:04,549:INFO:PyCaret optional dependencies:
2024-03-03 19:26:05,123:INFO:                shap: Not installed
2024-03-03 19:26:05,123:INFO:           interpret: Not installed
2024-03-03 19:26:05,123:INFO:                umap: Not installed
2024-03-03 19:26:05,124:INFO:     ydata_profiling: Not installed
2024-03-03 19:26:05,124:INFO:  explainerdashboard: Not installed
2024-03-03 19:26:05,124:INFO:             autoviz: Not installed
2024-03-03 19:26:05,124:INFO:           fairlearn: Not installed
2024-03-03 19:26:05,124:INFO:          deepchecks: Not installed
2024-03-03 19:26:05,124:INFO:             xgboost: 2.0.3
2024-03-03 19:26:05,124:INFO:            catboost: Not installed
2024-03-03 19:26:05,124:INFO:              kmodes: Not installed
2024-03-03 19:26:05,124:INFO:             mlxtend: Not installed
2024-03-03 19:26:05,124:INFO:       statsforecast: Not installed
2024-03-03 19:26:05,124:INFO:        tune_sklearn: Not installed
2024-03-03 19:26:05,124:INFO:                 ray: Not installed
2024-03-03 19:26:05,124:INFO:            hyperopt: Not installed
2024-03-03 19:26:05,124:INFO:              optuna: Not installed
2024-03-03 19:26:05,124:INFO:               skopt: Not installed
2024-03-03 19:26:05,125:INFO:              mlflow: Not installed
2024-03-03 19:26:05,125:INFO:              gradio: Not installed
2024-03-03 19:26:05,125:INFO:             fastapi: Not installed
2024-03-03 19:26:05,125:INFO:             uvicorn: Not installed
2024-03-03 19:26:05,125:INFO:              m2cgen: Not installed
2024-03-03 19:26:05,125:INFO:           evidently: Not installed
2024-03-03 19:26:05,125:INFO:               fugue: Not installed
2024-03-03 19:26:05,125:INFO:           streamlit: 1.31.1
2024-03-03 19:26:05,125:INFO:             prophet: Not installed
2024-03-03 19:26:05,125:INFO:None
2024-03-03 19:26:05,125:INFO:Set up data.
2024-03-03 19:26:05,162:INFO:Set up folding strategy.
2024-03-03 19:26:05,163:INFO:Set up train/test split.
2024-03-03 19:26:05,211:INFO:Set up index.
2024-03-03 19:26:05,213:INFO:Assigning column types.
2024-03-03 19:26:05,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-03 19:26:05,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,416:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,507:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,511:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-03 19:26:05,557:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,584:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-03 19:26:05,660:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,663:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-03-03 19:26:05,738:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,816:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:05,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:05,833:INFO:Preparing preprocessing pipeline...
2024-03-03 19:26:05,834:INFO:Set up label encoding.
2024-03-03 19:26:05,835:INFO:Set up simple imputation.
2024-03-03 19:26:05,839:INFO:Set up encoding of ordinal features.
2024-03-03 19:26:05,841:INFO:Set up encoding of categorical features.
2024-03-03 19:26:05,923:INFO:Finished creating preprocessing pipeline.
2024-03-03 19:26:05,942:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amir\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'WeekofPurchase', 'StoreID',
                                             'PriceCH', 'PriceMM', 'DiscCH',
                                             'DiscMM', 'SpecialCH', 'SpecialMM',
                                             'LoyalC...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(exclude=None, include=['Store7'],
                                    transformer=OrdinalEncoder(cols=['Store7'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'Store7',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-03-03 19:26:05,942:INFO:Creating final display dataframe.
2024-03-03 19:26:06,157:INFO:Setup _display_container:                     Description             Value
0                    Session id              5243
1                        Target          Purchase
2                   Target type            Binary
3                Target mapping      CH: 0, MM: 1
4           Original data shape        (1070, 19)
5        Transformed data shape        (1070, 19)
6   Transformed train set shape         (749, 19)
7    Transformed test set shape         (321, 19)
8              Numeric features                17
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              486e
2024-03-03 19:26:06,249:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:06,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:06,333:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-03 19:26:06,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 19:26:06,352:INFO:setup() successfully completed in 2.42s...............
2024-03-03 19:30:45,332:INFO:Initializing compare_models()
2024-03-03 19:30:45,333:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-03-03 19:30:45,333:INFO:Checking exceptions
2024-03-03 19:30:45,347:INFO:Preparing display monitor
2024-03-03 19:30:45,379:INFO:Initializing Logistic Regression
2024-03-03 19:30:45,379:INFO:Total runtime is 0.0 minutes
2024-03-03 19:30:45,384:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:45,384:INFO:Initializing create_model()
2024-03-03 19:30:45,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:45,385:INFO:Checking exceptions
2024-03-03 19:30:45,385:INFO:Importing libraries
2024-03-03 19:30:45,385:INFO:Copying training dataset
2024-03-03 19:30:45,395:INFO:Defining folds
2024-03-03 19:30:45,395:INFO:Declaring metric variables
2024-03-03 19:30:45,399:INFO:Importing untrained model
2024-03-03 19:30:45,405:INFO:Logistic Regression Imported successfully
2024-03-03 19:30:45,417:INFO:Starting cross validation
2024-03-03 19:30:45,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:53,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,510:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,552:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,554:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,554:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,556:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,934:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,936:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:30:53,957:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,957:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:53,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,960:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,964:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,964:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,967:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,968:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:53,978:INFO:Calculating mean and std
2024-03-03 19:30:54,053:INFO:Creating metrics dataframe
2024-03-03 19:30:54,069:INFO:Uploading results into container
2024-03-03 19:30:54,070:INFO:Uploading model into container now
2024-03-03 19:30:54,070:INFO:_master_model_container: 1
2024-03-03 19:30:54,070:INFO:_display_container: 2
2024-03-03 19:30:54,071:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-03 19:30:54,071:INFO:create_model() successfully completed......................................
2024-03-03 19:30:54,168:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:54,168:INFO:Creating metrics dataframe
2024-03-03 19:30:54,190:INFO:Initializing K Neighbors Classifier
2024-03-03 19:30:54,190:INFO:Total runtime is 0.14685071309407552 minutes
2024-03-03 19:30:54,194:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:54,195:INFO:Initializing create_model()
2024-03-03 19:30:54,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:54,196:INFO:Checking exceptions
2024-03-03 19:30:54,196:INFO:Importing libraries
2024-03-03 19:30:54,196:INFO:Copying training dataset
2024-03-03 19:30:54,205:INFO:Defining folds
2024-03-03 19:30:54,205:INFO:Declaring metric variables
2024-03-03 19:30:54,210:INFO:Importing untrained model
2024-03-03 19:30:54,214:INFO:K Neighbors Classifier Imported successfully
2024-03-03 19:30:54,227:INFO:Starting cross validation
2024-03-03 19:30:54,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:54,670:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,672:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,674:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,674:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,675:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,675:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,677:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,678:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,682:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,686:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,687:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,690:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,690:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,692:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,695:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,747:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,749:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:54,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,752:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,757:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,757:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:54,762:INFO:Calculating mean and std
2024-03-03 19:30:54,764:INFO:Creating metrics dataframe
2024-03-03 19:30:54,766:INFO:Uploading results into container
2024-03-03 19:30:54,768:INFO:Uploading model into container now
2024-03-03 19:30:54,768:INFO:_master_model_container: 2
2024-03-03 19:30:54,768:INFO:_display_container: 2
2024-03-03 19:30:54,768:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-03-03 19:30:54,768:INFO:create_model() successfully completed......................................
2024-03-03 19:30:54,853:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:54,854:INFO:Creating metrics dataframe
2024-03-03 19:30:54,869:INFO:Initializing Naive Bayes
2024-03-03 19:30:54,869:INFO:Total runtime is 0.15817829767862956 minutes
2024-03-03 19:30:54,876:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:54,876:INFO:Initializing create_model()
2024-03-03 19:30:54,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:54,877:INFO:Checking exceptions
2024-03-03 19:30:54,877:INFO:Importing libraries
2024-03-03 19:30:54,877:INFO:Copying training dataset
2024-03-03 19:30:54,892:INFO:Defining folds
2024-03-03 19:30:54,893:INFO:Declaring metric variables
2024-03-03 19:30:54,900:INFO:Importing untrained model
2024-03-03 19:30:54,906:INFO:Naive Bayes Imported successfully
2024-03-03 19:30:54,916:INFO:Starting cross validation
2024-03-03 19:30:54,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:55,025:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,027:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,027:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,028:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,029:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,030:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,032:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,032:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,035:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,036:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,036:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,041:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,048:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,050:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,051:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,055:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,056:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,059:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,110:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,111:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,113:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,114:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,119:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,120:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,128:INFO:Calculating mean and std
2024-03-03 19:30:55,129:INFO:Creating metrics dataframe
2024-03-03 19:30:55,132:INFO:Uploading results into container
2024-03-03 19:30:55,132:INFO:Uploading model into container now
2024-03-03 19:30:55,133:INFO:_master_model_container: 3
2024-03-03 19:30:55,133:INFO:_display_container: 2
2024-03-03 19:30:55,133:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-03-03 19:30:55,134:INFO:create_model() successfully completed......................................
2024-03-03 19:30:55,216:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:55,217:INFO:Creating metrics dataframe
2024-03-03 19:30:55,229:INFO:Initializing Decision Tree Classifier
2024-03-03 19:30:55,230:INFO:Total runtime is 0.16417325337727864 minutes
2024-03-03 19:30:55,236:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:55,236:INFO:Initializing create_model()
2024-03-03 19:30:55,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:55,237:INFO:Checking exceptions
2024-03-03 19:30:55,237:INFO:Importing libraries
2024-03-03 19:30:55,237:INFO:Copying training dataset
2024-03-03 19:30:55,246:INFO:Defining folds
2024-03-03 19:30:55,247:INFO:Declaring metric variables
2024-03-03 19:30:55,254:INFO:Importing untrained model
2024-03-03 19:30:55,260:INFO:Decision Tree Classifier Imported successfully
2024-03-03 19:30:55,271:INFO:Starting cross validation
2024-03-03 19:30:55,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:55,533:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,535:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,536:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,536:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,536:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,536:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,538:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,538:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,540:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,541:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,542:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,543:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,543:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,544:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,550:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,552:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,552:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,556:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,556:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,557:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,610:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:55,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,668:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,668:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,679:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:55,696:INFO:Calculating mean and std
2024-03-03 19:30:55,698:INFO:Creating metrics dataframe
2024-03-03 19:30:55,702:INFO:Uploading results into container
2024-03-03 19:30:55,702:INFO:Uploading model into container now
2024-03-03 19:30:55,704:INFO:_master_model_container: 4
2024-03-03 19:30:55,704:INFO:_display_container: 2
2024-03-03 19:30:55,705:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5243, splitter='best')
2024-03-03 19:30:55,705:INFO:create_model() successfully completed......................................
2024-03-03 19:30:55,790:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:55,790:INFO:Creating metrics dataframe
2024-03-03 19:30:55,803:INFO:Initializing SVM - Linear Kernel
2024-03-03 19:30:55,804:INFO:Total runtime is 0.17376298904418946 minutes
2024-03-03 19:30:55,811:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:55,811:INFO:Initializing create_model()
2024-03-03 19:30:55,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:55,811:INFO:Checking exceptions
2024-03-03 19:30:55,813:INFO:Importing libraries
2024-03-03 19:30:55,813:INFO:Copying training dataset
2024-03-03 19:30:55,824:INFO:Defining folds
2024-03-03 19:30:55,824:INFO:Declaring metric variables
2024-03-03 19:30:55,830:INFO:Importing untrained model
2024-03-03 19:30:55,837:INFO:SVM - Linear Kernel Imported successfully
2024-03-03 19:30:55,850:INFO:Starting cross validation
2024-03-03 19:30:55,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:56,162:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,162:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,162:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,162:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,162:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,165:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,166:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,166:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,168:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:30:56,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:30:56,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:30:56,173:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:30:56,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,182:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,182:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,243:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,245:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,247:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,250:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:30:56,253:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,253:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,255:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,265:INFO:Calculating mean and std
2024-03-03 19:30:56,266:INFO:Creating metrics dataframe
2024-03-03 19:30:56,268:INFO:Uploading results into container
2024-03-03 19:30:56,268:INFO:Uploading model into container now
2024-03-03 19:30:56,269:INFO:_master_model_container: 5
2024-03-03 19:30:56,269:INFO:_display_container: 2
2024-03-03 19:30:56,269:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5243, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-03 19:30:56,270:INFO:create_model() successfully completed......................................
2024-03-03 19:30:56,357:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:56,358:INFO:Creating metrics dataframe
2024-03-03 19:30:56,372:INFO:Initializing Ridge Classifier
2024-03-03 19:30:56,372:INFO:Total runtime is 0.18322567939758302 minutes
2024-03-03 19:30:56,379:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:56,379:INFO:Initializing create_model()
2024-03-03 19:30:56,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:56,380:INFO:Checking exceptions
2024-03-03 19:30:56,380:INFO:Importing libraries
2024-03-03 19:30:56,380:INFO:Copying training dataset
2024-03-03 19:30:56,389:INFO:Defining folds
2024-03-03 19:30:56,390:INFO:Declaring metric variables
2024-03-03 19:30:56,395:INFO:Importing untrained model
2024-03-03 19:30:56,401:INFO:Ridge Classifier Imported successfully
2024-03-03 19:30:56,418:INFO:Starting cross validation
2024-03-03 19:30:56,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:56,654:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,655:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,656:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,656:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,656:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,656:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,656:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,658:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,663:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,667:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,668:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,671:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,671:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,672:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,672:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,729:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,732:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:30:56,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,734:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,736:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,737:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:56,754:INFO:Calculating mean and std
2024-03-03 19:30:56,758:INFO:Creating metrics dataframe
2024-03-03 19:30:56,768:INFO:Uploading results into container
2024-03-03 19:30:56,770:INFO:Uploading model into container now
2024-03-03 19:30:56,772:INFO:_master_model_container: 6
2024-03-03 19:30:56,772:INFO:_display_container: 2
2024-03-03 19:30:56,774:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001)
2024-03-03 19:30:56,775:INFO:create_model() successfully completed......................................
2024-03-03 19:30:56,876:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:56,876:INFO:Creating metrics dataframe
2024-03-03 19:30:56,892:INFO:Initializing Random Forest Classifier
2024-03-03 19:30:56,892:INFO:Total runtime is 0.19189123709996542 minutes
2024-03-03 19:30:56,901:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:56,901:INFO:Initializing create_model()
2024-03-03 19:30:56,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:56,901:INFO:Checking exceptions
2024-03-03 19:30:56,901:INFO:Importing libraries
2024-03-03 19:30:56,901:INFO:Copying training dataset
2024-03-03 19:30:56,910:INFO:Defining folds
2024-03-03 19:30:56,910:INFO:Declaring metric variables
2024-03-03 19:30:56,917:INFO:Importing untrained model
2024-03-03 19:30:56,922:INFO:Random Forest Classifier Imported successfully
2024-03-03 19:30:56,930:INFO:Starting cross validation
2024-03-03 19:30:56,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:57,389:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,390:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,394:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,396:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,403:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,407:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,412:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,418:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,423:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,425:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,426:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,428:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,433:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,447:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,453:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,456:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,590:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,598:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,601:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,709:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,716:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,718:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,725:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:57,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,730:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:57,746:INFO:Calculating mean and std
2024-03-03 19:30:57,747:INFO:Creating metrics dataframe
2024-03-03 19:30:57,749:INFO:Uploading results into container
2024-03-03 19:30:57,750:INFO:Uploading model into container now
2024-03-03 19:30:57,750:INFO:_master_model_container: 7
2024-03-03 19:30:57,751:INFO:_display_container: 2
2024-03-03 19:30:57,751:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5243, verbose=0,
                       warm_start=False)
2024-03-03 19:30:57,751:INFO:create_model() successfully completed......................................
2024-03-03 19:30:57,838:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:57,839:INFO:Creating metrics dataframe
2024-03-03 19:30:57,854:INFO:Initializing Quadratic Discriminant Analysis
2024-03-03 19:30:57,854:INFO:Total runtime is 0.2079178015391032 minutes
2024-03-03 19:30:57,860:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:57,862:INFO:Initializing create_model()
2024-03-03 19:30:57,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:57,862:INFO:Checking exceptions
2024-03-03 19:30:57,862:INFO:Importing libraries
2024-03-03 19:30:57,862:INFO:Copying training dataset
2024-03-03 19:30:57,873:INFO:Defining folds
2024-03-03 19:30:57,873:INFO:Declaring metric variables
2024-03-03 19:30:57,879:INFO:Importing untrained model
2024-03-03 19:30:57,884:INFO:Quadratic Discriminant Analysis Imported successfully
2024-03-03 19:30:57,895:INFO:Starting cross validation
2024-03-03 19:30:57,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,202:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,202:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,206:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,207:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,208:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,209:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,210:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,210:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,211:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,214:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,214:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,216:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,216:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,219:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,220:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,220:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,221:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,221:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,221:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,223:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,224:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,225:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,264:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,266:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:30:58,291:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,297:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,301:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,303:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,314:INFO:Calculating mean and std
2024-03-03 19:30:58,315:INFO:Creating metrics dataframe
2024-03-03 19:30:58,317:INFO:Uploading results into container
2024-03-03 19:30:58,318:INFO:Uploading model into container now
2024-03-03 19:30:58,318:INFO:_master_model_container: 8
2024-03-03 19:30:58,318:INFO:_display_container: 2
2024-03-03 19:30:58,318:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-03-03 19:30:58,319:INFO:create_model() successfully completed......................................
2024-03-03 19:30:58,406:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:58,407:INFO:Creating metrics dataframe
2024-03-03 19:30:58,422:INFO:Initializing Ada Boost Classifier
2024-03-03 19:30:58,422:INFO:Total runtime is 0.2173990488052368 minutes
2024-03-03 19:30:58,428:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:58,429:INFO:Initializing create_model()
2024-03-03 19:30:58,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:58,429:INFO:Checking exceptions
2024-03-03 19:30:58,429:INFO:Importing libraries
2024-03-03 19:30:58,429:INFO:Copying training dataset
2024-03-03 19:30:58,438:INFO:Defining folds
2024-03-03 19:30:58,438:INFO:Declaring metric variables
2024-03-03 19:30:58,443:INFO:Importing untrained model
2024-03-03 19:30:58,450:INFO:Ada Boost Classifier Imported successfully
2024-03-03 19:30:58,458:INFO:Starting cross validation
2024-03-03 19:30:58,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,817:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,819:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,822:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,823:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,824:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,825:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,825:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,828:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,832:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,832:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,832:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,834:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,834:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,834:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,835:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,837:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,838:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:58,838:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,839:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,840:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,842:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,843:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,846:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,847:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,848:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,850:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:58,873:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:58,877:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:30:59,016:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,017:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,018:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,023:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,023:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,040:INFO:Calculating mean and std
2024-03-03 19:30:59,046:INFO:Creating metrics dataframe
2024-03-03 19:30:59,053:INFO:Uploading results into container
2024-03-03 19:30:59,056:INFO:Uploading model into container now
2024-03-03 19:30:59,058:INFO:_master_model_container: 9
2024-03-03 19:30:59,058:INFO:_display_container: 2
2024-03-03 19:30:59,059:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5243)
2024-03-03 19:30:59,060:INFO:create_model() successfully completed......................................
2024-03-03 19:30:59,167:INFO:SubProcess create_model() end ==================================
2024-03-03 19:30:59,167:INFO:Creating metrics dataframe
2024-03-03 19:30:59,184:INFO:Initializing Gradient Boosting Classifier
2024-03-03 19:30:59,184:INFO:Total runtime is 0.23008643786112468 minutes
2024-03-03 19:30:59,188:INFO:SubProcess create_model() called ==================================
2024-03-03 19:30:59,189:INFO:Initializing create_model()
2024-03-03 19:30:59,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:30:59,189:INFO:Checking exceptions
2024-03-03 19:30:59,189:INFO:Importing libraries
2024-03-03 19:30:59,189:INFO:Copying training dataset
2024-03-03 19:30:59,198:INFO:Defining folds
2024-03-03 19:30:59,198:INFO:Declaring metric variables
2024-03-03 19:30:59,203:INFO:Importing untrained model
2024-03-03 19:30:59,222:INFO:Gradient Boosting Classifier Imported successfully
2024-03-03 19:30:59,244:INFO:Starting cross validation
2024-03-03 19:30:59,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:30:59,680:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,680:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,679:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,682:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,682:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,682:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,682:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,687:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,687:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,690:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,690:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,691:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,692:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,692:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,693:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,694:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,695:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,695:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,701:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,704:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,709:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,710:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,713:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,958:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,962:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,963:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:30:59,967:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,967:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,971:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:30:59,986:INFO:Calculating mean and std
2024-03-03 19:30:59,990:INFO:Creating metrics dataframe
2024-03-03 19:30:59,994:INFO:Uploading results into container
2024-03-03 19:30:59,997:INFO:Uploading model into container now
2024-03-03 19:30:59,998:INFO:_master_model_container: 10
2024-03-03 19:30:59,998:INFO:_display_container: 2
2024-03-03 19:31:00,000:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5243, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-03 19:31:00,000:INFO:create_model() successfully completed......................................
2024-03-03 19:31:00,090:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:00,092:INFO:Creating metrics dataframe
2024-03-03 19:31:00,108:INFO:Initializing Linear Discriminant Analysis
2024-03-03 19:31:00,108:INFO:Total runtime is 0.24549781481424968 minutes
2024-03-03 19:31:00,114:INFO:SubProcess create_model() called ==================================
2024-03-03 19:31:00,114:INFO:Initializing create_model()
2024-03-03 19:31:00,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:00,114:INFO:Checking exceptions
2024-03-03 19:31:00,115:INFO:Importing libraries
2024-03-03 19:31:00,115:INFO:Copying training dataset
2024-03-03 19:31:00,122:INFO:Defining folds
2024-03-03 19:31:00,122:INFO:Declaring metric variables
2024-03-03 19:31:00,127:INFO:Importing untrained model
2024-03-03 19:31:00,132:INFO:Linear Discriminant Analysis Imported successfully
2024-03-03 19:31:00,141:INFO:Starting cross validation
2024-03-03 19:31:00,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:31:00,259:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,261:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,262:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,266:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,266:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,266:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,268:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,268:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,269:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,269:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,271:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,275:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,277:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,277:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,302:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,309:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,310:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,314:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,314:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,351:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,354:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,355:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,357:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,357:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,359:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,362:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,372:INFO:Calculating mean and std
2024-03-03 19:31:00,377:INFO:Creating metrics dataframe
2024-03-03 19:31:00,386:INFO:Uploading results into container
2024-03-03 19:31:00,389:INFO:Uploading model into container now
2024-03-03 19:31:00,390:INFO:_master_model_container: 11
2024-03-03 19:31:00,390:INFO:_display_container: 2
2024-03-03 19:31:00,391:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-03 19:31:00,391:INFO:create_model() successfully completed......................................
2024-03-03 19:31:00,481:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:00,481:INFO:Creating metrics dataframe
2024-03-03 19:31:00,491:INFO:Initializing Extra Trees Classifier
2024-03-03 19:31:00,491:INFO:Total runtime is 0.2518708825111389 minutes
2024-03-03 19:31:00,495:INFO:SubProcess create_model() called ==================================
2024-03-03 19:31:00,496:INFO:Initializing create_model()
2024-03-03 19:31:00,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:00,496:INFO:Checking exceptions
2024-03-03 19:31:00,496:INFO:Importing libraries
2024-03-03 19:31:00,497:INFO:Copying training dataset
2024-03-03 19:31:00,507:INFO:Defining folds
2024-03-03 19:31:00,507:INFO:Declaring metric variables
2024-03-03 19:31:00,512:INFO:Importing untrained model
2024-03-03 19:31:00,517:INFO:Extra Trees Classifier Imported successfully
2024-03-03 19:31:00,525:INFO:Starting cross validation
2024-03-03 19:31:00,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:31:00,905:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,905:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,906:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,916:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,918:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,925:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,934:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,938:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,941:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,944:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,946:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,951:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,956:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,966:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,971:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,991:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,994:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:00,994:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,995:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,998:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:00,999:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,002:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,003:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,057:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:01,060:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,065:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,196:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:01,199:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:01,201:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,213:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:01,231:INFO:Calculating mean and std
2024-03-03 19:31:01,235:INFO:Creating metrics dataframe
2024-03-03 19:31:01,243:INFO:Uploading results into container
2024-03-03 19:31:01,245:INFO:Uploading model into container now
2024-03-03 19:31:01,248:INFO:_master_model_container: 12
2024-03-03 19:31:01,248:INFO:_display_container: 2
2024-03-03 19:31:01,251:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5243, verbose=0,
                     warm_start=False)
2024-03-03 19:31:01,252:INFO:create_model() successfully completed......................................
2024-03-03 19:31:01,372:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:01,373:INFO:Creating metrics dataframe
2024-03-03 19:31:01,393:INFO:Initializing Extreme Gradient Boosting
2024-03-03 19:31:01,393:INFO:Total runtime is 0.26690121491750085 minutes
2024-03-03 19:31:01,399:INFO:SubProcess create_model() called ==================================
2024-03-03 19:31:01,399:INFO:Initializing create_model()
2024-03-03 19:31:01,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:01,400:INFO:Checking exceptions
2024-03-03 19:31:01,400:INFO:Importing libraries
2024-03-03 19:31:01,400:INFO:Copying training dataset
2024-03-03 19:31:01,409:INFO:Defining folds
2024-03-03 19:31:01,409:INFO:Declaring metric variables
2024-03-03 19:31:01,414:INFO:Importing untrained model
2024-03-03 19:31:01,418:INFO:Extreme Gradient Boosting Imported successfully
2024-03-03 19:31:01,431:INFO:Starting cross validation
2024-03-03 19:31:01,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:31:03,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,509:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,512:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,512:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,512:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,514:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,519:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,522:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,522:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,534:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,672:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,673:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:03,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,677:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,681:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:03,691:INFO:Calculating mean and std
2024-03-03 19:31:03,692:INFO:Creating metrics dataframe
2024-03-03 19:31:03,694:INFO:Uploading results into container
2024-03-03 19:31:03,695:INFO:Uploading model into container now
2024-03-03 19:31:03,696:INFO:_master_model_container: 13
2024-03-03 19:31:03,696:INFO:_display_container: 2
2024-03-03 19:31:03,698:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-03-03 19:31:03,698:INFO:create_model() successfully completed......................................
2024-03-03 19:31:03,786:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:03,786:INFO:Creating metrics dataframe
2024-03-03 19:31:03,803:INFO:Initializing Light Gradient Boosting Machine
2024-03-03 19:31:03,803:INFO:Total runtime is 0.307081679503123 minutes
2024-03-03 19:31:03,808:INFO:SubProcess create_model() called ==================================
2024-03-03 19:31:03,809:INFO:Initializing create_model()
2024-03-03 19:31:03,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:03,809:INFO:Checking exceptions
2024-03-03 19:31:03,809:INFO:Importing libraries
2024-03-03 19:31:03,810:INFO:Copying training dataset
2024-03-03 19:31:03,818:INFO:Defining folds
2024-03-03 19:31:03,819:INFO:Declaring metric variables
2024-03-03 19:31:03,824:INFO:Importing untrained model
2024-03-03 19:31:03,829:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:31:03,841:INFO:Starting cross validation
2024-03-03 19:31:03,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:31:04,915:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,915:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,918:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,918:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,920:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,921:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,922:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,923:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,923:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,923:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,926:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,927:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,928:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,928:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,933:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,947:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,949:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,949:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,950:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,951:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,953:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,957:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,958:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,960:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,961:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,962:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,974:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:04,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:04,987:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,242:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,245:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,250:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,256:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,267:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,269:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,273:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,277:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,290:INFO:Calculating mean and std
2024-03-03 19:31:05,292:INFO:Creating metrics dataframe
2024-03-03 19:31:05,295:INFO:Uploading results into container
2024-03-03 19:31:05,296:INFO:Uploading model into container now
2024-03-03 19:31:05,297:INFO:_master_model_container: 14
2024-03-03 19:31:05,297:INFO:_display_container: 2
2024-03-03 19:31:05,299:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-03 19:31:05,299:INFO:create_model() successfully completed......................................
2024-03-03 19:31:05,390:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:05,390:INFO:Creating metrics dataframe
2024-03-03 19:31:05,403:INFO:Initializing Dummy Classifier
2024-03-03 19:31:05,403:INFO:Total runtime is 0.3337475419044495 minutes
2024-03-03 19:31:05,408:INFO:SubProcess create_model() called ==================================
2024-03-03 19:31:05,410:INFO:Initializing create_model()
2024-03-03 19:31:05,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEA33EC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:05,410:INFO:Checking exceptions
2024-03-03 19:31:05,410:INFO:Importing libraries
2024-03-03 19:31:05,410:INFO:Copying training dataset
2024-03-03 19:31:05,419:INFO:Defining folds
2024-03-03 19:31:05,419:INFO:Declaring metric variables
2024-03-03 19:31:05,425:INFO:Importing untrained model
2024-03-03 19:31:05,428:INFO:Dummy Classifier Imported successfully
2024-03-03 19:31:05,440:INFO:Starting cross validation
2024-03-03 19:31:05,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:31:05,565:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,568:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,568:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,570:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,572:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,574:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,575:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,577:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,577:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,578:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,580:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,580:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,580:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,582:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,589:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,590:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,591:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,594:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,598:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,602:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,606:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,608:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,611:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,644:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,644:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:31:05,646:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:31:05,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:31:05,672:INFO:Calculating mean and std
2024-03-03 19:31:05,678:INFO:Creating metrics dataframe
2024-03-03 19:31:05,689:INFO:Uploading results into container
2024-03-03 19:31:05,692:INFO:Uploading model into container now
2024-03-03 19:31:05,694:INFO:_master_model_container: 15
2024-03-03 19:31:05,694:INFO:_display_container: 2
2024-03-03 19:31:05,695:INFO:DummyClassifier(constant=None, random_state=5243, strategy='prior')
2024-03-03 19:31:05,696:INFO:create_model() successfully completed......................................
2024-03-03 19:31:05,808:INFO:SubProcess create_model() end ==================================
2024-03-03 19:31:05,808:INFO:Creating metrics dataframe
2024-03-03 19:31:05,903:INFO:Initializing create_model()
2024-03-03 19:31:05,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:31:05,904:INFO:Checking exceptions
2024-03-03 19:31:05,906:INFO:Importing libraries
2024-03-03 19:31:05,906:INFO:Copying training dataset
2024-03-03 19:31:05,917:INFO:Defining folds
2024-03-03 19:31:05,917:INFO:Declaring metric variables
2024-03-03 19:31:05,918:INFO:Importing untrained model
2024-03-03 19:31:05,918:INFO:Declaring custom model
2024-03-03 19:31:05,918:INFO:Linear Discriminant Analysis Imported successfully
2024-03-03 19:31:05,921:INFO:Cross validation set to False
2024-03-03 19:31:05,921:INFO:Fitting Model
2024-03-03 19:31:05,968:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-03 19:31:05,968:INFO:create_model() successfully completed......................................
2024-03-03 19:31:06,109:INFO:_master_model_container: 15
2024-03-03 19:31:06,109:INFO:_display_container: 2
2024-03-03 19:31:06,110:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-03 19:31:06,110:INFO:compare_models() successfully completed......................................
2024-03-03 19:32:40,728:INFO:Initializing compare_models()
2024-03-03 19:32:40,729:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-03-03 19:32:40,729:INFO:Checking exceptions
2024-03-03 19:32:40,733:INFO:Preparing display monitor
2024-03-03 19:32:40,773:INFO:Initializing Logistic Regression
2024-03-03 19:32:40,774:INFO:Total runtime is 0.0 minutes
2024-03-03 19:32:40,778:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:40,778:INFO:Initializing create_model()
2024-03-03 19:32:40,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:40,778:INFO:Checking exceptions
2024-03-03 19:32:40,778:INFO:Importing libraries
2024-03-03 19:32:40,778:INFO:Copying training dataset
2024-03-03 19:32:40,790:INFO:Defining folds
2024-03-03 19:32:40,790:INFO:Declaring metric variables
2024-03-03 19:32:40,795:INFO:Importing untrained model
2024-03-03 19:32:40,799:INFO:Logistic Regression Imported successfully
2024-03-03 19:32:40,807:INFO:Starting cross validation
2024-03-03 19:32:40,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:41,230:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,241:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,255:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,264:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,266:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,268:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,282:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,289:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,289:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,290:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,297:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,298:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,302:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,304:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,306:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,307:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,308:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,312:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,314:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,314:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,316:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,325:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,338:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,344:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,346:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:32:41,522:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,524:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,529:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,530:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,532:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,535:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,556:INFO:Calculating mean and std
2024-03-03 19:32:41,556:INFO:Creating metrics dataframe
2024-03-03 19:32:41,559:INFO:Uploading results into container
2024-03-03 19:32:41,560:INFO:Uploading model into container now
2024-03-03 19:32:41,560:INFO:_master_model_container: 16
2024-03-03 19:32:41,560:INFO:_display_container: 3
2024-03-03 19:32:41,561:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-03 19:32:41,561:INFO:create_model() successfully completed......................................
2024-03-03 19:32:41,653:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:41,653:INFO:Creating metrics dataframe
2024-03-03 19:32:41,664:INFO:Initializing K Neighbors Classifier
2024-03-03 19:32:41,664:INFO:Total runtime is 0.014844850699106852 minutes
2024-03-03 19:32:41,668:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:41,668:INFO:Initializing create_model()
2024-03-03 19:32:41,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:41,670:INFO:Checking exceptions
2024-03-03 19:32:41,670:INFO:Importing libraries
2024-03-03 19:32:41,670:INFO:Copying training dataset
2024-03-03 19:32:41,681:INFO:Defining folds
2024-03-03 19:32:41,681:INFO:Declaring metric variables
2024-03-03 19:32:41,686:INFO:Importing untrained model
2024-03-03 19:32:41,692:INFO:K Neighbors Classifier Imported successfully
2024-03-03 19:32:41,704:INFO:Starting cross validation
2024-03-03 19:32:41,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:41,845:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,848:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,853:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,856:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,856:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,858:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,861:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,861:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,862:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,868:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,875:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,879:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,879:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,889:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,891:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,891:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,892:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,894:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,896:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,898:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,908:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,926:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,928:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,933:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,940:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,967:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,970:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:41,970:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,972:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:41,992:INFO:Calculating mean and std
2024-03-03 19:32:41,993:INFO:Creating metrics dataframe
2024-03-03 19:32:41,996:INFO:Uploading results into container
2024-03-03 19:32:41,997:INFO:Uploading model into container now
2024-03-03 19:32:41,997:INFO:_master_model_container: 17
2024-03-03 19:32:41,997:INFO:_display_container: 3
2024-03-03 19:32:41,998:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-03-03 19:32:41,998:INFO:create_model() successfully completed......................................
2024-03-03 19:32:42,099:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:42,099:INFO:Creating metrics dataframe
2024-03-03 19:32:42,114:INFO:Initializing Naive Bayes
2024-03-03 19:32:42,114:INFO:Total runtime is 0.022355016072591147 minutes
2024-03-03 19:32:42,123:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:42,124:INFO:Initializing create_model()
2024-03-03 19:32:42,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:42,124:INFO:Checking exceptions
2024-03-03 19:32:42,124:INFO:Importing libraries
2024-03-03 19:32:42,124:INFO:Copying training dataset
2024-03-03 19:32:42,131:INFO:Defining folds
2024-03-03 19:32:42,132:INFO:Declaring metric variables
2024-03-03 19:32:42,139:INFO:Importing untrained model
2024-03-03 19:32:42,143:INFO:Naive Bayes Imported successfully
2024-03-03 19:32:42,152:INFO:Starting cross validation
2024-03-03 19:32:42,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:42,264:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,267:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,272:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,273:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,273:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,275:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,275:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,279:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,279:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,280:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,282:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,286:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,291:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,296:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,298:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,301:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,306:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,308:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,313:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,342:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,344:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,346:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,351:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,356:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,359:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,364:INFO:Calculating mean and std
2024-03-03 19:32:42,365:INFO:Creating metrics dataframe
2024-03-03 19:32:42,367:INFO:Uploading results into container
2024-03-03 19:32:42,368:INFO:Uploading model into container now
2024-03-03 19:32:42,368:INFO:_master_model_container: 18
2024-03-03 19:32:42,368:INFO:_display_container: 3
2024-03-03 19:32:42,369:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-03-03 19:32:42,369:INFO:create_model() successfully completed......................................
2024-03-03 19:32:42,450:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:42,450:INFO:Creating metrics dataframe
2024-03-03 19:32:42,464:INFO:Initializing Decision Tree Classifier
2024-03-03 19:32:42,464:INFO:Total runtime is 0.028189929326375325 minutes
2024-03-03 19:32:42,471:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:42,472:INFO:Initializing create_model()
2024-03-03 19:32:42,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:42,472:INFO:Checking exceptions
2024-03-03 19:32:42,472:INFO:Importing libraries
2024-03-03 19:32:42,472:INFO:Copying training dataset
2024-03-03 19:32:42,486:INFO:Defining folds
2024-03-03 19:32:42,486:INFO:Declaring metric variables
2024-03-03 19:32:42,493:INFO:Importing untrained model
2024-03-03 19:32:42,498:INFO:Decision Tree Classifier Imported successfully
2024-03-03 19:32:42,512:INFO:Starting cross validation
2024-03-03 19:32:42,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:42,628:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,630:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,636:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,638:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,639:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,641:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,640:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,644:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,648:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,655:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,667:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,672:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,672:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,679:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,686:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,720:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,721:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,724:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,727:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:42,729:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,736:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:42,748:INFO:Calculating mean and std
2024-03-03 19:32:42,748:INFO:Creating metrics dataframe
2024-03-03 19:32:42,753:INFO:Uploading results into container
2024-03-03 19:32:42,754:INFO:Uploading model into container now
2024-03-03 19:32:42,754:INFO:_master_model_container: 19
2024-03-03 19:32:42,755:INFO:_display_container: 3
2024-03-03 19:32:42,755:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5243, splitter='best')
2024-03-03 19:32:42,755:INFO:create_model() successfully completed......................................
2024-03-03 19:32:42,833:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:42,833:INFO:Creating metrics dataframe
2024-03-03 19:32:42,845:INFO:Initializing SVM - Linear Kernel
2024-03-03 19:32:42,845:INFO:Total runtime is 0.03453279336293538 minutes
2024-03-03 19:32:42,849:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:42,849:INFO:Initializing create_model()
2024-03-03 19:32:42,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:42,850:INFO:Checking exceptions
2024-03-03 19:32:42,850:INFO:Importing libraries
2024-03-03 19:32:42,850:INFO:Copying training dataset
2024-03-03 19:32:42,858:INFO:Defining folds
2024-03-03 19:32:42,859:INFO:Declaring metric variables
2024-03-03 19:32:42,862:INFO:Importing untrained model
2024-03-03 19:32:42,869:INFO:SVM - Linear Kernel Imported successfully
2024-03-03 19:32:42,880:INFO:Starting cross validation
2024-03-03 19:32:42,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:42,997:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,001:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,005:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,007:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,011:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,012:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,013:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,016:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,016:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,022:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,022:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,023:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,025:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:43,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,027:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:43,027:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,028:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,030:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,031:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:43,031:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,035:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,040:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,046:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,046:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,048:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:43,051:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,097:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,097:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,099:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,099:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,103:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,103:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,104:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:43,105:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,106:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,116:INFO:Calculating mean and std
2024-03-03 19:32:43,118:INFO:Creating metrics dataframe
2024-03-03 19:32:43,119:INFO:Uploading results into container
2024-03-03 19:32:43,120:INFO:Uploading model into container now
2024-03-03 19:32:43,121:INFO:_master_model_container: 20
2024-03-03 19:32:43,121:INFO:_display_container: 3
2024-03-03 19:32:43,121:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5243, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-03 19:32:43,121:INFO:create_model() successfully completed......................................
2024-03-03 19:32:43,203:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:43,203:INFO:Creating metrics dataframe
2024-03-03 19:32:43,213:INFO:Initializing Ridge Classifier
2024-03-03 19:32:43,213:INFO:Total runtime is 0.04067166248957316 minutes
2024-03-03 19:32:43,219:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:43,219:INFO:Initializing create_model()
2024-03-03 19:32:43,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:43,220:INFO:Checking exceptions
2024-03-03 19:32:43,220:INFO:Importing libraries
2024-03-03 19:32:43,220:INFO:Copying training dataset
2024-03-03 19:32:43,231:INFO:Defining folds
2024-03-03 19:32:43,232:INFO:Declaring metric variables
2024-03-03 19:32:43,238:INFO:Importing untrained model
2024-03-03 19:32:43,245:INFO:Ridge Classifier Imported successfully
2024-03-03 19:32:43,259:INFO:Starting cross validation
2024-03-03 19:32:43,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:43,368:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,371:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,374:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,380:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,381:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,381:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,384:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,385:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,385:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,387:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,389:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,394:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,396:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,404:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,406:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,409:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,411:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,442:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,446:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:32:43,446:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,447:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,448:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,456:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:43,466:INFO:Calculating mean and std
2024-03-03 19:32:43,469:INFO:Creating metrics dataframe
2024-03-03 19:32:43,472:INFO:Uploading results into container
2024-03-03 19:32:43,473:INFO:Uploading model into container now
2024-03-03 19:32:43,474:INFO:_master_model_container: 21
2024-03-03 19:32:43,474:INFO:_display_container: 3
2024-03-03 19:32:43,474:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001)
2024-03-03 19:32:43,474:INFO:create_model() successfully completed......................................
2024-03-03 19:32:43,572:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:43,572:INFO:Creating metrics dataframe
2024-03-03 19:32:43,585:INFO:Initializing Random Forest Classifier
2024-03-03 19:32:43,585:INFO:Total runtime is 0.04685868422190348 minutes
2024-03-03 19:32:43,589:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:43,590:INFO:Initializing create_model()
2024-03-03 19:32:43,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:43,590:INFO:Checking exceptions
2024-03-03 19:32:43,590:INFO:Importing libraries
2024-03-03 19:32:43,590:INFO:Copying training dataset
2024-03-03 19:32:43,596:INFO:Defining folds
2024-03-03 19:32:43,596:INFO:Declaring metric variables
2024-03-03 19:32:43,603:INFO:Importing untrained model
2024-03-03 19:32:43,607:INFO:Random Forest Classifier Imported successfully
2024-03-03 19:32:43,619:INFO:Starting cross validation
2024-03-03 19:32:43,621:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:44,121:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,122:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,124:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,124:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,127:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,129:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,132:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,135:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,136:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,143:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,153:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,154:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,158:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,160:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,192:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,194:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,198:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,203:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,247:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,257:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,314:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,318:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,322:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,327:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,433:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,435:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,440:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,441:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,443:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,445:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,447:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,458:INFO:Calculating mean and std
2024-03-03 19:32:44,459:INFO:Creating metrics dataframe
2024-03-03 19:32:44,460:INFO:Uploading results into container
2024-03-03 19:32:44,461:INFO:Uploading model into container now
2024-03-03 19:32:44,461:INFO:_master_model_container: 22
2024-03-03 19:32:44,461:INFO:_display_container: 3
2024-03-03 19:32:44,462:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5243, verbose=0,
                       warm_start=False)
2024-03-03 19:32:44,462:INFO:create_model() successfully completed......................................
2024-03-03 19:32:44,544:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:44,544:INFO:Creating metrics dataframe
2024-03-03 19:32:44,560:INFO:Initializing Quadratic Discriminant Analysis
2024-03-03 19:32:44,560:INFO:Total runtime is 0.06311519543329874 minutes
2024-03-03 19:32:44,566:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:44,566:INFO:Initializing create_model()
2024-03-03 19:32:44,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:44,568:INFO:Checking exceptions
2024-03-03 19:32:44,568:INFO:Importing libraries
2024-03-03 19:32:44,568:INFO:Copying training dataset
2024-03-03 19:32:44,577:INFO:Defining folds
2024-03-03 19:32:44,578:INFO:Declaring metric variables
2024-03-03 19:32:44,582:INFO:Importing untrained model
2024-03-03 19:32:44,589:INFO:Quadratic Discriminant Analysis Imported successfully
2024-03-03 19:32:44,597:INFO:Starting cross validation
2024-03-03 19:32:44,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:44,672:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:32:44,687:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

rage=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,756:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,778:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,790:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,815:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,817:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,817:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,819:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,819:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,820:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,821:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,823:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,823:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,825:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,825:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,832:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,834:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,839:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,852:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:32:44,868:WARNING:d:\dev\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-03 19:32:44,869:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,872:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,874:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,878:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,891:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:44,892:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:44,910:INFO:Calculating mean and std
2024-03-03 19:32:44,910:INFO:Creating metrics dataframe
2024-03-03 19:32:44,913:INFO:Uploading results into container
2024-03-03 19:32:44,913:INFO:Uploading model into container now
2024-03-03 19:32:44,914:INFO:_master_model_container: 23
2024-03-03 19:32:44,914:INFO:_display_container: 3
2024-03-03 19:32:44,914:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-03-03 19:32:44,914:INFO:create_model() successfully completed......................................
2024-03-03 19:32:44,999:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:44,999:INFO:Creating metrics dataframe
2024-03-03 19:32:45,015:INFO:Initializing Ada Boost Classifier
2024-03-03 19:32:45,015:INFO:Total runtime is 0.07069328228632608 minutes
2024-03-03 19:32:45,020:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:45,021:INFO:Initializing create_model()
2024-03-03 19:32:45,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:45,021:INFO:Checking exceptions
2024-03-03 19:32:45,021:INFO:Importing libraries
2024-03-03 19:32:45,021:INFO:Copying training dataset
2024-03-03 19:32:45,030:INFO:Defining folds
2024-03-03 19:32:45,030:INFO:Declaring metric variables
2024-03-03 19:32:45,034:INFO:Importing untrained model
2024-03-03 19:32:45,041:INFO:Ada Boost Classifier Imported successfully
2024-03-03 19:32:45,057:INFO:Starting cross validation
2024-03-03 19:32:45,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:45,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,139:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,143:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,145:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,149:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,161:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,361:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,362:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,364:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,365:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,367:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,371:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,375:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,376:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,377:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,377:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,378:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,380:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,382:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,383:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,387:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,389:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,391:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-03 19:32:45,561:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,563:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,565:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:45,567:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,568:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,571:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,573:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:45,581:INFO:Calculating mean and std
2024-03-03 19:32:45,582:INFO:Creating metrics dataframe
2024-03-03 19:32:45,587:INFO:Uploading results into container
2024-03-03 19:32:45,588:INFO:Uploading model into container now
2024-03-03 19:32:45,589:INFO:_master_model_container: 24
2024-03-03 19:32:45,589:INFO:_display_container: 3
2024-03-03 19:32:45,590:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5243)
2024-03-03 19:32:45,590:INFO:create_model() successfully completed......................................
2024-03-03 19:32:45,671:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:45,671:INFO:Creating metrics dataframe
2024-03-03 19:32:45,680:INFO:Initializing Gradient Boosting Classifier
2024-03-03 19:32:45,680:INFO:Total runtime is 0.08178436358769733 minutes
2024-03-03 19:32:45,684:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:45,685:INFO:Initializing create_model()
2024-03-03 19:32:45,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:45,685:INFO:Checking exceptions
2024-03-03 19:32:45,685:INFO:Importing libraries
2024-03-03 19:32:45,685:INFO:Copying training dataset
2024-03-03 19:32:45,692:INFO:Defining folds
2024-03-03 19:32:45,692:INFO:Declaring metric variables
2024-03-03 19:32:45,695:INFO:Importing untrained model
2024-03-03 19:32:45,700:INFO:Gradient Boosting Classifier Imported successfully
2024-03-03 19:32:45,710:INFO:Starting cross validation
2024-03-03 19:32:45,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:46,160:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,160:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,170:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,173:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,174:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,178:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,178:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,182:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,182:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,185:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,188:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,188:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,190:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,191:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,193:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,197:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,197:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,198:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,205:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,441:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,442:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,443:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,446:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,447:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,448:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,456:INFO:Calculating mean and std
2024-03-03 19:32:46,456:INFO:Creating metrics dataframe
2024-03-03 19:32:46,458:INFO:Uploading results into container
2024-03-03 19:32:46,458:INFO:Uploading model into container now
2024-03-03 19:32:46,459:INFO:_master_model_container: 25
2024-03-03 19:32:46,459:INFO:_display_container: 3
2024-03-03 19:32:46,459:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5243, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-03 19:32:46,459:INFO:create_model() successfully completed......................................
2024-03-03 19:32:46,543:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:46,544:INFO:Creating metrics dataframe
2024-03-03 19:32:46,561:INFO:Initializing Linear Discriminant Analysis
2024-03-03 19:32:46,561:INFO:Total runtime is 0.09646038611729939 minutes
2024-03-03 19:32:46,565:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:46,566:INFO:Initializing create_model()
2024-03-03 19:32:46,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:46,566:INFO:Checking exceptions
2024-03-03 19:32:46,567:INFO:Importing libraries
2024-03-03 19:32:46,567:INFO:Copying training dataset
2024-03-03 19:32:46,577:INFO:Defining folds
2024-03-03 19:32:46,577:INFO:Declaring metric variables
2024-03-03 19:32:46,581:INFO:Importing untrained model
2024-03-03 19:32:46,589:INFO:Linear Discriminant Analysis Imported successfully
2024-03-03 19:32:46,604:INFO:Starting cross validation
2024-03-03 19:32:46,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:46,724:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,726:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,726:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,728:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,730:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,731:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,734:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,737:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,740:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,740:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,741:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,742:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,745:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,745:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,751:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,752:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,758:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,760:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,761:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,764:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,765:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,768:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,770:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,771:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,771:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,774:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,776:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,805:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,807:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,809:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:46,809:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,811:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,813:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,816:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:46,824:INFO:Calculating mean and std
2024-03-03 19:32:46,828:INFO:Creating metrics dataframe
2024-03-03 19:32:46,833:INFO:Uploading results into container
2024-03-03 19:32:46,835:INFO:Uploading model into container now
2024-03-03 19:32:46,837:INFO:_master_model_container: 26
2024-03-03 19:32:46,838:INFO:_display_container: 3
2024-03-03 19:32:46,838:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-03 19:32:46,839:INFO:create_model() successfully completed......................................
2024-03-03 19:32:46,934:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:46,935:INFO:Creating metrics dataframe
2024-03-03 19:32:46,950:INFO:Initializing Extra Trees Classifier
2024-03-03 19:32:46,951:INFO:Total runtime is 0.10297173659006753 minutes
2024-03-03 19:32:46,957:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:46,957:INFO:Initializing create_model()
2024-03-03 19:32:46,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:46,958:INFO:Checking exceptions
2024-03-03 19:32:46,958:INFO:Importing libraries
2024-03-03 19:32:46,958:INFO:Copying training dataset
2024-03-03 19:32:46,968:INFO:Defining folds
2024-03-03 19:32:46,968:INFO:Declaring metric variables
2024-03-03 19:32:46,974:INFO:Importing untrained model
2024-03-03 19:32:46,978:INFO:Extra Trees Classifier Imported successfully
2024-03-03 19:32:46,987:INFO:Starting cross validation
2024-03-03 19:32:46,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:47,379:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,390:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,391:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,394:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,408:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,411:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,417:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,428:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,438:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,442:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,446:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,473:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,475:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,478:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,483:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,491:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,492:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,497:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,501:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,506:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,508:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,511:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,513:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,643:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,645:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,652:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:47,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:47,674:INFO:Calculating mean and std
2024-03-03 19:32:47,677:INFO:Creating metrics dataframe
2024-03-03 19:32:47,681:INFO:Uploading results into container
2024-03-03 19:32:47,684:INFO:Uploading model into container now
2024-03-03 19:32:47,685:INFO:_master_model_container: 27
2024-03-03 19:32:47,685:INFO:_display_container: 3
2024-03-03 19:32:47,686:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5243, verbose=0,
                     warm_start=False)
2024-03-03 19:32:47,687:INFO:create_model() successfully completed......................................
2024-03-03 19:32:47,795:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:47,796:INFO:Creating metrics dataframe
2024-03-03 19:32:47,814:INFO:Initializing Extreme Gradient Boosting
2024-03-03 19:32:47,814:INFO:Total runtime is 0.11734694639841714 minutes
2024-03-03 19:32:47,820:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:47,821:INFO:Initializing create_model()
2024-03-03 19:32:47,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:47,821:INFO:Checking exceptions
2024-03-03 19:32:47,821:INFO:Importing libraries
2024-03-03 19:32:47,821:INFO:Copying training dataset
2024-03-03 19:32:47,829:INFO:Defining folds
2024-03-03 19:32:47,829:INFO:Declaring metric variables
2024-03-03 19:32:47,833:INFO:Importing untrained model
2024-03-03 19:32:47,839:INFO:Extreme Gradient Boosting Imported successfully
2024-03-03 19:32:47,847:INFO:Starting cross validation
2024-03-03 19:32:47,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:48,074:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,077:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,077:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,080:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,082:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,085:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,085:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,086:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,090:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,092:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,092:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,092:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,092:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,095:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,100:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,103:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,103:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,108:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,110:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,110:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,110:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,113:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,221:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,222:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,222:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:48,225:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,228:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,229:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,231:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:48,243:INFO:Calculating mean and std
2024-03-03 19:32:48,244:INFO:Creating metrics dataframe
2024-03-03 19:32:48,247:INFO:Uploading results into container
2024-03-03 19:32:48,247:INFO:Uploading model into container now
2024-03-03 19:32:48,248:INFO:_master_model_container: 28
2024-03-03 19:32:48,248:INFO:_display_container: 3
2024-03-03 19:32:48,249:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-03-03 19:32:48,249:INFO:create_model() successfully completed......................................
2024-03-03 19:32:48,330:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:48,330:INFO:Creating metrics dataframe
2024-03-03 19:32:48,343:INFO:Initializing Light Gradient Boosting Machine
2024-03-03 19:32:48,343:INFO:Total runtime is 0.12615911960601806 minutes
2024-03-03 19:32:48,347:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:48,347:INFO:Initializing create_model()
2024-03-03 19:32:48,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:48,347:INFO:Checking exceptions
2024-03-03 19:32:48,347:INFO:Importing libraries
2024-03-03 19:32:48,347:INFO:Copying training dataset
2024-03-03 19:32:48,357:INFO:Defining folds
2024-03-03 19:32:48,357:INFO:Declaring metric variables
2024-03-03 19:32:48,362:INFO:Importing untrained model
2024-03-03 19:32:48,366:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:32:48,377:INFO:Starting cross validation
2024-03-03 19:32:48,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:49,000:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,003:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,009:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,011:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,011:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,012:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,017:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,024:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,025:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,028:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,031:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,035:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,098:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,105:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,109:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,152:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,155:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,160:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,175:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,186:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,186:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,188:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,193:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,378:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,380:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,382:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,385:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,400:INFO:Calculating mean and std
2024-03-03 19:32:49,402:INFO:Creating metrics dataframe
2024-03-03 19:32:49,404:INFO:Uploading results into container
2024-03-03 19:32:49,405:INFO:Uploading model into container now
2024-03-03 19:32:49,406:INFO:_master_model_container: 29
2024-03-03 19:32:49,406:INFO:_display_container: 3
2024-03-03 19:32:49,407:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-03 19:32:49,407:INFO:create_model() successfully completed......................................
2024-03-03 19:32:49,495:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:49,495:INFO:Creating metrics dataframe
2024-03-03 19:32:49,504:INFO:Initializing Dummy Classifier
2024-03-03 19:32:49,505:INFO:Total runtime is 0.14552435874938963 minutes
2024-03-03 19:32:49,508:INFO:SubProcess create_model() called ==================================
2024-03-03 19:32:49,508:INFO:Initializing create_model()
2024-03-03 19:32:49,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEC2B7290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:49,509:INFO:Checking exceptions
2024-03-03 19:32:49,509:INFO:Importing libraries
2024-03-03 19:32:49,509:INFO:Copying training dataset
2024-03-03 19:32:49,514:INFO:Defining folds
2024-03-03 19:32:49,515:INFO:Declaring metric variables
2024-03-03 19:32:49,520:INFO:Importing untrained model
2024-03-03 19:32:49,524:INFO:Dummy Classifier Imported successfully
2024-03-03 19:32:49,531:INFO:Starting cross validation
2024-03-03 19:32:49,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:32:49,637:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,639:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,641:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,643:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,644:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,647:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,648:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,648:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,650:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,650:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,650:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,651:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,652:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,655:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,655:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,655:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,656:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,665:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,709:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,710:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,712:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:32:49,713:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,713:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,715:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,716:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:32:49,722:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:32:49,728:INFO:Calculating mean and std
2024-03-03 19:32:49,729:INFO:Creating metrics dataframe
2024-03-03 19:32:49,731:INFO:Uploading results into container
2024-03-03 19:32:49,731:INFO:Uploading model into container now
2024-03-03 19:32:49,733:INFO:_master_model_container: 30
2024-03-03 19:32:49,733:INFO:_display_container: 3
2024-03-03 19:32:49,734:INFO:DummyClassifier(constant=None, random_state=5243, strategy='prior')
2024-03-03 19:32:49,734:INFO:create_model() successfully completed......................................
2024-03-03 19:32:49,824:INFO:SubProcess create_model() end ==================================
2024-03-03 19:32:49,824:INFO:Creating metrics dataframe
2024-03-03 19:32:49,873:INFO:Initializing create_model()
2024-03-03 19:32:49,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:49,874:INFO:Checking exceptions
2024-03-03 19:32:49,878:INFO:Importing libraries
2024-03-03 19:32:49,878:INFO:Copying training dataset
2024-03-03 19:32:49,888:INFO:Defining folds
2024-03-03 19:32:49,889:INFO:Declaring metric variables
2024-03-03 19:32:49,889:INFO:Importing untrained model
2024-03-03 19:32:49,889:INFO:Declaring custom model
2024-03-03 19:32:49,890:INFO:Linear Discriminant Analysis Imported successfully
2024-03-03 19:32:49,891:INFO:Cross validation set to False
2024-03-03 19:32:49,891:INFO:Fitting Model
2024-03-03 19:32:49,977:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-03 19:32:49,977:INFO:create_model() successfully completed......................................
2024-03-03 19:32:50,073:INFO:Initializing create_model()
2024-03-03 19:32:50,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:50,073:INFO:Checking exceptions
2024-03-03 19:32:50,076:INFO:Importing libraries
2024-03-03 19:32:50,076:INFO:Copying training dataset
2024-03-03 19:32:50,087:INFO:Defining folds
2024-03-03 19:32:50,087:INFO:Declaring metric variables
2024-03-03 19:32:50,087:INFO:Importing untrained model
2024-03-03 19:32:50,087:INFO:Declaring custom model
2024-03-03 19:32:50,088:INFO:Ridge Classifier Imported successfully
2024-03-03 19:32:50,089:INFO:Cross validation set to False
2024-03-03 19:32:50,090:INFO:Fitting Model
2024-03-03 19:32:50,139:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001)
2024-03-03 19:32:50,139:INFO:create_model() successfully completed......................................
2024-03-03 19:32:50,236:INFO:Initializing create_model()
2024-03-03 19:32:50,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:32:50,237:INFO:Checking exceptions
2024-03-03 19:32:50,239:INFO:Importing libraries
2024-03-03 19:32:50,239:INFO:Copying training dataset
2024-03-03 19:32:50,249:INFO:Defining folds
2024-03-03 19:32:50,250:INFO:Declaring metric variables
2024-03-03 19:32:50,250:INFO:Importing untrained model
2024-03-03 19:32:50,250:INFO:Declaring custom model
2024-03-03 19:32:50,251:INFO:Logistic Regression Imported successfully
2024-03-03 19:32:50,252:INFO:Cross validation set to False
2024-03-03 19:32:50,252:INFO:Fitting Model
2024-03-03 19:32:50,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:32:50,669:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:32:50,669:WARNING:
2024-03-03 19:32:50,669:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:32:50,669:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:32:50,669:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:32:50,669:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:32:50,669:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:32:50,670:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-03 19:32:50,670:INFO:create_model() successfully completed......................................
2024-03-03 19:32:50,787:INFO:_master_model_container: 30
2024-03-03 19:32:50,787:INFO:_display_container: 3
2024-03-03 19:32:50,788:INFO:[LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-03-03 19:32:50,788:INFO:compare_models() successfully completed......................................
2024-03-03 19:34:05,398:INFO:Initializing create_model()
2024-03-03 19:34:05,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:34:05,398:INFO:Checking exceptions
2024-03-03 19:34:05,418:INFO:Importing libraries
2024-03-03 19:34:05,418:INFO:Copying training dataset
2024-03-03 19:34:05,430:INFO:Defining folds
2024-03-03 19:34:05,430:INFO:Declaring metric variables
2024-03-03 19:34:05,434:INFO:Importing untrained model
2024-03-03 19:34:05,438:INFO:Random Forest Classifier Imported successfully
2024-03-03 19:34:05,451:INFO:Starting cross validation
2024-03-03 19:34:05,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:34:06,005:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,010:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,014:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,019:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,096:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,098:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,100:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,105:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,107:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,112:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,113:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,165:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,173:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,179:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,228:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,231:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,236:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,242:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,246:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,251:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,253:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,502:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,513:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,531:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:06,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,537:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:06,551:INFO:Calculating mean and std
2024-03-03 19:34:06,552:INFO:Creating metrics dataframe
2024-03-03 19:34:06,561:INFO:Finalizing model
2024-03-03 19:34:06,813:INFO:Uploading results into container
2024-03-03 19:34:06,813:INFO:Uploading model into container now
2024-03-03 19:34:06,830:INFO:_master_model_container: 31
2024-03-03 19:34:06,830:INFO:_display_container: 4
2024-03-03 19:34:06,831:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5243, verbose=0,
                       warm_start=False)
2024-03-03 19:34:06,831:INFO:create_model() successfully completed......................................
2024-03-03 19:34:11,318:INFO:Initializing create_model()
2024-03-03 19:34:11,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:34:11,318:INFO:Checking exceptions
2024-03-03 19:34:11,348:INFO:Importing libraries
2024-03-03 19:34:11,348:INFO:Copying training dataset
2024-03-03 19:34:11,366:INFO:Defining folds
2024-03-03 19:34:11,367:INFO:Declaring metric variables
2024-03-03 19:34:11,376:INFO:Importing untrained model
2024-03-03 19:34:11,383:INFO:Logistic Regression Imported successfully
2024-03-03 19:34:11,399:INFO:Starting cross validation
2024-03-03 19:34:11,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:34:11,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,814:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,817:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,838:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,848:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,848:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,851:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,852:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,852:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,857:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,858:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,859:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,860:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,862:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,863:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,864:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:11,865:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,865:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,869:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,873:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,875:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,877:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,882:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,886:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,893:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,894:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,896:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,896:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,898:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:11,899:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:11,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,068:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:12,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:34:12,090:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:12,092:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,093:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:34:12,095:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,095:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:34:12,116:INFO:Calculating mean and std
2024-03-03 19:34:12,117:INFO:Creating metrics dataframe
2024-03-03 19:34:12,122:INFO:Finalizing model
2024-03-03 19:34:12,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:34:12,525:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:34:12,525:WARNING:
2024-03-03 19:34:12,525:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:34:12,525:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:34:12,525:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:34:12,525:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:34:12,525:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:34:12,534:INFO:Uploading results into container
2024-03-03 19:34:12,536:INFO:Uploading model into container now
2024-03-03 19:34:12,550:INFO:_master_model_container: 32
2024-03-03 19:34:12,550:INFO:_display_container: 5
2024-03-03 19:34:12,550:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-03 19:34:12,550:INFO:create_model() successfully completed......................................
2024-03-03 19:34:34,789:INFO:Initializing plot_model()
2024-03-03 19:34:34,789:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 19:34:34,789:INFO:Checking exceptions
2024-03-03 19:34:34,796:INFO:Preloading libraries
2024-03-03 19:34:34,796:INFO:Copying training dataset
2024-03-03 19:34:34,796:INFO:Plot type: auc
2024-03-03 19:34:35,000:INFO:Fitting Model
2024-03-03 19:34:35,408:WARNING:d:\dev\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
2024-03-03 19:34:35,408:WARNING:  warnings.warn(
2024-03-03 19:34:35,408:INFO:Scoring test/hold-out set
2024-03-03 19:34:35,898:INFO:Visual Rendered Successfully
2024-03-03 19:34:36,006:INFO:plot_model() successfully completed......................................
2024-03-03 19:38:58,844:INFO:Initializing plot_model()
2024-03-03 19:38:58,846:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 19:38:58,846:INFO:Checking exceptions
2024-03-03 19:38:58,853:INFO:Preloading libraries
2024-03-03 19:38:58,854:INFO:Copying training dataset
2024-03-03 19:38:58,854:INFO:Plot type: feature
2024-03-03 19:38:59,110:INFO:Visual Rendered Successfully
2024-03-03 19:38:59,199:INFO:plot_model() successfully completed......................................
2024-03-03 19:42:53,796:INFO:Initializing create_model()
2024-03-03 19:42:53,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:42:53,797:INFO:Checking exceptions
2024-03-03 19:42:53,815:INFO:Importing libraries
2024-03-03 19:42:53,816:INFO:Copying training dataset
2024-03-03 19:42:53,827:INFO:Defining folds
2024-03-03 19:42:53,827:INFO:Declaring metric variables
2024-03-03 19:42:53,832:INFO:Importing untrained model
2024-03-03 19:42:53,837:INFO:Ridge Classifier Imported successfully
2024-03-03 19:42:53,847:INFO:Starting cross validation
2024-03-03 19:42:53,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:42:59,322:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,324:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,326:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,326:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,331:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,331:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,332:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,337:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,337:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,337:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,340:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,342:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,342:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,343:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,344:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,345:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,353:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,353:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,355:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,358:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,359:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,360:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,361:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,364:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,371:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,554:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,556:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,556:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,558:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,559:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,562:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,563:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,646:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:42:59,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,656:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:42:59,661:INFO:Calculating mean and std
2024-03-03 19:42:59,663:INFO:Creating metrics dataframe
2024-03-03 19:42:59,667:INFO:Finalizing model
2024-03-03 19:42:59,709:INFO:Uploading results into container
2024-03-03 19:42:59,710:INFO:Uploading model into container now
2024-03-03 19:42:59,722:INFO:_master_model_container: 33
2024-03-03 19:42:59,722:INFO:_display_container: 6
2024-03-03 19:42:59,723:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001)
2024-03-03 19:42:59,723:INFO:create_model() successfully completed......................................
2024-03-03 19:42:59,814:INFO:Initializing create_model()
2024-03-03 19:42:59,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:42:59,815:INFO:Checking exceptions
2024-03-03 19:42:59,835:INFO:Importing libraries
2024-03-03 19:42:59,835:INFO:Copying training dataset
2024-03-03 19:42:59,848:INFO:Defining folds
2024-03-03 19:42:59,848:INFO:Declaring metric variables
2024-03-03 19:42:59,852:INFO:Importing untrained model
2024-03-03 19:42:59,857:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:42:59,867:INFO:Starting cross validation
2024-03-03 19:42:59,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:43:00,590:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,592:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,597:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,597:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,599:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,601:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,605:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,605:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,609:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,609:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,613:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,624:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,627:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,631:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,638:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,686:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,691:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,695:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,712:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,715:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,720:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,726:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,727:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,729:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,741:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,798:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,801:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,806:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,973:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,978:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,983:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,991:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:43:00,994:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:00,996:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:01,000:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:01,016:INFO:Calculating mean and std
2024-03-03 19:43:01,018:INFO:Creating metrics dataframe
2024-03-03 19:43:01,025:INFO:Finalizing model
2024-03-03 19:43:01,162:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:43:01,167:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000319 seconds.
2024-03-03 19:43:01,167:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:43:01,167:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:43:01,168:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:43:01,168:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:43:01,171:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:43:01,171:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:43:01,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:43:01,239:INFO:Uploading results into container
2024-03-03 19:43:01,240:INFO:Uploading model into container now
2024-03-03 19:43:01,253:INFO:_master_model_container: 34
2024-03-03 19:43:01,253:INFO:_display_container: 7
2024-03-03 19:43:01,254:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-03 19:43:01,255:INFO:create_model() successfully completed......................................
2024-03-03 19:43:01,346:INFO:Initializing blend_models()
2024-03-03 19:43:01,347:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator_list=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-03-03 19:43:01,347:INFO:Checking exceptions
2024-03-03 19:43:01,347:INFO:Estimator RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5243, solver='auto',
                tol=0.0001) doesn't support probabilities, falling back to 'hard'.
2024-03-03 19:43:01,363:INFO:Importing libraries
2024-03-03 19:43:01,363:INFO:Copying training dataset
2024-03-03 19:43:01,369:INFO:Getting model names
2024-03-03 19:43:01,374:INFO:SubProcess create_model() called ==================================
2024-03-03 19:43:01,377:INFO:Initializing create_model()
2024-03-03 19:43:01,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=VotingClassifier(estimators=[('Light Gradient Boosting Machine',
                              LGBMClassifier(boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0,
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=5243, reg_alpha=0.0,
                                             reg_lamb...
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=5243,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=5243, solver='auto',
                                              tol=0.0001))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DDEBE13C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:43:01,377:INFO:Checking exceptions
2024-03-03 19:43:01,377:INFO:Importing libraries
2024-03-03 19:43:01,377:INFO:Copying training dataset
2024-03-03 19:43:01,384:INFO:Defining folds
2024-03-03 19:43:01,385:INFO:Declaring metric variables
2024-03-03 19:43:01,389:INFO:Importing untrained model
2024-03-03 19:43:01,390:INFO:Declaring custom model
2024-03-03 19:43:01,396:INFO:Voting Classifier Imported successfully
2024-03-03 19:43:01,407:INFO:Starting cross validation
2024-03-03 19:43:01,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:43:01,850:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:01,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:01,876:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:01,894:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:01,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:02,024:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:02,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:02,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:02,781:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,781:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,781:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,783:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,783:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,784:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,788:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,790:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,791:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,796:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,796:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,805:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,808:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,813:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,816:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,836:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,838:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,844:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,849:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,910:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:02,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,917:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:02,922:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,021:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:03,023:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,027:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,033:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,043:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:03,045:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,053:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,120:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:03,131:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:03,247:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:03,250:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,255:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-03 19:43:03,257:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,258:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:43:03,273:INFO:Calculating mean and std
2024-03-03 19:43:03,275:INFO:Creating metrics dataframe
2024-03-03 19:43:03,281:INFO:Finalizing model
2024-03-03 19:43:03,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-03 19:43:03,543:INFO:Uploading results into container
2024-03-03 19:43:03,544:INFO:Uploading model into container now
2024-03-03 19:43:03,544:INFO:_master_model_container: 35
2024-03-03 19:43:03,545:INFO:_display_container: 8
2024-03-03 19:43:03,549:INFO:VotingClassifier(estimators=[('Light Gradient Boosting Machine',
                              LGBMClassifier(boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0,
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=5243, reg_alpha=0.0,
                                             reg_lamb...
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=5243,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=5243, solver='auto',
                                              tol=0.0001))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None)
2024-03-03 19:43:03,550:INFO:create_model() successfully completed......................................
2024-03-03 19:43:03,666:INFO:SubProcess create_model() end ==================================
2024-03-03 19:43:03,681:INFO:_master_model_container: 35
2024-03-03 19:43:03,681:INFO:_display_container: 8
2024-03-03 19:43:03,690:INFO:VotingClassifier(estimators=[('Light Gradient Boosting Machine',
                              LGBMClassifier(boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0,
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=5243, reg_alpha=0.0,
                                             reg_lamb...
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=5243,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=5243, solver='auto',
                                              tol=0.0001))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None)
2024-03-03 19:43:03,690:INFO:blend_models() successfully completed......................................
2024-03-03 19:44:19,173:INFO:Initializing optimize_threshold()
2024-03-03 19:44:19,173:INFO:optimize_threshold(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), optimize=Accuracy, return_data=False, plot_kwargs=None, verbose=True, shgo_kwargs={'true_negative': 500, 'false_negative': -2000})
2024-03-03 19:44:19,173:INFO:Importing libraries
2024-03-03 19:44:19,173:INFO:Checking exceptions
2024-03-03 19:44:19,173:INFO:defining variables
2024-03-03 19:44:19,173:INFO:starting optimization
2024-03-03 19:48:03,657:INFO:Initializing optimize_threshold()
2024-03-03 19:48:03,658:INFO:optimize_threshold(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), optimize=Accuracy, return_data=False, plot_kwargs=None, verbose=True, shgo_kwargs={})
2024-03-03 19:48:03,658:INFO:Importing libraries
2024-03-03 19:48:03,658:INFO:Checking exceptions
2024-03-03 19:48:03,658:INFO:defining variables
2024-03-03 19:48:03,659:INFO:starting optimization
2024-03-03 19:48:03,759:INFO:Initializing create_model()
2024-03-03 19:48:03,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:03,759:INFO:Checking exceptions
2024-03-03 19:48:03,761:INFO:Importing libraries
2024-03-03 19:48:03,761:INFO:Copying training dataset
2024-03-03 19:48:03,767:INFO:Defining folds
2024-03-03 19:48:03,768:INFO:Declaring metric variables
2024-03-03 19:48:03,768:INFO:Importing untrained model
2024-03-03 19:48:03,768:INFO:Declaring custom model
2024-03-03 19:48:03,768:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:03,769:INFO:Starting cross validation
2024-03-03 19:48:03,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:05,071:WARNING:d:\dev\venv\Lib\site-packages\joblib\externals\loky\process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
2024-03-03 19:48:05,071:WARNING:  warnings.warn(
2024-03-03 19:48:23,931:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,931:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,931:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,931:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,931:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,932:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:23,962:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,963:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,964:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,968:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,968:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,968:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,983:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,983:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,985:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,988:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:23,990:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,397:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:24,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,399:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:24,402:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,406:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,407:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,409:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:24,419:INFO:Calculating mean and std
2024-03-03 19:48:24,419:INFO:Creating metrics dataframe
2024-03-03 19:48:24,422:INFO:Finalizing model
2024-03-03 19:48:24,458:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:24,459:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000253 seconds.
2024-03-03 19:48:24,459:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:24,459:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:24,459:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:24,459:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:24,460:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:24,460:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:24,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:24,582:INFO:Uploading results into container
2024-03-03 19:48:24,583:INFO:Uploading model into container now
2024-03-03 19:48:24,583:INFO:_master_model_container: 36
2024-03-03 19:48:24,584:INFO:_display_container: 9
2024-03-03 19:48:24,585:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:24,586:INFO:create_model() successfully completed......................................
2024-03-03 19:48:24,697:INFO:Threshold: 0.375. Accuracy: 0.761
2024-03-03 19:48:24,697:INFO:Initializing create_model()
2024-03-03 19:48:24,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:24,697:INFO:Checking exceptions
2024-03-03 19:48:24,699:INFO:Importing libraries
2024-03-03 19:48:24,699:INFO:Copying training dataset
2024-03-03 19:48:24,705:INFO:Defining folds
2024-03-03 19:48:24,705:INFO:Declaring metric variables
2024-03-03 19:48:24,706:INFO:Importing untrained model
2024-03-03 19:48:24,706:INFO:Declaring custom model
2024-03-03 19:48:24,707:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:24,707:INFO:Starting cross validation
2024-03-03 19:48:24,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:25,423:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,425:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,426:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,428:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,435:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,438:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,455:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,459:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,463:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,467:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,472:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,521:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,528:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,540:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,602:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,608:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,615:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,617:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,621:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,625:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,832:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,835:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,841:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,851:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,865:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:25,867:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,871:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,875:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:25,884:INFO:Calculating mean and std
2024-03-03 19:48:25,885:INFO:Creating metrics dataframe
2024-03-03 19:48:25,887:INFO:Finalizing model
2024-03-03 19:48:25,922:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:25,922:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000262 seconds.
2024-03-03 19:48:25,922:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:25,922:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:25,922:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:25,922:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:25,923:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:25,923:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:25,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:25,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:26,011:INFO:Uploading results into container
2024-03-03 19:48:26,012:INFO:Uploading model into container now
2024-03-03 19:48:26,012:INFO:_master_model_container: 37
2024-03-03 19:48:26,012:INFO:_display_container: 9
2024-03-03 19:48:26,014:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.125,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:26,014:INFO:create_model() successfully completed......................................
2024-03-03 19:48:26,115:INFO:Threshold: 0.125. Accuracy: 0.7516
2024-03-03 19:48:26,116:INFO:Initializing create_model()
2024-03-03 19:48:26,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:26,116:INFO:Checking exceptions
2024-03-03 19:48:26,118:INFO:Importing libraries
2024-03-03 19:48:26,118:INFO:Copying training dataset
2024-03-03 19:48:26,126:INFO:Defining folds
2024-03-03 19:48:26,126:INFO:Declaring metric variables
2024-03-03 19:48:26,127:INFO:Importing untrained model
2024-03-03 19:48:26,127:INFO:Declaring custom model
2024-03-03 19:48:26,127:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:26,128:INFO:Starting cross validation
2024-03-03 19:48:26,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:26,744:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,746:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,749:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,752:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,756:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,757:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,758:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,763:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,774:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,792:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,795:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,799:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,804:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,903:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,910:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,912:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,916:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,917:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,918:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,920:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,922:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,925:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,930:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,943:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:26,945:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,949:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:26,954:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,165:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:27,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,171:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:27,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,182:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:27,190:INFO:Calculating mean and std
2024-03-03 19:48:27,191:INFO:Creating metrics dataframe
2024-03-03 19:48:27,193:INFO:Finalizing model
2024-03-03 19:48:27,230:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:27,230:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000234 seconds.
2024-03-03 19:48:27,230:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:27,230:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:27,230:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:27,230:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:27,230:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:27,231:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:27,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:27,323:INFO:Uploading results into container
2024-03-03 19:48:27,324:INFO:Uploading model into container now
2024-03-03 19:48:27,324:INFO:_master_model_container: 38
2024-03-03 19:48:27,324:INFO:_display_container: 9
2024-03-03 19:48:27,327:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:27,327:INFO:create_model() successfully completed......................................
2024-03-03 19:48:27,427:INFO:Threshold: 0.5. Accuracy: 0.7543
2024-03-03 19:48:27,428:INFO:Initializing create_model()
2024-03-03 19:48:27,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:27,428:INFO:Checking exceptions
2024-03-03 19:48:27,429:INFO:Importing libraries
2024-03-03 19:48:27,429:INFO:Copying training dataset
2024-03-03 19:48:27,433:INFO:Defining folds
2024-03-03 19:48:27,433:INFO:Declaring metric variables
2024-03-03 19:48:27,433:INFO:Importing untrained model
2024-03-03 19:48:27,434:INFO:Declaring custom model
2024-03-03 19:48:27,434:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:27,434:INFO:Starting cross validation
2024-03-03 19:48:27,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:28,056:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,059:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,061:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,063:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,064:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,068:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,072:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,072:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,074:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,078:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,080:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,090:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,102:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,127:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,130:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,136:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,140:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,161:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,216:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,221:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,385:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,392:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:28,394:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,398:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:28,412:INFO:Calculating mean and std
2024-03-03 19:48:28,413:INFO:Creating metrics dataframe
2024-03-03 19:48:28,414:INFO:Finalizing model
2024-03-03 19:48:28,448:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:28,449:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000226 seconds.
2024-03-03 19:48:28,449:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:28,449:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:28,449:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:28,449:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:28,449:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:28,449:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:28,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:28,534:INFO:Uploading results into container
2024-03-03 19:48:28,535:INFO:Uploading model into container now
2024-03-03 19:48:28,535:INFO:_master_model_container: 39
2024-03-03 19:48:28,535:INFO:_display_container: 9
2024-03-03 19:48:28,537:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:28,537:INFO:create_model() successfully completed......................................
2024-03-03 19:48:28,634:INFO:Threshold: 0.25. Accuracy: 0.765
2024-03-03 19:48:28,635:INFO:Initializing create_model()
2024-03-03 19:48:28,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:28,635:INFO:Checking exceptions
2024-03-03 19:48:28,636:INFO:Importing libraries
2024-03-03 19:48:28,636:INFO:Copying training dataset
2024-03-03 19:48:28,640:INFO:Defining folds
2024-03-03 19:48:28,640:INFO:Declaring metric variables
2024-03-03 19:48:28,641:INFO:Importing untrained model
2024-03-03 19:48:28,641:INFO:Declaring custom model
2024-03-03 19:48:28,642:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:28,642:INFO:Starting cross validation
2024-03-03 19:48:28,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:29,328:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,328:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,330:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,330:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,335:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,335:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,365:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,368:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,377:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,398:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,426:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,429:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,484:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,486:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,487:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,489:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,494:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,495:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,496:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,499:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,700:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,702:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,702:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:29,704:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,706:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,708:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,713:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:29,721:INFO:Calculating mean and std
2024-03-03 19:48:29,722:INFO:Creating metrics dataframe
2024-03-03 19:48:29,724:INFO:Finalizing model
2024-03-03 19:48:29,757:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:29,758:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000243 seconds.
2024-03-03 19:48:29,758:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:29,758:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:29,758:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:29,759:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:29,759:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:29,759:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:29,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:29,847:INFO:Uploading results into container
2024-03-03 19:48:29,848:INFO:Uploading model into container now
2024-03-03 19:48:29,848:INFO:_master_model_container: 40
2024-03-03 19:48:29,848:INFO:_display_container: 9
2024-03-03 19:48:29,850:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.625,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:29,850:INFO:create_model() successfully completed......................................
2024-03-03 19:48:29,950:INFO:Threshold: 0.625. Accuracy: 0.7503
2024-03-03 19:48:29,950:INFO:Initializing create_model()
2024-03-03 19:48:29,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.75, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:29,950:INFO:Checking exceptions
2024-03-03 19:48:29,951:INFO:Importing libraries
2024-03-03 19:48:29,951:INFO:Copying training dataset
2024-03-03 19:48:29,956:INFO:Defining folds
2024-03-03 19:48:29,956:INFO:Declaring metric variables
2024-03-03 19:48:29,956:INFO:Importing untrained model
2024-03-03 19:48:29,956:INFO:Declaring custom model
2024-03-03 19:48:29,957:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:29,957:INFO:Starting cross validation
2024-03-03 19:48:29,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:30,578:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,580:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,585:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,589:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,598:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,598:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,600:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,602:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,609:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,609:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,610:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,615:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,673:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,687:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,695:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,698:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,748:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,750:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,751:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,752:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,757:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,760:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,939:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,941:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,946:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,950:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,964:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:30,965:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,972:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:30,982:INFO:Calculating mean and std
2024-03-03 19:48:30,983:INFO:Creating metrics dataframe
2024-03-03 19:48:30,985:INFO:Finalizing model
2024-03-03 19:48:31,019:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:31,019:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000254 seconds.
2024-03-03 19:48:31,020:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:31,020:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:31,020:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:31,020:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:31,020:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:31,020:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:31,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:31,100:INFO:Uploading results into container
2024-03-03 19:48:31,102:INFO:Uploading model into container now
2024-03-03 19:48:31,102:INFO:_master_model_container: 41
2024-03-03 19:48:31,102:INFO:_display_container: 9
2024-03-03 19:48:31,104:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.75,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:31,104:INFO:create_model() successfully completed......................................
2024-03-03 19:48:31,200:INFO:Threshold: 0.75. Accuracy: 0.749
2024-03-03 19:48:31,201:INFO:Initializing create_model()
2024-03-03 19:48:31,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:31,202:INFO:Checking exceptions
2024-03-03 19:48:31,203:INFO:Importing libraries
2024-03-03 19:48:31,203:INFO:Copying training dataset
2024-03-03 19:48:31,208:INFO:Defining folds
2024-03-03 19:48:31,208:INFO:Declaring metric variables
2024-03-03 19:48:31,208:INFO:Importing untrained model
2024-03-03 19:48:31,208:INFO:Declaring custom model
2024-03-03 19:48:31,209:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:31,209:INFO:Starting cross validation
2024-03-03 19:48:31,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:31,909:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:31,912:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,916:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,920:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,924:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:31,927:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,936:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,946:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:31,948:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,960:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:31,962:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,967:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:31,972:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,023:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,025:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,025:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,028:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,030:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,032:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,034:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,083:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,084:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,090:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,091:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,095:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,095:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,278:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,280:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,281:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:32,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,291:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:32,301:INFO:Calculating mean and std
2024-03-03 19:48:32,301:INFO:Creating metrics dataframe
2024-03-03 19:48:32,303:INFO:Finalizing model
2024-03-03 19:48:32,338:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:32,338:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000250 seconds.
2024-03-03 19:48:32,338:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:32,338:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:32,339:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:32,339:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:32,339:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:32,339:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:32,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:32,425:INFO:Uploading results into container
2024-03-03 19:48:32,426:INFO:Uploading model into container now
2024-03-03 19:48:32,426:INFO:_master_model_container: 42
2024-03-03 19:48:32,426:INFO:_display_container: 9
2024-03-03 19:48:32,428:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:32,428:INFO:create_model() successfully completed......................................
2024-03-03 19:48:32,524:INFO:Threshold: 0.875. Accuracy: 0.7463
2024-03-03 19:48:32,524:INFO:Initializing create_model()
2024-03-03 19:48:32,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:32,525:INFO:Checking exceptions
2024-03-03 19:48:32,526:INFO:Importing libraries
2024-03-03 19:48:32,526:INFO:Copying training dataset
2024-03-03 19:48:32,531:INFO:Defining folds
2024-03-03 19:48:32,533:INFO:Declaring metric variables
2024-03-03 19:48:32,533:INFO:Importing untrained model
2024-03-03 19:48:32,533:INFO:Declaring custom model
2024-03-03 19:48:32,533:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:32,533:INFO:Starting cross validation
2024-03-03 19:48:32,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:33,177:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,179:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,183:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,184:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,187:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,187:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,189:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,189:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,193:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,199:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,204:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,214:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,217:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,271:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,275:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,300:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,303:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,307:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,309:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,312:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,364:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,366:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,370:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,373:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,533:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,535:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,540:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:33,540:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-03 19:48:33,550:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:33,558:INFO:Calculating mean and std
2024-03-03 19:48:33,558:INFO:Creating metrics dataframe
2024-03-03 19:48:33,560:INFO:Finalizing model
2024-03-03 19:48:33,593:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:33,594:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000277 seconds.
2024-03-03 19:48:33,594:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:33,594:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:33,594:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:33,594:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:33,595:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:33,595:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:33,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:33,708:INFO:Uploading results into container
2024-03-03 19:48:33,709:INFO:Uploading model into container now
2024-03-03 19:48:33,710:INFO:_master_model_container: 43
2024-03-03 19:48:33,710:INFO:_display_container: 9
2024-03-03 19:48:33,712:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.0,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:33,712:INFO:create_model() successfully completed......................................
2024-03-03 19:48:33,811:INFO:Threshold: 0.0. Accuracy: 0.3899
2024-03-03 19:48:33,813:INFO:Initializing create_model()
2024-03-03 19:48:33,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:33,813:INFO:Checking exceptions
2024-03-03 19:48:33,814:INFO:Importing libraries
2024-03-03 19:48:33,814:INFO:Copying training dataset
2024-03-03 19:48:33,818:INFO:Defining folds
2024-03-03 19:48:33,818:INFO:Declaring metric variables
2024-03-03 19:48:33,819:INFO:Importing untrained model
2024-03-03 19:48:33,819:INFO:Declaring custom model
2024-03-03 19:48:33,819:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:33,819:INFO:Starting cross validation
2024-03-03 19:48:33,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:34,529:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,538:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,544:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,550:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,552:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,553:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,559:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,559:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,564:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,565:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,587:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,589:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,596:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,602:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,646:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,729:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,733:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,737:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,743:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,744:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,749:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,759:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,761:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,771:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,989:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,991:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:34,991:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,995:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,997:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:34,999:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:35,001:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:35,004:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:35,014:INFO:Calculating mean and std
2024-03-03 19:48:35,015:INFO:Creating metrics dataframe
2024-03-03 19:48:35,017:INFO:Finalizing model
2024-03-03 19:48:35,058:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:35,059:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000344 seconds.
2024-03-03 19:48:35,059:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:35,059:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:35,060:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:35,060:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:35,060:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:35,060:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:35,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:35,150:INFO:Uploading results into container
2024-03-03 19:48:35,150:INFO:Uploading model into container now
2024-03-03 19:48:35,151:INFO:_master_model_container: 44
2024-03-03 19:48:35,151:INFO:_display_container: 9
2024-03-03 19:48:35,153:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:35,153:INFO:create_model() successfully completed......................................
2024-03-03 19:48:35,257:INFO:Threshold: 0.25. Accuracy: 0.765
2024-03-03 19:48:35,635:INFO:Initializing create_model()
2024-03-03 19:48:35,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2500000149011612, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:35,637:INFO:Checking exceptions
2024-03-03 19:48:35,647:INFO:Importing libraries
2024-03-03 19:48:35,648:INFO:Copying training dataset
2024-03-03 19:48:35,673:INFO:Defining folds
2024-03-03 19:48:35,673:INFO:Declaring metric variables
2024-03-03 19:48:35,673:INFO:Importing untrained model
2024-03-03 19:48:35,675:INFO:Declaring custom model
2024-03-03 19:48:35,677:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:35,677:INFO:Starting cross validation
2024-03-03 19:48:35,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:36,418:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,421:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,426:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,428:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,433:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,443:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,448:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,451:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,454:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,459:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,464:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,563:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,567:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,571:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,591:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,594:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,599:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,606:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,623:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,626:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,632:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,637:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,640:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,649:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,865:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,868:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,873:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,879:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,891:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:36,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,898:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:36,916:INFO:Calculating mean and std
2024-03-03 19:48:36,917:INFO:Creating metrics dataframe
2024-03-03 19:48:36,919:INFO:Finalizing model
2024-03-03 19:48:36,962:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:36,963:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000335 seconds.
2024-03-03 19:48:36,963:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:36,963:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:36,963:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:36,964:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:36,964:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:36,964:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:36,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:36,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:37,054:INFO:Uploading results into container
2024-03-03 19:48:37,055:INFO:Uploading model into container now
2024-03-03 19:48:37,056:INFO:_master_model_container: 45
2024-03-03 19:48:37,056:INFO:_display_container: 9
2024-03-03 19:48:37,059:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.2500000149011612,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:37,059:INFO:create_model() successfully completed......................................
2024-03-03 19:48:37,164:INFO:Threshold: 0.2500000149011612. Accuracy: 0.765
2024-03-03 19:48:37,264:INFO:Initializing create_model()
2024-03-03 19:48:37,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.21875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:37,265:INFO:Checking exceptions
2024-03-03 19:48:37,270:INFO:Importing libraries
2024-03-03 19:48:37,270:INFO:Copying training dataset
2024-03-03 19:48:37,295:INFO:Defining folds
2024-03-03 19:48:37,296:INFO:Declaring metric variables
2024-03-03 19:48:37,296:INFO:Importing untrained model
2024-03-03 19:48:37,296:INFO:Declaring custom model
2024-03-03 19:48:37,298:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:37,299:INFO:Starting cross validation
2024-03-03 19:48:37,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:38,027:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,030:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,041:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,047:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,050:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,053:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,058:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,059:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,066:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,067:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,078:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,103:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,107:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,116:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,122:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,155:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,159:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,239:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,243:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,248:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,262:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,264:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,270:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,275:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,515:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,517:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:38,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,522:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,528:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,530:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:38,543:INFO:Calculating mean and std
2024-03-03 19:48:38,544:INFO:Creating metrics dataframe
2024-03-03 19:48:38,546:INFO:Finalizing model
2024-03-03 19:48:38,587:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:38,630:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000229 seconds.
2024-03-03 19:48:38,630:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:38,630:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:38,630:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:38,630:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:38,630:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:38,630:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:38,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:38,700:INFO:Uploading results into container
2024-03-03 19:48:38,702:INFO:Uploading model into container now
2024-03-03 19:48:38,702:INFO:_master_model_container: 46
2024-03-03 19:48:38,702:INFO:_display_container: 9
2024-03-03 19:48:38,705:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.21875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:38,705:INFO:create_model() successfully completed......................................
2024-03-03 19:48:38,810:INFO:Threshold: 0.21875. Accuracy: 0.769
2024-03-03 19:48:38,812:INFO:Initializing create_model()
2024-03-03 19:48:38,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.09375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:38,812:INFO:Checking exceptions
2024-03-03 19:48:38,813:INFO:Importing libraries
2024-03-03 19:48:38,813:INFO:Copying training dataset
2024-03-03 19:48:38,819:INFO:Defining folds
2024-03-03 19:48:38,819:INFO:Declaring metric variables
2024-03-03 19:48:38,819:INFO:Importing untrained model
2024-03-03 19:48:38,819:INFO:Declaring custom model
2024-03-03 19:48:38,820:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:38,820:INFO:Starting cross validation
2024-03-03 19:48:38,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:39,689:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,693:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,703:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,712:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,717:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,724:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,741:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,744:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,824:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,828:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,833:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,837:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,838:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,843:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,905:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,908:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:39,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,920:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:39,921:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,135:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:40,138:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,143:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:40,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,151:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,156:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:40,168:INFO:Calculating mean and std
2024-03-03 19:48:40,169:INFO:Creating metrics dataframe
2024-03-03 19:48:40,171:INFO:Finalizing model
2024-03-03 19:48:40,214:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:40,214:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000296 seconds.
2024-03-03 19:48:40,215:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:40,215:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:40,215:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:40,215:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:40,215:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:40,215:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:40,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:40,303:INFO:Uploading results into container
2024-03-03 19:48:40,304:INFO:Uploading model into container now
2024-03-03 19:48:40,306:INFO:_master_model_container: 47
2024-03-03 19:48:40,306:INFO:_display_container: 9
2024-03-03 19:48:40,308:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.09375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:40,309:INFO:create_model() successfully completed......................................
2024-03-03 19:48:40,425:INFO:Threshold: 0.09375. Accuracy: 0.7517
2024-03-03 19:48:40,426:INFO:Initializing create_model()
2024-03-03 19:48:40,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:40,426:INFO:Checking exceptions
2024-03-03 19:48:40,428:INFO:Importing libraries
2024-03-03 19:48:40,428:INFO:Copying training dataset
2024-03-03 19:48:40,435:INFO:Defining folds
2024-03-03 19:48:40,435:INFO:Declaring metric variables
2024-03-03 19:48:40,435:INFO:Importing untrained model
2024-03-03 19:48:40,436:INFO:Declaring custom model
2024-03-03 19:48:40,437:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:40,437:INFO:Starting cross validation
2024-03-03 19:48:40,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:41,233:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,236:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,243:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,245:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,248:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,250:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,262:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,277:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,284:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,294:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,300:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,361:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,365:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,370:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,372:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,377:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,395:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,398:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,402:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,409:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,447:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,449:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,454:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,460:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,657:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,667:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:41,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,670:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:41,690:INFO:Calculating mean and std
2024-03-03 19:48:41,690:INFO:Creating metrics dataframe
2024-03-03 19:48:41,694:INFO:Finalizing model
2024-03-03 19:48:41,734:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:41,735:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000309 seconds.
2024-03-03 19:48:41,735:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:41,735:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:41,735:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:41,736:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:41,736:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:41,736:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:41,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:41,865:INFO:Uploading results into container
2024-03-03 19:48:41,866:INFO:Uploading model into container now
2024-03-03 19:48:41,866:INFO:_master_model_container: 48
2024-03-03 19:48:41,866:INFO:_display_container: 9
2024-03-03 19:48:41,869:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.3125,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:41,869:INFO:create_model() successfully completed......................................
2024-03-03 19:48:41,986:INFO:Threshold: 0.3125. Accuracy: 0.773
2024-03-03 19:48:41,987:INFO:Initializing create_model()
2024-03-03 19:48:41,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:41,987:INFO:Checking exceptions
2024-03-03 19:48:41,988:INFO:Importing libraries
2024-03-03 19:48:41,988:INFO:Copying training dataset
2024-03-03 19:48:41,996:INFO:Defining folds
2024-03-03 19:48:41,996:INFO:Declaring metric variables
2024-03-03 19:48:41,997:INFO:Importing untrained model
2024-03-03 19:48:41,997:INFO:Declaring custom model
2024-03-03 19:48:41,998:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:41,998:INFO:Starting cross validation
2024-03-03 19:48:41,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:43,052:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,053:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,055:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,056:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,060:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,062:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,066:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,067:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,070:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,075:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,080:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,086:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,172:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,177:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,188:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,192:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,257:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,270:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,290:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,294:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,496:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,498:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,504:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:43,508:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,509:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:43,531:INFO:Calculating mean and std
2024-03-03 19:48:43,531:INFO:Creating metrics dataframe
2024-03-03 19:48:43,534:INFO:Finalizing model
2024-03-03 19:48:43,574:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:43,575:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000316 seconds.
2024-03-03 19:48:43,575:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:43,575:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:43,575:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:43,575:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:43,576:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:43,576:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:43,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:43,705:INFO:Uploading results into container
2024-03-03 19:48:43,705:INFO:Uploading model into container now
2024-03-03 19:48:43,706:INFO:_master_model_container: 49
2024-03-03 19:48:43,706:INFO:_display_container: 9
2024-03-03 19:48:43,709:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.1875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:43,709:INFO:create_model() successfully completed......................................
2024-03-03 19:48:43,830:INFO:Threshold: 0.1875. Accuracy: 0.7677
2024-03-03 19:48:43,831:INFO:Initializing create_model()
2024-03-03 19:48:43,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.34375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:43,831:INFO:Checking exceptions
2024-03-03 19:48:43,832:INFO:Importing libraries
2024-03-03 19:48:43,832:INFO:Copying training dataset
2024-03-03 19:48:43,840:INFO:Defining folds
2024-03-03 19:48:43,841:INFO:Declaring metric variables
2024-03-03 19:48:43,841:INFO:Importing untrained model
2024-03-03 19:48:43,841:INFO:Declaring custom model
2024-03-03 19:48:43,843:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:43,843:INFO:Starting cross validation
2024-03-03 19:48:43,844:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:44,747:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,763:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,770:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,773:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,775:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,778:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,780:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,786:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,816:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,900:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,903:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:44,993:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:44,997:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,003:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,034:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:45,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,042:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:45,043:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,045:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,050:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,056:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,270:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:45,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,280:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:45,282:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,282:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:45,307:INFO:Calculating mean and std
2024-03-03 19:48:45,308:INFO:Creating metrics dataframe
2024-03-03 19:48:45,310:INFO:Finalizing model
2024-03-03 19:48:45,353:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:45,354:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000317 seconds.
2024-03-03 19:48:45,354:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:45,354:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:45,354:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:45,355:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:45,355:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:45,355:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:45,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:45,487:INFO:Uploading results into container
2024-03-03 19:48:45,488:INFO:Uploading model into container now
2024-03-03 19:48:45,488:INFO:_master_model_container: 50
2024-03-03 19:48:45,488:INFO:_display_container: 9
2024-03-03 19:48:45,491:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.34375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:45,491:INFO:create_model() successfully completed......................................
2024-03-03 19:48:45,609:INFO:Threshold: 0.34375. Accuracy: 0.7704
2024-03-03 19:48:45,610:INFO:Initializing create_model()
2024-03-03 19:48:45,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:45,610:INFO:Checking exceptions
2024-03-03 19:48:45,611:INFO:Importing libraries
2024-03-03 19:48:45,611:INFO:Copying training dataset
2024-03-03 19:48:45,618:INFO:Defining folds
2024-03-03 19:48:45,619:INFO:Declaring metric variables
2024-03-03 19:48:45,619:INFO:Importing untrained model
2024-03-03 19:48:45,619:INFO:Declaring custom model
2024-03-03 19:48:45,621:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:45,621:INFO:Starting cross validation
2024-03-03 19:48:45,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:46,456:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,459:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,466:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,466:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,470:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,475:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,480:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,484:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,497:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,500:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,512:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,577:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,579:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,580:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,592:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,594:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,671:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,679:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,694:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,697:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,701:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,706:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,898:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,899:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:46,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,911:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,912:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:46,922:INFO:Calculating mean and std
2024-03-03 19:48:46,923:INFO:Creating metrics dataframe
2024-03-03 19:48:46,926:INFO:Finalizing model
2024-03-03 19:48:46,967:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:46,968:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000314 seconds.
2024-03-03 19:48:46,968:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:46,968:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:46,968:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:46,968:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:46,969:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:46,969:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:46,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:46,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:47,067:INFO:Uploading results into container
2024-03-03 19:48:47,068:INFO:Uploading model into container now
2024-03-03 19:48:47,069:INFO:_master_model_container: 51
2024-03-03 19:48:47,069:INFO:_display_container: 9
2024-03-03 19:48:47,072:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.4375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:47,072:INFO:create_model() successfully completed......................................
2024-03-03 19:48:47,209:INFO:Threshold: 0.4375. Accuracy: 0.7636
2024-03-03 19:48:47,209:INFO:Initializing create_model()
2024-03-03 19:48:47,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.46875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:47,209:INFO:Checking exceptions
2024-03-03 19:48:47,212:INFO:Importing libraries
2024-03-03 19:48:47,212:INFO:Copying training dataset
2024-03-03 19:48:47,226:INFO:Defining folds
2024-03-03 19:48:47,226:INFO:Declaring metric variables
2024-03-03 19:48:47,226:INFO:Importing untrained model
2024-03-03 19:48:47,226:INFO:Declaring custom model
2024-03-03 19:48:47,228:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:47,228:INFO:Starting cross validation
2024-03-03 19:48:47,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:48,075:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,076:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,077:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,084:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,093:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,108:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,115:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,118:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,126:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,131:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,187:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,197:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,220:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,224:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,229:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,233:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,235:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,236:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,242:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,247:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,292:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,294:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,507:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,516:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,518:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:48,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,529:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:48,542:INFO:Calculating mean and std
2024-03-03 19:48:48,543:INFO:Creating metrics dataframe
2024-03-03 19:48:48,545:INFO:Finalizing model
2024-03-03 19:48:48,590:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:48,590:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000315 seconds.
2024-03-03 19:48:48,590:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:48,590:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:48,591:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:48,591:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:48,591:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:48,591:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:48,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:48,711:INFO:Uploading results into container
2024-03-03 19:48:48,712:INFO:Uploading model into container now
2024-03-03 19:48:48,712:INFO:_master_model_container: 52
2024-03-03 19:48:48,712:INFO:_display_container: 9
2024-03-03 19:48:48,716:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.46875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:48,716:INFO:create_model() successfully completed......................................
2024-03-03 19:48:48,835:INFO:Threshold: 0.46875. Accuracy: 0.761
2024-03-03 19:48:48,835:INFO:Initializing create_model()
2024-03-03 19:48:48,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:48,836:INFO:Checking exceptions
2024-03-03 19:48:48,837:INFO:Importing libraries
2024-03-03 19:48:48,837:INFO:Copying training dataset
2024-03-03 19:48:48,847:INFO:Defining folds
2024-03-03 19:48:48,847:INFO:Declaring metric variables
2024-03-03 19:48:48,847:INFO:Importing untrained model
2024-03-03 19:48:48,847:INFO:Declaring custom model
2024-03-03 19:48:48,848:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:48,848:INFO:Starting cross validation
2024-03-03 19:48:48,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:49,735:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,744:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,752:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,760:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,779:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,782:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,787:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,794:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,824:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,833:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,838:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,864:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,867:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,874:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,880:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,898:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,903:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,908:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,919:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,947:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:49,950:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:49,961:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,187:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:50,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,200:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:50,200:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:50,225:INFO:Calculating mean and std
2024-03-03 19:48:50,226:INFO:Creating metrics dataframe
2024-03-03 19:48:50,228:INFO:Finalizing model
2024-03-03 19:48:50,270:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:50,272:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000329 seconds.
2024-03-03 19:48:50,272:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:50,272:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:50,272:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:50,272:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:50,273:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:50,273:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:50,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:50,429:INFO:Uploading results into container
2024-03-03 19:48:50,430:INFO:Uploading model into container now
2024-03-03 19:48:50,430:INFO:_master_model_container: 53
2024-03-03 19:48:50,430:INFO:_display_container: 9
2024-03-03 19:48:50,434:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5625,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:50,434:INFO:create_model() successfully completed......................................
2024-03-03 19:48:50,570:INFO:Threshold: 0.5625. Accuracy: 0.7556
2024-03-03 19:48:50,570:INFO:Initializing create_model()
2024-03-03 19:48:50,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.59375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:50,570:INFO:Checking exceptions
2024-03-03 19:48:50,573:INFO:Importing libraries
2024-03-03 19:48:50,573:INFO:Copying training dataset
2024-03-03 19:48:50,584:INFO:Defining folds
2024-03-03 19:48:50,584:INFO:Declaring metric variables
2024-03-03 19:48:50,585:INFO:Importing untrained model
2024-03-03 19:48:50,585:INFO:Declaring custom model
2024-03-03 19:48:50,586:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:50,586:INFO:Starting cross validation
2024-03-03 19:48:50,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:51,493:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,496:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,502:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,508:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,509:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,516:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,522:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,530:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,534:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,540:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,662:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,671:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,672:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,682:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,687:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,745:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,748:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,750:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,753:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,759:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,760:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,765:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:51,765:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,768:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,774:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:51,780:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,049:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:52,050:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:52,051:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,053:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,058:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,059:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,063:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,064:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:52,074:INFO:Calculating mean and std
2024-03-03 19:48:52,075:INFO:Creating metrics dataframe
2024-03-03 19:48:52,077:INFO:Finalizing model
2024-03-03 19:48:52,118:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:52,119:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000313 seconds.
2024-03-03 19:48:52,119:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:52,119:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:52,120:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:52,120:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:52,120:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:52,120:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:52,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:52,226:INFO:Uploading results into container
2024-03-03 19:48:52,227:INFO:Uploading model into container now
2024-03-03 19:48:52,227:INFO:_master_model_container: 54
2024-03-03 19:48:52,227:INFO:_display_container: 9
2024-03-03 19:48:52,230:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.59375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:52,230:INFO:create_model() successfully completed......................................
2024-03-03 19:48:52,355:INFO:Threshold: 0.59375. Accuracy: 0.7556
2024-03-03 19:48:52,356:INFO:Initializing create_model()
2024-03-03 19:48:52,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:52,356:INFO:Checking exceptions
2024-03-03 19:48:52,359:INFO:Importing libraries
2024-03-03 19:48:52,359:INFO:Copying training dataset
2024-03-03 19:48:52,368:INFO:Defining folds
2024-03-03 19:48:52,368:INFO:Declaring metric variables
2024-03-03 19:48:52,368:INFO:Importing untrained model
2024-03-03 19:48:52,368:INFO:Declaring custom model
2024-03-03 19:48:52,369:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:52,369:INFO:Starting cross validation
2024-03-03 19:48:52,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:53,160:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,168:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,184:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,194:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,197:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,203:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,223:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,232:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,237:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,282:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,291:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,296:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,318:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,327:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,332:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,383:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,386:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,396:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,400:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,602:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,605:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,610:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,611:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:53,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,615:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,618:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,624:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:53,639:INFO:Calculating mean and std
2024-03-03 19:48:53,640:INFO:Creating metrics dataframe
2024-03-03 19:48:53,642:INFO:Finalizing model
2024-03-03 19:48:53,684:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:53,685:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000312 seconds.
2024-03-03 19:48:53,685:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:53,685:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:53,685:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:53,685:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:53,686:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:53,686:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:53,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:53,810:INFO:Uploading results into container
2024-03-03 19:48:53,810:INFO:Uploading model into container now
2024-03-03 19:48:53,811:INFO:_master_model_container: 55
2024-03-03 19:48:53,811:INFO:_display_container: 9
2024-03-03 19:48:53,813:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.6875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:53,813:INFO:create_model() successfully completed......................................
2024-03-03 19:48:53,939:INFO:Threshold: 0.6875. Accuracy: 0.753
2024-03-03 19:48:53,940:INFO:Initializing create_model()
2024-03-03 19:48:53,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.71875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:53,940:INFO:Checking exceptions
2024-03-03 19:48:53,943:INFO:Importing libraries
2024-03-03 19:48:53,943:INFO:Copying training dataset
2024-03-03 19:48:53,953:INFO:Defining folds
2024-03-03 19:48:53,953:INFO:Declaring metric variables
2024-03-03 19:48:53,953:INFO:Importing untrained model
2024-03-03 19:48:53,954:INFO:Declaring custom model
2024-03-03 19:48:53,954:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:53,955:INFO:Starting cross validation
2024-03-03 19:48:53,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:54,812:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,813:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,815:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,815:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,821:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,821:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,828:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,828:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,837:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,845:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,875:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,878:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,883:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,888:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,965:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,968:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,974:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,976:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,989:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:54,996:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:54,999:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,011:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,019:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,037:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:55,041:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,048:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,056:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,408:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:55,411:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,416:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,419:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:55,421:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,422:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,428:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,433:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:55,450:INFO:Calculating mean and std
2024-03-03 19:48:55,450:INFO:Creating metrics dataframe
2024-03-03 19:48:55,453:INFO:Finalizing model
2024-03-03 19:48:55,495:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:55,496:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000309 seconds.
2024-03-03 19:48:55,496:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:55,496:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:55,496:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:55,497:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:55,497:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:55,497:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:55,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,511:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,537:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:55,628:INFO:Uploading results into container
2024-03-03 19:48:55,629:INFO:Uploading model into container now
2024-03-03 19:48:55,629:INFO:_master_model_container: 56
2024-03-03 19:48:55,629:INFO:_display_container: 9
2024-03-03 19:48:55,633:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.71875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:55,633:INFO:create_model() successfully completed......................................
2024-03-03 19:48:55,762:INFO:Threshold: 0.71875. Accuracy: 0.749
2024-03-03 19:48:55,763:INFO:Initializing create_model()
2024-03-03 19:48:55,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:55,763:INFO:Checking exceptions
2024-03-03 19:48:55,766:INFO:Importing libraries
2024-03-03 19:48:55,766:INFO:Copying training dataset
2024-03-03 19:48:55,781:INFO:Defining folds
2024-03-03 19:48:55,781:INFO:Declaring metric variables
2024-03-03 19:48:55,781:INFO:Importing untrained model
2024-03-03 19:48:55,782:INFO:Declaring custom model
2024-03-03 19:48:55,782:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:55,783:INFO:Starting cross validation
2024-03-03 19:48:55,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:56,832:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:56,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,836:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:56,847:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,850:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,859:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,867:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,889:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:56,896:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,904:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:56,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,002:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,006:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,016:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,029:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,078:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,082:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,114:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,131:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,134:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,136:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,147:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,153:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,177:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,186:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,469:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,472:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,479:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,479:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:57,482:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,484:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,486:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:57,505:INFO:Calculating mean and std
2024-03-03 19:48:57,506:INFO:Creating metrics dataframe
2024-03-03 19:48:57,509:INFO:Finalizing model
2024-03-03 19:48:57,551:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:57,552:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000279 seconds.
2024-03-03 19:48:57,552:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:57,552:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:57,552:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:57,552:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:57,553:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:57,553:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:57,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:57,717:INFO:Uploading results into container
2024-03-03 19:48:57,718:INFO:Uploading model into container now
2024-03-03 19:48:57,719:INFO:_master_model_container: 57
2024-03-03 19:48:57,719:INFO:_display_container: 9
2024-03-03 19:48:57,722:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.8125,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:57,722:INFO:create_model() successfully completed......................................
2024-03-03 19:48:57,855:INFO:Threshold: 0.8125. Accuracy: 0.7529
2024-03-03 19:48:57,857:INFO:Initializing create_model()
2024-03-03 19:48:57,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:57,858:INFO:Checking exceptions
2024-03-03 19:48:57,860:INFO:Importing libraries
2024-03-03 19:48:57,862:INFO:Copying training dataset
2024-03-03 19:48:57,871:INFO:Defining folds
2024-03-03 19:48:57,872:INFO:Declaring metric variables
2024-03-03 19:48:57,872:INFO:Importing untrained model
2024-03-03 19:48:57,872:INFO:Declaring custom model
2024-03-03 19:48:57,874:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:57,875:INFO:Starting cross validation
2024-03-03 19:48:57,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:48:58,922:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:58,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,939:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,944:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,947:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:58,950:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,967:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,967:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:58,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,970:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:58,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:58,985:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,006:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,010:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,022:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,126:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,129:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,134:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,137:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,140:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,141:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,152:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,175:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,178:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,395:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,396:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:48:59,398:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,398:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,408:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,408:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:48:59,425:INFO:Calculating mean and std
2024-03-03 19:48:59,426:INFO:Creating metrics dataframe
2024-03-03 19:48:59,428:INFO:Finalizing model
2024-03-03 19:48:59,468:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:48:59,469:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000289 seconds.
2024-03-03 19:48:59,469:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:48:59,469:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:48:59,470:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:48:59,470:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:48:59,470:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:48:59,470:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:48:59,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,511:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:48:59,594:INFO:Uploading results into container
2024-03-03 19:48:59,595:INFO:Uploading model into container now
2024-03-03 19:48:59,596:INFO:_master_model_container: 58
2024-03-03 19:48:59,596:INFO:_display_container: 9
2024-03-03 19:48:59,599:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.84375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:48:59,599:INFO:create_model() successfully completed......................................
2024-03-03 19:48:59,719:INFO:Threshold: 0.84375. Accuracy: 0.753
2024-03-03 19:48:59,720:INFO:Initializing create_model()
2024-03-03 19:48:59,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:48:59,720:INFO:Checking exceptions
2024-03-03 19:48:59,722:INFO:Importing libraries
2024-03-03 19:48:59,722:INFO:Copying training dataset
2024-03-03 19:48:59,730:INFO:Defining folds
2024-03-03 19:48:59,731:INFO:Declaring metric variables
2024-03-03 19:48:59,731:INFO:Importing untrained model
2024-03-03 19:48:59,731:INFO:Declaring custom model
2024-03-03 19:48:59,732:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:48:59,732:INFO:Starting cross validation
2024-03-03 19:48:59,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:00,658:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,671:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,672:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,681:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,686:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,702:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,711:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,717:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,739:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,742:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,749:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,760:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,763:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,769:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,775:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,835:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,839:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,846:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,846:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,849:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,851:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,854:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,857:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:00,860:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,861:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:00,872:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,141:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:01,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,148:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:01,150:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,152:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,155:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,162:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:01,171:INFO:Calculating mean and std
2024-03-03 19:49:01,172:INFO:Creating metrics dataframe
2024-03-03 19:49:01,175:INFO:Finalizing model
2024-03-03 19:49:01,217:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:49:01,218:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000318 seconds.
2024-03-03 19:49:01,218:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:49:01,218:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:49:01,219:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:49:01,219:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:49:01,219:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:49:01,219:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:49:01,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:01,322:INFO:Uploading results into container
2024-03-03 19:49:01,323:INFO:Uploading model into container now
2024-03-03 19:49:01,323:INFO:_master_model_container: 59
2024-03-03 19:49:01,323:INFO:_display_container: 9
2024-03-03 19:49:01,326:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.9375,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:49:01,326:INFO:create_model() successfully completed......................................
2024-03-03 19:49:01,444:INFO:Threshold: 0.9375. Accuracy: 0.741
2024-03-03 19:49:01,444:INFO:Initializing create_model()
2024-03-03 19:49:01,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:49:01,444:INFO:Checking exceptions
2024-03-03 19:49:01,446:INFO:Importing libraries
2024-03-03 19:49:01,446:INFO:Copying training dataset
2024-03-03 19:49:01,452:INFO:Defining folds
2024-03-03 19:49:01,453:INFO:Declaring metric variables
2024-03-03 19:49:01,453:INFO:Importing untrained model
2024-03-03 19:49:01,453:INFO:Declaring custom model
2024-03-03 19:49:01,454:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:49:01,454:INFO:Starting cross validation
2024-03-03 19:49:01,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:02,354:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,357:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,358:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,362:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,363:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,368:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,369:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,374:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,387:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,436:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,445:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,451:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,475:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,479:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,485:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,490:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,569:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,574:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,585:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,626:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,627:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,628:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,633:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,634:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,636:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,645:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,867:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,869:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,877:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,907:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:02,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,919:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:02,928:INFO:Calculating mean and std
2024-03-03 19:49:02,928:INFO:Creating metrics dataframe
2024-03-03 19:49:02,930:INFO:Finalizing model
2024-03-03 19:49:02,971:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:49:02,972:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000361 seconds.
2024-03-03 19:49:02,973:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:49:02,973:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:49:02,973:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:49:02,974:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:49:02,974:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:49:02,974:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:49:02,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:02,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:03,212:INFO:Uploading results into container
2024-03-03 19:49:03,213:INFO:Uploading model into container now
2024-03-03 19:49:03,214:INFO:_master_model_container: 60
2024-03-03 19:49:03,214:INFO:_display_container: 9
2024-03-03 19:49:03,216:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0625,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:49:03,217:INFO:create_model() successfully completed......................................
2024-03-03 19:49:03,348:INFO:Threshold: 0.0625. Accuracy: 0.721
2024-03-03 19:49:03,349:INFO:Initializing create_model()
2024-03-03 19:49:03,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.96875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:49:03,349:INFO:Checking exceptions
2024-03-03 19:49:03,351:INFO:Importing libraries
2024-03-03 19:49:03,351:INFO:Copying training dataset
2024-03-03 19:49:03,358:INFO:Defining folds
2024-03-03 19:49:03,358:INFO:Declaring metric variables
2024-03-03 19:49:03,358:INFO:Importing untrained model
2024-03-03 19:49:03,358:INFO:Declaring custom model
2024-03-03 19:49:03,359:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:49:03,359:INFO:Starting cross validation
2024-03-03 19:49:03,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:04,203:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,205:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,214:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,219:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,225:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,228:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,234:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,241:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,264:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,267:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,280:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,323:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,326:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,332:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,338:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,348:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,351:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,357:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,363:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,363:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,365:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,370:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,419:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,422:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,427:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,433:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,631:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,633:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,639:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,652:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:04,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:04,673:INFO:Calculating mean and std
2024-03-03 19:49:04,674:INFO:Creating metrics dataframe
2024-03-03 19:49:04,676:INFO:Finalizing model
2024-03-03 19:49:04,723:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:49:04,725:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000366 seconds.
2024-03-03 19:49:04,725:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:49:04,725:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:49:04,725:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:49:04,725:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:49:04,725:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:49:04,726:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:49:04,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:04,826:INFO:Uploading results into container
2024-03-03 19:49:04,827:INFO:Uploading model into container now
2024-03-03 19:49:04,828:INFO:_master_model_container: 61
2024-03-03 19:49:04,828:INFO:_display_container: 9
2024-03-03 19:49:04,830:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.96875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:49:04,830:INFO:create_model() successfully completed......................................
2024-03-03 19:49:04,948:INFO:Threshold: 0.96875. Accuracy: 0.7063
2024-03-03 19:49:04,950:INFO:Initializing create_model()
2024-03-03 19:49:04,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.21875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:49:04,950:INFO:Checking exceptions
2024-03-03 19:49:04,951:INFO:Importing libraries
2024-03-03 19:49:04,951:INFO:Copying training dataset
2024-03-03 19:49:04,961:INFO:Defining folds
2024-03-03 19:49:04,961:INFO:Declaring metric variables
2024-03-03 19:49:04,961:INFO:Importing untrained model
2024-03-03 19:49:04,961:INFO:Declaring custom model
2024-03-03 19:49:04,963:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:49:04,964:INFO:Starting cross validation
2024-03-03 19:49:04,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:05,967:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:05,970:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,976:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:05,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,984:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,984:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:05,987:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,990:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:05,994:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,001:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,024:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,027:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,034:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,041:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,076:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,087:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,091:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,112:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,114:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,120:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,125:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,188:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,191:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,198:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,204:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,463:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,470:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,476:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,482:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:06,484:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,489:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,494:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:06,510:INFO:Calculating mean and std
2024-03-03 19:49:06,511:INFO:Creating metrics dataframe
2024-03-03 19:49:06,513:INFO:Finalizing model
2024-03-03 19:49:06,554:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:49:06,554:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000300 seconds.
2024-03-03 19:49:06,555:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:49:06,555:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:49:06,555:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:49:06,555:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:49:06,555:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:49:06,555:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:49:06,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:06,645:INFO:Uploading results into container
2024-03-03 19:49:06,646:INFO:Uploading model into container now
2024-03-03 19:49:06,646:INFO:_master_model_container: 62
2024-03-03 19:49:06,647:INFO:_display_container: 9
2024-03-03 19:49:06,649:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.21875,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:49:06,649:INFO:create_model() successfully completed......................................
2024-03-03 19:49:06,763:INFO:Threshold: 0.21875. Accuracy: 0.769
2024-03-03 19:49:06,764:INFO:Initializing create_model()
2024-03-03 19:49:06,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2187500149011612, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:49:06,764:INFO:Checking exceptions
2024-03-03 19:49:06,766:INFO:Importing libraries
2024-03-03 19:49:06,766:INFO:Copying training dataset
2024-03-03 19:49:06,773:INFO:Defining folds
2024-03-03 19:49:06,773:INFO:Declaring metric variables
2024-03-03 19:49:06,774:INFO:Importing untrained model
2024-03-03 19:49:06,774:INFO:Declaring custom model
2024-03-03 19:49:06,775:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:49:06,775:INFO:Starting cross validation
2024-03-03 19:49:06,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:07,643:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,647:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,651:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,654:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,657:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,663:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,724:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,739:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,746:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,748:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,843:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,846:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,851:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,859:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,884:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,889:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,899:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:07,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,908:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:07,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,165:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:08,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,171:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:08,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,178:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:08,196:INFO:Calculating mean and std
2024-03-03 19:49:08,197:INFO:Creating metrics dataframe
2024-03-03 19:49:08,200:INFO:Finalizing model
2024-03-03 19:49:08,244:INFO:[LightGBM] [Info] Number of positive: 292, number of negative: 457
2024-03-03 19:49:08,245:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000286 seconds.
2024-03-03 19:49:08,245:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-03 19:49:08,245:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-03 19:49:08,245:INFO:[LightGBM] [Info] Total Bins 722
2024-03-03 19:49:08,245:INFO:[LightGBM] [Info] Number of data points in the train set: 749, number of used features: 18
2024-03-03 19:49:08,246:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.389853 -> initscore=-0.447930
2024-03-03 19:49:08,246:INFO:[LightGBM] [Info] Start training from score -0.447930
2024-03-03 19:49:08,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-03 19:49:08,372:INFO:Uploading results into container
2024-03-03 19:49:08,373:INFO:Uploading model into container now
2024-03-03 19:49:08,373:INFO:_master_model_container: 63
2024-03-03 19:49:08,373:INFO:_display_container: 9
2024-03-03 19:49:08,376:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=5...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.2187500149011612,
                                     random_state=5243, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-03-03 19:49:08,376:INFO:create_model() successfully completed......................................
2024-03-03 19:49:08,493:INFO:Threshold: 0.2187500149011612. Accuracy: 0.769
2024-03-03 19:49:08,876:INFO:Initializing create_model()
2024-03-03 19:49:08,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-03 19:49:08,876:INFO:Checking exceptions
2024-03-03 19:49:08,879:INFO:Importing libraries
2024-03-03 19:49:08,879:INFO:Copying training dataset
2024-03-03 19:49:08,886:INFO:Defining folds
2024-03-03 19:49:08,886:INFO:Declaring metric variables
2024-03-03 19:49:08,887:INFO:Importing untrained model
2024-03-03 19:49:08,887:INFO:Declaring custom model
2024-03-03 19:49:08,889:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-03 19:49:08,889:INFO:Starting cross validation
2024-03-03 19:49:08,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-03 19:49:09,677:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,686:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,689:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,693:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,694:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,698:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,704:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,716:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,751:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,756:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,768:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,809:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,818:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,824:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,892:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,894:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,903:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,942:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:09,945:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,951:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:09,957:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:10,311:WARNING:d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\dev\venv\Lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-03 19:49:10,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:10,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:10,325:WARNING:d:\dev\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'MM') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-03 19:49:40,436:INFO:Initializing plot_model()
2024-03-03 19:49:40,437:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=VotingClassifier(estimators=[('Light Gradient Boosting Machine',
                              LGBMClassifier(boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0,
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=5243, reg_alpha=0.0,
                                             reg_lamb...
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=5243,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=5243, solver='auto',
                                              tol=0.0001))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 19:49:40,437:INFO:Checking exceptions
2024-03-03 19:49:40,445:INFO:Preloading libraries
2024-03-03 19:49:40,456:INFO:Copying training dataset
2024-03-03 19:49:40,456:INFO:Plot type: confusion_matrix
2024-03-03 19:49:40,707:INFO:Fitting Model
2024-03-03 19:49:40,708:INFO:Scoring test/hold-out set
2024-03-03 19:49:41,320:INFO:Visual Rendered Successfully
2024-03-03 19:49:41,464:INFO:plot_model() successfully completed......................................
2024-03-03 19:50:45,826:INFO:Initializing evaluate_model()
2024-03-03 19:50:45,827:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-03 19:50:46,283:INFO:Initializing plot_model()
2024-03-03 19:50:46,283:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 19:50:46,283:INFO:Checking exceptions
2024-03-03 19:50:46,289:INFO:Preloading libraries
2024-03-03 19:50:46,290:INFO:Copying training dataset
2024-03-03 19:50:46,290:INFO:Plot type: pipeline
2024-03-03 19:50:46,640:INFO:Visual Rendered Successfully
2024-03-03 19:50:46,792:INFO:plot_model() successfully completed......................................
2024-03-03 19:50:53,053:INFO:Initializing plot_model()
2024-03-03 19:50:53,053:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 19:50:53,053:INFO:Checking exceptions
2024-03-03 19:50:53,058:INFO:Preloading libraries
2024-03-03 19:50:53,058:INFO:Copying training dataset
2024-03-03 19:50:53,058:INFO:Plot type: auc
2024-03-03 19:50:53,217:INFO:Fitting Model
2024-03-03 19:50:53,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
2024-03-03 19:50:53,218:WARNING:  warnings.warn(
2024-03-03 19:50:53,218:INFO:Scoring test/hold-out set
2024-03-03 19:50:53,421:INFO:Visual Rendered Successfully
2024-03-03 19:50:53,569:INFO:plot_model() successfully completed......................................
2024-03-03 19:50:54,655:INFO:Initializing plot_model()
2024-03-03 19:50:54,655:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DDEBE30ED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 19:50:54,656:INFO:Checking exceptions
2024-03-03 19:50:54,660:INFO:Preloading libraries
2024-03-03 19:50:54,660:INFO:Copying training dataset
2024-03-03 19:50:54,661:INFO:Plot type: vc
2024-03-03 19:50:54,661:INFO:Determining param_name
2024-03-03 19:50:54,662:INFO:param_name: l1_ratio
2024-03-03 19:50:54,998:INFO:Fitting Model
2024-03-03 19:50:55,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:55,013:WARNING:  warnings.warn(
2024-03-03 19:50:55,335:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:55,335:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:55,335:WARNING:
2024-03-03 19:50:55,335:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:55,335:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:55,335:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:55,335:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:55,335:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:55,341:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:55,341:WARNING:  warnings.warn(
2024-03-03 19:50:55,651:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:55,653:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:55,653:WARNING:
2024-03-03 19:50:55,653:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:55,653:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:55,653:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:55,653:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:55,653:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:55,656:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:55,657:WARNING:  warnings.warn(
2024-03-03 19:50:55,972:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:55,972:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:55,972:WARNING:
2024-03-03 19:50:55,972:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:55,972:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:55,972:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:55,972:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:55,972:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:55,976:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:55,976:WARNING:  warnings.warn(
2024-03-03 19:50:56,283:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:56,334:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:56,334:WARNING:
2024-03-03 19:50:56,334:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:56,335:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:56,335:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:56,335:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:56,335:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:56,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:56,352:WARNING:  warnings.warn(
2024-03-03 19:50:56,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:56,648:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:56,648:WARNING:
2024-03-03 19:50:56,648:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:56,648:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:56,648:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:56,648:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:56,648:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:56,652:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:56,652:WARNING:  warnings.warn(
2024-03-03 19:50:56,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:56,973:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:56,973:WARNING:
2024-03-03 19:50:56,973:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:56,973:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:56,973:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:56,973:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:56,973:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:56,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:56,977:WARNING:  warnings.warn(
2024-03-03 19:50:57,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:57,281:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:57,281:WARNING:
2024-03-03 19:50:57,281:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:57,281:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:57,281:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:57,281:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:57,281:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:57,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:57,285:WARNING:  warnings.warn(
2024-03-03 19:50:57,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:57,577:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:57,577:WARNING:
2024-03-03 19:50:57,577:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:57,577:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:57,577:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:57,577:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:57,577:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:57,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:57,581:WARNING:  warnings.warn(
2024-03-03 19:50:57,929:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:57,930:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:57,930:WARNING:
2024-03-03 19:50:57,930:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:57,930:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:57,930:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:57,930:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:57,930:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:57,934:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:57,934:WARNING:  warnings.warn(
2024-03-03 19:50:58,233:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:58,233:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:58,233:WARNING:
2024-03-03 19:50:58,233:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:58,233:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:58,233:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:58,233:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:58,233:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:58,237:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:58,237:WARNING:  warnings.warn(
2024-03-03 19:50:58,616:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:58,616:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:58,616:WARNING:
2024-03-03 19:50:58,616:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:58,616:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:58,616:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:58,616:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:58,616:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:58,620:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:58,620:WARNING:  warnings.warn(
2024-03-03 19:50:58,958:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:58,958:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:58,958:WARNING:
2024-03-03 19:50:58,959:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:58,959:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:58,959:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:58,959:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:58,959:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:58,963:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:58,963:WARNING:  warnings.warn(
2024-03-03 19:50:59,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:59,311:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:59,311:WARNING:
2024-03-03 19:50:59,311:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:59,311:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:59,311:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:59,311:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:59,311:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:59,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:59,315:WARNING:  warnings.warn(
2024-03-03 19:50:59,613:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:59,613:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:59,613:WARNING:
2024-03-03 19:50:59,613:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:59,613:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:59,613:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:59,613:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:59,613:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:59,618:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:59,618:WARNING:  warnings.warn(
2024-03-03 19:50:59,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:50:59,907:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:50:59,907:WARNING:
2024-03-03 19:50:59,907:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:50:59,907:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:50:59,907:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:50:59,907:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:50:59,907:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:50:59,912:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:50:59,912:WARNING:  warnings.warn(
2024-03-03 19:51:00,213:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:00,213:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:00,213:WARNING:
2024-03-03 19:51:00,213:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:00,213:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:00,213:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:00,213:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:00,213:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:00,217:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:00,217:WARNING:  warnings.warn(
2024-03-03 19:51:00,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:00,520:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:00,520:WARNING:
2024-03-03 19:51:00,520:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:00,520:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:00,520:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:00,520:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:00,520:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:00,524:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:00,524:WARNING:  warnings.warn(
2024-03-03 19:51:00,837:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:00,837:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:00,837:WARNING:
2024-03-03 19:51:00,837:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:00,837:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:00,837:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:00,837:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:00,837:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:00,842:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:00,842:WARNING:  warnings.warn(
2024-03-03 19:51:01,160:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:01,160:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:01,161:WARNING:
2024-03-03 19:51:01,161:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:01,161:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:01,161:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:01,161:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:01,161:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:01,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:01,165:WARNING:  warnings.warn(
2024-03-03 19:51:01,521:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:01,521:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:01,521:WARNING:
2024-03-03 19:51:01,521:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:01,521:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:01,521:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:01,521:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:01,521:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:01,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:01,525:WARNING:  warnings.warn(
2024-03-03 19:51:01,843:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:01,843:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:01,843:WARNING:
2024-03-03 19:51:01,843:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:01,843:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:01,843:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:01,843:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:01,843:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:01,847:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:01,847:WARNING:  warnings.warn(
2024-03-03 19:51:02,159:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:02,159:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:02,159:WARNING:
2024-03-03 19:51:02,159:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:02,159:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:02,159:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:02,159:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:02,160:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:02,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:02,163:WARNING:  warnings.warn(
2024-03-03 19:51:02,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:02,461:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:02,461:WARNING:
2024-03-03 19:51:02,461:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:02,461:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:02,461:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:02,461:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:02,461:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:02,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:02,465:WARNING:  warnings.warn(
2024-03-03 19:51:02,775:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:02,775:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:02,775:WARNING:
2024-03-03 19:51:02,775:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:02,775:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:02,775:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:02,775:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:02,775:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:02,779:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:02,779:WARNING:  warnings.warn(
2024-03-03 19:51:03,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:03,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:03,084:WARNING:
2024-03-03 19:51:03,084:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:03,084:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:03,084:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:03,084:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:03,084:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:03,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:03,153:WARNING:  warnings.warn(
2024-03-03 19:51:03,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:03,518:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:03,518:WARNING:
2024-03-03 19:51:03,518:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:03,518:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:03,518:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:03,518:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:03,518:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:03,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:03,523:WARNING:  warnings.warn(
2024-03-03 19:51:03,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:03,830:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:03,830:WARNING:
2024-03-03 19:51:03,830:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:03,830:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:03,830:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:03,830:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:03,830:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:03,834:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:03,835:WARNING:  warnings.warn(
2024-03-03 19:51:04,140:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:04,142:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:04,142:WARNING:
2024-03-03 19:51:04,142:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:04,142:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:04,142:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:04,142:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:04,142:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:04,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:04,146:WARNING:  warnings.warn(
2024-03-03 19:51:04,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:04,461:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:04,461:WARNING:
2024-03-03 19:51:04,461:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:04,461:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:04,461:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:04,461:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:04,461:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:04,466:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:04,467:WARNING:  warnings.warn(
2024-03-03 19:51:04,903:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:04,903:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:04,903:WARNING:
2024-03-03 19:51:04,903:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:04,903:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:04,903:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:04,903:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:04,903:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:04,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:04,909:WARNING:  warnings.warn(
2024-03-03 19:51:05,236:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:05,236:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:05,237:WARNING:
2024-03-03 19:51:05,237:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:05,237:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:05,237:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:05,237:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:05,237:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:05,241:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:05,241:WARNING:  warnings.warn(
2024-03-03 19:51:05,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:05,570:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:05,570:WARNING:
2024-03-03 19:51:05,570:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:05,570:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:05,570:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:05,571:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:05,571:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:05,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:05,576:WARNING:  warnings.warn(
2024-03-03 19:51:05,896:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:05,896:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:05,896:WARNING:
2024-03-03 19:51:05,896:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:05,896:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:05,896:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:05,896:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:05,896:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:05,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:05,900:WARNING:  warnings.warn(
2024-03-03 19:51:06,219:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:06,221:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:06,221:WARNING:
2024-03-03 19:51:06,221:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:06,221:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:06,221:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:06,221:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:06,221:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:06,225:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:06,225:WARNING:  warnings.warn(
2024-03-03 19:51:06,670:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:06,670:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:06,670:WARNING:
2024-03-03 19:51:06,671:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:06,671:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:06,671:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:06,671:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:06,671:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:06,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:06,676:WARNING:  warnings.warn(
2024-03-03 19:51:06,993:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:06,993:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:06,993:WARNING:
2024-03-03 19:51:06,993:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:06,993:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:06,993:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:06,993:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:06,993:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:06,997:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:06,997:WARNING:  warnings.warn(
2024-03-03 19:51:07,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:07,287:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:07,287:WARNING:
2024-03-03 19:51:07,287:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:07,287:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:07,287:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:07,287:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:07,287:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:07,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:07,292:WARNING:  warnings.warn(
2024-03-03 19:51:07,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:07,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:07,583:WARNING:
2024-03-03 19:51:07,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:07,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:07,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:07,584:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:07,584:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:07,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:07,587:WARNING:  warnings.warn(
2024-03-03 19:51:07,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:07,893:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:07,893:WARNING:
2024-03-03 19:51:07,893:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:07,893:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:07,893:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:07,893:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:07,893:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:07,898:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:07,898:WARNING:  warnings.warn(
2024-03-03 19:51:08,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:08,202:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:08,202:WARNING:
2024-03-03 19:51:08,202:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:08,202:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:08,202:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:08,202:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:08,202:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:08,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:08,206:WARNING:  warnings.warn(
2024-03-03 19:51:08,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:08,505:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:08,505:WARNING:
2024-03-03 19:51:08,505:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:08,505:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:08,505:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:08,505:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:08,505:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:08,509:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:08,509:WARNING:  warnings.warn(
2024-03-03 19:51:08,803:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:08,805:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:08,805:WARNING:
2024-03-03 19:51:08,805:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:08,805:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:08,805:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:08,805:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:08,805:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:08,809:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:08,809:WARNING:  warnings.warn(
2024-03-03 19:51:09,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:09,098:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:09,098:WARNING:
2024-03-03 19:51:09,098:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:09,098:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:09,098:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:09,098:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:09,098:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:09,102:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:09,102:WARNING:  warnings.warn(
2024-03-03 19:51:09,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:09,386:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:09,386:WARNING:
2024-03-03 19:51:09,386:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:09,386:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:09,386:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:09,386:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:09,386:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:09,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:09,391:WARNING:  warnings.warn(
2024-03-03 19:51:09,679:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:09,680:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:09,680:WARNING:
2024-03-03 19:51:09,680:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:09,680:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:09,680:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:09,680:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:09,680:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:09,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:09,683:WARNING:  warnings.warn(
2024-03-03 19:51:09,993:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:09,993:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:09,994:WARNING:
2024-03-03 19:51:09,994:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:09,994:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:09,994:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:09,994:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:09,994:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:09,997:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:09,997:WARNING:  warnings.warn(
2024-03-03 19:51:10,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:10,285:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:10,285:WARNING:
2024-03-03 19:51:10,285:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:10,285:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:10,285:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:10,285:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:10,285:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:10,289:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:10,289:WARNING:  warnings.warn(
2024-03-03 19:51:10,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:10,581:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:10,582:WARNING:
2024-03-03 19:51:10,582:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:10,582:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:10,582:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:10,582:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:10,582:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:10,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:10,586:WARNING:  warnings.warn(
2024-03-03 19:51:10,871:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:10,871:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:10,871:WARNING:
2024-03-03 19:51:10,871:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:10,871:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:10,871:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:10,871:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:10,871:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:10,875:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:10,875:WARNING:  warnings.warn(
2024-03-03 19:51:11,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:11,170:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:11,170:WARNING:
2024-03-03 19:51:11,170:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:11,170:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:11,170:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:11,170:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:11,170:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:11,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:11,174:WARNING:  warnings.warn(
2024-03-03 19:51:11,464:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:11,464:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:11,464:WARNING:
2024-03-03 19:51:11,464:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:11,464:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:11,464:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:11,464:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:11,464:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:11,468:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:11,468:WARNING:  warnings.warn(
2024-03-03 19:51:11,784:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:11,785:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:11,785:WARNING:
2024-03-03 19:51:11,785:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:11,785:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:11,785:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:11,785:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:11,785:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:11,788:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:11,788:WARNING:  warnings.warn(
2024-03-03 19:51:12,193:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:12,193:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:12,193:WARNING:
2024-03-03 19:51:12,193:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:12,195:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:12,195:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:12,195:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:12,195:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:12,198:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:12,198:WARNING:  warnings.warn(
2024-03-03 19:51:12,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:12,581:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:12,581:WARNING:
2024-03-03 19:51:12,582:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:12,582:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:12,582:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:12,582:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:12,582:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:12,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:12,586:WARNING:  warnings.warn(
2024-03-03 19:51:12,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:12,980:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:12,980:WARNING:
2024-03-03 19:51:12,980:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:12,980:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:12,980:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:12,980:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:12,980:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:12,985:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:12,985:WARNING:  warnings.warn(
2024-03-03 19:51:13,369:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:13,369:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:13,369:WARNING:
2024-03-03 19:51:13,369:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:13,369:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:13,369:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:13,369:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:13,370:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:13,374:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:13,374:WARNING:  warnings.warn(
2024-03-03 19:51:13,759:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:13,759:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:13,759:WARNING:
2024-03-03 19:51:13,759:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:13,759:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:13,761:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:13,761:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:13,761:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:13,764:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:13,764:WARNING:  warnings.warn(
2024-03-03 19:51:14,166:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:14,166:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:14,166:WARNING:
2024-03-03 19:51:14,167:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:14,167:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:14,167:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:14,167:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:14,167:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:14,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:14,172:WARNING:  warnings.warn(
2024-03-03 19:51:14,561:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:14,561:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:14,561:WARNING:
2024-03-03 19:51:14,561:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:14,561:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:14,561:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:14,561:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:14,561:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:14,565:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:14,565:WARNING:  warnings.warn(
2024-03-03 19:51:14,943:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:14,943:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:14,943:WARNING:
2024-03-03 19:51:14,943:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:14,943:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:14,943:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:14,943:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:14,943:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:14,948:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:14,948:WARNING:  warnings.warn(
2024-03-03 19:51:15,327:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:15,327:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:15,327:WARNING:
2024-03-03 19:51:15,327:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:15,327:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:15,327:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:15,327:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:15,327:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:15,332:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:15,332:WARNING:  warnings.warn(
2024-03-03 19:51:15,699:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:15,699:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:15,699:WARNING:
2024-03-03 19:51:15,699:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:15,699:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:15,699:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:15,699:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:15,699:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:15,703:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:15,703:WARNING:  warnings.warn(
2024-03-03 19:51:16,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:16,088:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:16,088:WARNING:
2024-03-03 19:51:16,088:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:16,088:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:16,088:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:16,088:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:16,088:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:16,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:16,093:WARNING:  warnings.warn(
2024-03-03 19:51:16,477:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:16,478:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:16,478:WARNING:
2024-03-03 19:51:16,478:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:16,478:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:16,478:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:16,478:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:16,478:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:16,482:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:16,482:WARNING:  warnings.warn(
2024-03-03 19:51:16,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:16,866:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:16,866:WARNING:
2024-03-03 19:51:16,866:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:16,866:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:16,866:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:16,866:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:16,866:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:16,870:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:16,870:WARNING:  warnings.warn(
2024-03-03 19:51:17,268:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:17,268:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:17,268:WARNING:
2024-03-03 19:51:17,268:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:17,269:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:17,269:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:17,269:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:17,269:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:17,273:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:17,273:WARNING:  warnings.warn(
2024-03-03 19:51:17,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:17,661:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:17,661:WARNING:
2024-03-03 19:51:17,661:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:17,661:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:17,661:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:17,661:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:17,661:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:17,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:17,665:WARNING:  warnings.warn(
2024-03-03 19:51:18,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:18,049:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:18,049:WARNING:
2024-03-03 19:51:18,050:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:18,050:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:18,050:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:18,050:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:18,050:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:18,054:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:18,055:WARNING:  warnings.warn(
2024-03-03 19:51:18,488:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:18,488:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:18,488:WARNING:
2024-03-03 19:51:18,488:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:18,488:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:18,488:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:18,488:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:18,488:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:18,494:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:18,494:WARNING:  warnings.warn(
2024-03-03 19:51:18,889:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:18,889:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:18,889:WARNING:
2024-03-03 19:51:18,889:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:18,889:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:18,889:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:18,889:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:18,889:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:18,894:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:18,894:WARNING:  warnings.warn(
2024-03-03 19:51:19,430:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:19,432:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:19,432:WARNING:
2024-03-03 19:51:19,432:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:19,432:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:19,432:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:19,432:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:19,432:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:19,436:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:19,436:WARNING:  warnings.warn(
2024-03-03 19:51:19,883:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:19,884:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:19,884:WARNING:
2024-03-03 19:51:19,884:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:19,884:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:19,884:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:19,884:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:19,884:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:19,888:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:19,888:WARNING:  warnings.warn(
2024-03-03 19:51:20,263:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:20,263:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:20,264:WARNING:
2024-03-03 19:51:20,264:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:20,264:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:20,264:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:20,264:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:20,264:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:20,268:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:20,268:WARNING:  warnings.warn(
2024-03-03 19:51:20,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:20,685:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:20,686:WARNING:
2024-03-03 19:51:20,686:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:20,686:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:20,686:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:20,686:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:20,686:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:20,690:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:20,690:WARNING:  warnings.warn(
2024-03-03 19:51:21,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:21,093:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:21,093:WARNING:
2024-03-03 19:51:21,093:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:21,093:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:21,093:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:21,093:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:21,093:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:21,099:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:21,099:WARNING:  warnings.warn(
2024-03-03 19:51:21,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:21,531:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:21,531:WARNING:
2024-03-03 19:51:21,531:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:21,531:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:21,531:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:21,531:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:21,531:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:21,535:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:21,535:WARNING:  warnings.warn(
2024-03-03 19:51:22,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:22,075:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:22,075:WARNING:
2024-03-03 19:51:22,075:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:22,075:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:22,075:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:22,075:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:22,075:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:22,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:22,079:WARNING:  warnings.warn(
2024-03-03 19:51:22,502:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:22,502:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:22,502:WARNING:
2024-03-03 19:51:22,502:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:22,502:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:22,502:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:22,504:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:22,504:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:22,508:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:22,508:WARNING:  warnings.warn(
2024-03-03 19:51:22,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:22,913:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:22,913:WARNING:
2024-03-03 19:51:22,914:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:22,914:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:22,914:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:22,914:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:22,914:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:22,917:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:22,917:WARNING:  warnings.warn(
2024-03-03 19:51:23,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:23,319:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:23,319:WARNING:
2024-03-03 19:51:23,319:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:23,319:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:23,319:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:23,319:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:23,320:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:23,323:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:23,323:WARNING:  warnings.warn(
2024-03-03 19:51:23,712:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:23,712:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:23,712:WARNING:
2024-03-03 19:51:23,712:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:23,712:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:23,712:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:23,713:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:23,713:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:23,716:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:23,716:WARNING:  warnings.warn(
2024-03-03 19:51:24,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:24,069:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:24,069:WARNING:
2024-03-03 19:51:24,069:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:24,069:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:24,069:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:24,069:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:24,069:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:24,073:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:24,073:WARNING:  warnings.warn(
2024-03-03 19:51:24,433:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:24,433:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:24,433:WARNING:
2024-03-03 19:51:24,433:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:24,433:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:24,433:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:24,433:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:24,433:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:24,437:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:24,437:WARNING:  warnings.warn(
2024-03-03 19:51:24,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:24,823:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:24,823:WARNING:
2024-03-03 19:51:24,823:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:24,823:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:24,824:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:24,824:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:24,824:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:24,828:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:24,828:WARNING:  warnings.warn(
2024-03-03 19:51:25,307:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:25,307:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:25,308:WARNING:
2024-03-03 19:51:25,308:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:25,308:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:25,308:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:25,308:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:25,308:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:25,314:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:25,314:WARNING:  warnings.warn(
2024-03-03 19:51:25,742:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:25,742:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:25,742:WARNING:
2024-03-03 19:51:25,742:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:25,742:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:25,742:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:25,742:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:25,742:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:25,746:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:25,746:WARNING:  warnings.warn(
2024-03-03 19:51:26,232:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:26,233:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:26,233:WARNING:
2024-03-03 19:51:26,233:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:26,233:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:26,233:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:26,233:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:26,233:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:26,239:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:26,239:WARNING:  warnings.warn(
2024-03-03 19:51:26,737:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:26,737:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:26,737:WARNING:
2024-03-03 19:51:26,737:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:26,737:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:26,737:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:26,737:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:26,737:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:26,742:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:26,742:WARNING:  warnings.warn(
2024-03-03 19:51:27,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:27,170:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:27,170:WARNING:
2024-03-03 19:51:27,170:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:27,170:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:27,170:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:27,170:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:27,170:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:27,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:27,175:WARNING:  warnings.warn(
2024-03-03 19:51:27,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:27,570:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:27,570:WARNING:
2024-03-03 19:51:27,570:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:27,570:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:27,570:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:27,571:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:27,571:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:27,575:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:27,575:WARNING:  warnings.warn(
2024-03-03 19:51:27,970:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:27,970:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:27,970:WARNING:
2024-03-03 19:51:27,970:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:27,970:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:27,970:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:27,970:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:27,970:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:27,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:27,974:WARNING:  warnings.warn(
2024-03-03 19:51:28,379:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:28,380:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:28,380:WARNING:
2024-03-03 19:51:28,380:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:28,380:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:28,380:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:28,380:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:28,380:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:28,383:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:28,383:WARNING:  warnings.warn(
2024-03-03 19:51:28,794:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:28,794:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:28,794:WARNING:
2024-03-03 19:51:28,794:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:28,794:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:28,794:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:28,794:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:28,794:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:28,798:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:28,798:WARNING:  warnings.warn(
2024-03-03 19:51:29,205:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:29,205:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:29,206:WARNING:
2024-03-03 19:51:29,206:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:29,206:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:29,206:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:29,206:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:29,206:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:29,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:29,209:WARNING:  warnings.warn(
2024-03-03 19:51:29,601:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:29,601:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:29,601:WARNING:
2024-03-03 19:51:29,601:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:29,601:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:29,602:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:29,602:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:29,602:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:29,606:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:29,606:WARNING:  warnings.warn(
2024-03-03 19:51:29,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:29,977:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:29,977:WARNING:
2024-03-03 19:51:29,977:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:29,977:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:29,977:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:29,977:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:29,977:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:29,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:29,982:WARNING:  warnings.warn(
2024-03-03 19:51:30,310:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:30,310:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:30,310:WARNING:
2024-03-03 19:51:30,310:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:30,310:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:30,310:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:30,310:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:30,312:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:30,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:30,315:WARNING:  warnings.warn(
2024-03-03 19:51:30,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:30,614:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:30,614:WARNING:
2024-03-03 19:51:30,614:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:30,614:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:30,614:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:30,614:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:30,614:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:30,619:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:30,619:WARNING:  warnings.warn(
2024-03-03 19:51:30,939:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:30,939:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:30,939:WARNING:
2024-03-03 19:51:30,939:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:30,939:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:30,939:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:30,939:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:30,939:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:30,943:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:30,943:WARNING:  warnings.warn(
2024-03-03 19:51:31,277:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:31,277:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:31,277:WARNING:
2024-03-03 19:51:31,277:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:31,277:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:31,277:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:31,277:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:31,277:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:31,282:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:31,282:WARNING:  warnings.warn(
2024-03-03 19:51:31,623:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:31,624:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:31,624:WARNING:
2024-03-03 19:51:31,624:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:31,624:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:31,624:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:31,624:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:31,624:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:31,632:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:31,632:WARNING:  warnings.warn(
2024-03-03 19:51:32,116:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:32,117:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:32,117:WARNING:
2024-03-03 19:51:32,117:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:32,117:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:32,117:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:32,117:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:32,117:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:32,121:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:32,121:WARNING:  warnings.warn(
2024-03-03 19:51:32,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:32,423:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:32,423:WARNING:
2024-03-03 19:51:32,423:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:32,423:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:32,423:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:32,423:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:32,423:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:32,427:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:32,427:WARNING:  warnings.warn(
2024-03-03 19:51:32,717:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:32,717:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:32,717:WARNING:
2024-03-03 19:51:32,717:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:32,717:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:32,717:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:32,717:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:32,717:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:32,722:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:32,722:WARNING:  warnings.warn(
2024-03-03 19:51:33,066:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:33,066:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:33,067:WARNING:
2024-03-03 19:51:33,067:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:33,067:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:33,067:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:33,067:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:33,067:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:33,071:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:33,071:WARNING:  warnings.warn(
2024-03-03 19:51:33,462:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:33,462:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:33,462:WARNING:
2024-03-03 19:51:33,462:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:33,462:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:33,462:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:33,462:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:33,462:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:33,466:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:33,466:WARNING:  warnings.warn(
2024-03-03 19:51:33,782:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:33,782:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:33,782:WARNING:
2024-03-03 19:51:33,782:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:33,782:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:33,782:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:33,782:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:33,782:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:33,786:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:33,787:WARNING:  warnings.warn(
2024-03-03 19:51:34,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:34,101:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:34,101:WARNING:
2024-03-03 19:51:34,101:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:34,101:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:34,101:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:34,101:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:34,101:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:34,105:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:34,105:WARNING:  warnings.warn(
2024-03-03 19:51:34,442:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:34,442:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:34,442:WARNING:
2024-03-03 19:51:34,442:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:34,442:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:34,442:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:34,442:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:34,442:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:34,445:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:34,445:WARNING:  warnings.warn(
2024-03-03 19:51:34,751:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:34,751:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:34,751:WARNING:
2024-03-03 19:51:34,751:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:34,751:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:34,751:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:34,751:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:34,751:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:34,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:34,755:WARNING:  warnings.warn(
2024-03-03 19:51:35,043:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:35,043:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:35,043:WARNING:
2024-03-03 19:51:35,043:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:35,043:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:35,043:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:35,043:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:35,043:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:35,046:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:35,046:WARNING:  warnings.warn(
2024-03-03 19:51:35,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:35,348:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:35,348:WARNING:
2024-03-03 19:51:35,348:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:35,348:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:35,348:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:35,348:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:35,348:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:35,353:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:35,353:WARNING:  warnings.warn(
2024-03-03 19:51:35,663:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:35,663:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:35,663:WARNING:
2024-03-03 19:51:35,663:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:35,663:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:35,663:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:35,664:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:35,664:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:35,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:35,669:WARNING:  warnings.warn(
2024-03-03 19:51:35,966:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:35,967:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:35,967:WARNING:
2024-03-03 19:51:35,967:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:35,967:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:35,967:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:35,967:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:35,967:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:35,971:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:35,971:WARNING:  warnings.warn(
2024-03-03 19:51:36,298:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:36,298:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:36,298:WARNING:
2024-03-03 19:51:36,298:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:36,298:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:36,298:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:36,298:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:36,298:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:36,302:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:36,302:WARNING:  warnings.warn(
2024-03-03 19:51:36,585:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:36,585:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:36,585:WARNING:
2024-03-03 19:51:36,585:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:36,586:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:36,586:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:36,586:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:36,586:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:36,590:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:36,590:WARNING:  warnings.warn(
2024-03-03 19:51:36,880:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:36,880:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:36,880:WARNING:
2024-03-03 19:51:36,880:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:36,880:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:36,880:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:36,880:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:36,880:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:36,884:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:36,884:WARNING:  warnings.warn(
2024-03-03 19:51:37,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:37,177:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:37,177:WARNING:
2024-03-03 19:51:37,177:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:37,177:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:37,177:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:37,177:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:37,177:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:37,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:37,181:WARNING:  warnings.warn(
2024-03-03 19:51:37,473:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:37,473:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:37,473:WARNING:
2024-03-03 19:51:37,473:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:37,473:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:37,473:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:37,473:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:37,473:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:37,477:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:37,477:WARNING:  warnings.warn(
2024-03-03 19:51:37,761:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:37,761:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:37,761:WARNING:
2024-03-03 19:51:37,761:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:37,761:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:37,761:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:37,761:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:37,761:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:37,768:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:37,768:WARNING:  warnings.warn(
2024-03-03 19:51:38,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:38,085:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:38,085:WARNING:
2024-03-03 19:51:38,085:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:38,085:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:38,085:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:38,085:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:38,085:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:38,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:38,089:WARNING:  warnings.warn(
2024-03-03 19:51:38,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:38,372:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:38,372:WARNING:
2024-03-03 19:51:38,372:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:38,372:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:38,372:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:38,372:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:38,372:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:38,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:38,376:WARNING:  warnings.warn(
2024-03-03 19:51:38,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:38,665:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:38,665:WARNING:
2024-03-03 19:51:38,665:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:38,665:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:38,665:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:38,665:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:38,665:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:38,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:38,669:WARNING:  warnings.warn(
2024-03-03 19:51:38,957:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:38,957:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:38,957:WARNING:
2024-03-03 19:51:38,957:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:38,957:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:38,957:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:38,957:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:38,957:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:38,962:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:38,962:WARNING:  warnings.warn(
2024-03-03 19:51:39,253:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:39,253:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:39,253:WARNING:
2024-03-03 19:51:39,253:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:39,253:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:39,253:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:39,253:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:39,253:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:39,256:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:39,256:WARNING:  warnings.warn(
2024-03-03 19:51:39,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:39,542:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:39,542:WARNING:
2024-03-03 19:51:39,542:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:39,542:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:39,542:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:39,542:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:39,542:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:39,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:39,546:WARNING:  warnings.warn(
2024-03-03 19:51:39,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:39,826:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:39,826:WARNING:
2024-03-03 19:51:39,826:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:39,826:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:39,826:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:39,826:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:39,826:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:39,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:39,830:WARNING:  warnings.warn(
2024-03-03 19:51:40,136:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:40,136:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:40,136:WARNING:
2024-03-03 19:51:40,136:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:40,136:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:40,136:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:40,136:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:40,136:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:40,141:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:40,141:WARNING:  warnings.warn(
2024-03-03 19:51:40,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:40,423:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:40,423:WARNING:
2024-03-03 19:51:40,423:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:40,423:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:40,423:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:40,423:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:40,423:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:40,427:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:40,427:WARNING:  warnings.warn(
2024-03-03 19:51:40,720:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:40,720:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:40,720:WARNING:
2024-03-03 19:51:40,720:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:40,720:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:40,720:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:40,720:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:40,720:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:40,724:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:40,724:WARNING:  warnings.warn(
2024-03-03 19:51:41,014:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:41,014:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:41,014:WARNING:
2024-03-03 19:51:41,014:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:41,014:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:41,014:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:41,014:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:41,014:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:41,019:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:41,019:WARNING:  warnings.warn(
2024-03-03 19:51:41,297:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:41,297:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:41,297:WARNING:
2024-03-03 19:51:41,297:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:41,297:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:41,297:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:41,297:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:41,297:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:41,301:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:41,301:WARNING:  warnings.warn(
2024-03-03 19:51:41,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:41,581:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:41,581:WARNING:
2024-03-03 19:51:41,581:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:41,581:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:41,581:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:41,581:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:41,581:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:41,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:41,584:WARNING:  warnings.warn(
2024-03-03 19:51:41,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:41,866:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:41,866:WARNING:
2024-03-03 19:51:41,868:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:41,868:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:41,868:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:41,868:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:41,868:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:41,871:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:41,872:WARNING:  warnings.warn(
2024-03-03 19:51:42,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:42,176:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:42,176:WARNING:
2024-03-03 19:51:42,176:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:42,176:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:42,176:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:42,177:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:42,177:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:42,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:42,181:WARNING:  warnings.warn(
2024-03-03 19:51:42,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:42,465:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:42,465:WARNING:
2024-03-03 19:51:42,465:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:42,465:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:42,465:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:42,465:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:42,465:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:42,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:42,469:WARNING:  warnings.warn(
2024-03-03 19:51:42,751:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:42,751:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:42,751:WARNING:
2024-03-03 19:51:42,751:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:42,751:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:42,751:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:42,751:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:42,751:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:42,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:42,755:WARNING:  warnings.warn(
2024-03-03 19:51:43,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:43,037:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:43,037:WARNING:
2024-03-03 19:51:43,037:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:43,037:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:43,037:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:43,037:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:43,037:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:43,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:43,040:WARNING:  warnings.warn(
2024-03-03 19:51:43,325:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:43,325:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:43,325:WARNING:
2024-03-03 19:51:43,325:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:43,325:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:43,325:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:43,325:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:43,325:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:43,329:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:43,329:WARNING:  warnings.warn(
2024-03-03 19:51:43,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:43,614:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:43,614:WARNING:
2024-03-03 19:51:43,614:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:43,614:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:43,614:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:43,614:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:43,614:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:43,619:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:43,619:WARNING:  warnings.warn(
2024-03-03 19:51:43,904:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:43,904:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:43,904:WARNING:
2024-03-03 19:51:43,904:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:43,904:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:43,904:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:43,904:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:43,904:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:43,908:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:43,908:WARNING:  warnings.warn(
2024-03-03 19:51:44,210:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:44,210:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:44,211:WARNING:
2024-03-03 19:51:44,211:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:44,211:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:44,211:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:44,211:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:44,211:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:44,215:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:44,215:WARNING:  warnings.warn(
2024-03-03 19:51:44,509:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:44,509:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:44,509:WARNING:
2024-03-03 19:51:44,509:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:44,509:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:44,509:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:44,509:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:44,509:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:44,513:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:44,513:WARNING:  warnings.warn(
2024-03-03 19:51:44,805:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:44,805:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:44,805:WARNING:
2024-03-03 19:51:44,805:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:44,805:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:44,805:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:44,805:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:44,805:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:44,809:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:44,809:WARNING:  warnings.warn(
2024-03-03 19:51:45,099:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:45,099:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:45,099:WARNING:
2024-03-03 19:51:45,099:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:45,099:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:45,099:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:45,099:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:45,099:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:45,104:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:45,104:WARNING:  warnings.warn(
2024-03-03 19:51:45,384:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:45,384:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:45,384:WARNING:
2024-03-03 19:51:45,384:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:45,385:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:45,385:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:45,385:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:45,385:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:45,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:45,389:WARNING:  warnings.warn(
2024-03-03 19:51:45,668:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:45,668:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:45,668:WARNING:
2024-03-03 19:51:45,668:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:45,668:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:45,668:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:45,668:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:45,668:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:45,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:45,673:WARNING:  warnings.warn(
2024-03-03 19:51:45,972:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:45,972:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:45,972:WARNING:
2024-03-03 19:51:45,972:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:45,972:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:45,972:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:45,972:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:45,972:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:45,976:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:45,976:WARNING:  warnings.warn(
2024-03-03 19:51:46,260:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:46,260:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:46,260:WARNING:
2024-03-03 19:51:46,260:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:46,260:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:46,260:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:46,260:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:46,262:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:46,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:46,265:WARNING:  warnings.warn(
2024-03-03 19:51:46,634:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:46,634:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:46,634:WARNING:
2024-03-03 19:51:46,634:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:46,634:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:46,634:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:46,634:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:46,634:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:46,638:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:46,638:WARNING:  warnings.warn(
2024-03-03 19:51:46,924:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:46,924:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:46,924:WARNING:
2024-03-03 19:51:46,924:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:46,924:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:46,924:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:46,924:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:46,924:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:46,929:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:46,929:WARNING:  warnings.warn(
2024-03-03 19:51:47,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:47,218:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:47,218:WARNING:
2024-03-03 19:51:47,218:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:47,218:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:47,218:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:47,218:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:47,218:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:47,223:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:47,223:WARNING:  warnings.warn(
2024-03-03 19:51:47,507:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:47,507:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:47,507:WARNING:
2024-03-03 19:51:47,507:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:47,507:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:47,507:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:47,507:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:47,507:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:47,511:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:47,511:WARNING:  warnings.warn(
2024-03-03 19:51:47,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:47,797:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:47,797:WARNING:
2024-03-03 19:51:47,797:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:47,797:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:47,797:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:47,797:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:47,797:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:47,801:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:47,801:WARNING:  warnings.warn(
2024-03-03 19:51:48,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:48,141:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:48,141:WARNING:
2024-03-03 19:51:48,141:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:48,141:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:48,141:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:48,143:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:48,143:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:48,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:48,157:WARNING:  warnings.warn(
2024-03-03 19:51:48,443:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:48,444:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:48,444:WARNING:
2024-03-03 19:51:48,444:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:48,444:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:48,444:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:48,444:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:48,444:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:48,448:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:48,448:WARNING:  warnings.warn(
2024-03-03 19:51:48,763:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:48,763:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:48,763:WARNING:
2024-03-03 19:51:48,763:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:48,763:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:48,763:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:48,763:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:48,763:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:48,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:48,767:WARNING:  warnings.warn(
2024-03-03 19:51:49,050:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:49,050:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:49,050:WARNING:
2024-03-03 19:51:49,050:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:49,050:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:49,050:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:49,050:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:49,050:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:49,054:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:49,055:WARNING:  warnings.warn(
2024-03-03 19:51:49,343:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:49,344:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:49,344:WARNING:
2024-03-03 19:51:49,344:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:49,344:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:49,344:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:49,344:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:49,344:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:49,347:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:49,347:WARNING:  warnings.warn(
2024-03-03 19:51:49,634:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:49,634:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:49,634:WARNING:
2024-03-03 19:51:49,634:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:49,634:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:49,634:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:49,634:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:49,634:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:49,638:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:49,638:WARNING:  warnings.warn(
2024-03-03 19:51:49,916:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:49,916:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:49,916:WARNING:
2024-03-03 19:51:49,916:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:49,916:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:49,916:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:49,916:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:49,916:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:49,920:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:49,920:WARNING:  warnings.warn(
2024-03-03 19:51:50,203:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:50,203:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:50,203:WARNING:
2024-03-03 19:51:50,203:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:50,204:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:50,204:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:50,204:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:50,204:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:50,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:50,208:WARNING:  warnings.warn(
2024-03-03 19:51:50,498:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:50,498:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:50,498:WARNING:
2024-03-03 19:51:50,498:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:50,498:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:50,498:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:50,498:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:50,498:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:50,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:50,503:WARNING:  warnings.warn(
2024-03-03 19:51:50,792:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:50,792:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:50,792:WARNING:
2024-03-03 19:51:50,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:50,793:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:50,793:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:50,793:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:50,793:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:50,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:50,797:WARNING:  warnings.warn(
2024-03-03 19:51:51,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:51,097:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:51,097:WARNING:
2024-03-03 19:51:51,097:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:51,097:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:51,098:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:51,098:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:51,098:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:51,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:51,101:WARNING:  warnings.warn(
2024-03-03 19:51:51,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:51,386:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:51,386:WARNING:
2024-03-03 19:51:51,386:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:51,386:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:51,386:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:51,387:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:51,387:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:51,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:51,390:WARNING:  warnings.warn(
2024-03-03 19:51:51,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:51,684:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:51,684:WARNING:
2024-03-03 19:51:51,684:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:51,684:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:51,684:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:51,684:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:51,684:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:51,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:51,689:WARNING:  warnings.warn(
2024-03-03 19:51:51,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:51,975:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:51,975:WARNING:
2024-03-03 19:51:51,975:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:51,975:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:51,975:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:51,975:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:51,975:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:51,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:51,980:WARNING:  warnings.warn(
2024-03-03 19:51:52,258:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:52,259:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:52,259:WARNING:
2024-03-03 19:51:52,259:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:52,259:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:52,259:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:52,259:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:52,259:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:52,263:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:52,263:WARNING:  warnings.warn(
2024-03-03 19:51:52,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:52,551:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:52,551:WARNING:
2024-03-03 19:51:52,551:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:52,551:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:52,551:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:52,551:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:52,551:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:52,555:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:52,555:WARNING:  warnings.warn(
2024-03-03 19:51:52,839:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:52,839:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:52,839:WARNING:
2024-03-03 19:51:52,839:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:52,839:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:52,839:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:52,839:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:52,839:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:52,843:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:52,843:WARNING:  warnings.warn(
2024-03-03 19:51:53,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:53,148:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:53,148:WARNING:
2024-03-03 19:51:53,148:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:53,148:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:53,148:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:53,148:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:53,148:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:53,152:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:53,153:WARNING:  warnings.warn(
2024-03-03 19:51:53,445:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:53,447:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:53,447:WARNING:
2024-03-03 19:51:53,447:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:53,447:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:53,447:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:53,447:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:53,447:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:53,450:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:53,450:WARNING:  warnings.warn(
2024-03-03 19:51:53,735:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:53,735:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:53,735:WARNING:
2024-03-03 19:51:53,735:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:53,735:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:53,735:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:53,735:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:53,735:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:53,739:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:53,739:WARNING:  warnings.warn(
2024-03-03 19:51:54,029:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:54,030:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:54,030:WARNING:
2024-03-03 19:51:54,030:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:54,030:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:54,030:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:54,030:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:54,030:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:54,034:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:54,034:WARNING:  warnings.warn(
2024-03-03 19:51:54,312:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:54,312:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:54,313:WARNING:
2024-03-03 19:51:54,313:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:54,313:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:54,313:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:54,313:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:54,313:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:54,317:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:54,317:WARNING:  warnings.warn(
2024-03-03 19:51:54,600:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:54,600:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:54,600:WARNING:
2024-03-03 19:51:54,600:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:54,600:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:54,600:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:54,600:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:54,600:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:54,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:54,604:WARNING:  warnings.warn(
2024-03-03 19:51:54,880:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:54,880:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:54,880:WARNING:
2024-03-03 19:51:54,880:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:54,881:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:54,881:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:54,881:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:54,881:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:54,885:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:54,885:WARNING:  warnings.warn(
2024-03-03 19:51:55,192:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:55,192:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:55,192:WARNING:
2024-03-03 19:51:55,192:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:55,192:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:55,192:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:55,192:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:55,192:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:55,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:55,195:WARNING:  warnings.warn(
2024-03-03 19:51:55,479:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:55,479:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:55,479:WARNING:
2024-03-03 19:51:55,479:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:55,479:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:55,479:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:55,479:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:55,479:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:55,483:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:55,483:WARNING:  warnings.warn(
2024-03-03 19:51:55,764:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:55,765:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:55,765:WARNING:
2024-03-03 19:51:55,765:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:55,765:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:55,765:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:55,765:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:55,765:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:55,769:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:55,769:WARNING:  warnings.warn(
2024-03-03 19:51:56,060:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:56,060:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:56,061:WARNING:
2024-03-03 19:51:56,061:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:56,061:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:56,061:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:56,061:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:56,061:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:56,065:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:56,065:WARNING:  warnings.warn(
2024-03-03 19:51:56,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:56,348:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:56,348:WARNING:
2024-03-03 19:51:56,348:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:56,348:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:56,348:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:56,348:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:56,348:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:56,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:56,352:WARNING:  warnings.warn(
2024-03-03 19:51:56,634:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:56,635:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:56,635:WARNING:
2024-03-03 19:51:56,635:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:56,635:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:56,635:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:56,635:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:56,635:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:56,638:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:56,638:WARNING:  warnings.warn(
2024-03-03 19:51:56,921:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:56,921:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:56,921:WARNING:
2024-03-03 19:51:56,921:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:56,921:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:56,921:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:56,921:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:56,921:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:56,926:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:56,926:WARNING:  warnings.warn(
2024-03-03 19:51:57,219:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:57,219:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:57,219:WARNING:
2024-03-03 19:51:57,219:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:57,219:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:57,219:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:57,219:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:57,219:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:57,222:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:57,223:WARNING:  warnings.warn(
2024-03-03 19:51:57,516:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:57,516:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:57,517:WARNING:
2024-03-03 19:51:57,517:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:57,517:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:57,517:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:57,517:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:57,517:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:57,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:57,520:WARNING:  warnings.warn(
2024-03-03 19:51:57,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:57,812:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:57,812:WARNING:
2024-03-03 19:51:57,812:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:57,813:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:57,813:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:57,813:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:57,813:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:57,817:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:57,817:WARNING:  warnings.warn(
2024-03-03 19:51:58,100:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:58,100:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:58,100:WARNING:
2024-03-03 19:51:58,100:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:58,100:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:58,100:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:58,100:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:58,100:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:58,104:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:58,104:WARNING:  warnings.warn(
2024-03-03 19:51:58,383:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:58,385:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:58,385:WARNING:
2024-03-03 19:51:58,385:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:58,385:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:58,385:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:58,385:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:58,385:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:58,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:58,388:WARNING:  warnings.warn(
2024-03-03 19:51:58,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:58,669:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:58,669:WARNING:
2024-03-03 19:51:58,669:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:58,669:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:58,669:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:58,669:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:58,670:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:58,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:58,674:WARNING:  warnings.warn(
2024-03-03 19:51:58,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:58,969:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:58,969:WARNING:
2024-03-03 19:51:58,969:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:58,969:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:58,969:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:58,969:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:58,969:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:58,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:58,973:WARNING:  warnings.warn(
2024-03-03 19:51:59,262:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:59,262:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:59,262:WARNING:
2024-03-03 19:51:59,262:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:59,262:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:59,262:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:59,262:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:59,262:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:59,267:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:59,267:WARNING:  warnings.warn(
2024-03-03 19:51:59,579:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:59,579:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:59,579:WARNING:
2024-03-03 19:51:59,579:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:59,579:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:59,579:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:59,579:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:59,579:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:59,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:59,584:WARNING:  warnings.warn(
2024-03-03 19:51:59,869:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:51:59,869:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:51:59,869:WARNING:
2024-03-03 19:51:59,869:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:51:59,869:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:51:59,869:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:51:59,869:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:51:59,869:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:51:59,873:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:51:59,873:WARNING:  warnings.warn(
2024-03-03 19:52:00,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:00,169:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:00,169:WARNING:
2024-03-03 19:52:00,169:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:00,169:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:00,169:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:00,169:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:00,169:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:00,173:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:00,173:WARNING:  warnings.warn(
2024-03-03 19:52:00,456:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:00,456:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:00,456:WARNING:
2024-03-03 19:52:00,456:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:00,456:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:00,456:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:00,456:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:00,456:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:00,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:00,461:WARNING:  warnings.warn(
2024-03-03 19:52:00,743:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:00,743:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:00,743:WARNING:
2024-03-03 19:52:00,743:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:00,743:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:00,743:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:00,743:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:00,743:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:00,747:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:00,747:WARNING:  warnings.warn(
2024-03-03 19:52:01,035:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:01,035:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:01,035:WARNING:
2024-03-03 19:52:01,035:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:01,035:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:01,035:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:01,035:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:01,035:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:01,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:01,039:WARNING:  warnings.warn(
2024-03-03 19:52:01,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:01,319:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:01,319:WARNING:
2024-03-03 19:52:01,319:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:01,319:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:01,319:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:01,319:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:01,319:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:01,323:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:01,323:WARNING:  warnings.warn(
2024-03-03 19:52:01,656:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:01,656:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:01,656:WARNING:
2024-03-03 19:52:01,656:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:01,656:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:01,656:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:01,656:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:01,656:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:01,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:01,660:WARNING:  warnings.warn(
2024-03-03 19:52:01,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:01,955:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:01,955:WARNING:
2024-03-03 19:52:01,955:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:01,955:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:01,955:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:01,955:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:01,956:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:01,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:01,959:WARNING:  warnings.warn(
2024-03-03 19:52:02,267:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:02,267:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:02,267:WARNING:
2024-03-03 19:52:02,267:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:02,267:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:02,267:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:02,267:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:02,267:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:02,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:02,271:WARNING:  warnings.warn(
2024-03-03 19:52:02,565:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:02,565:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:02,565:WARNING:
2024-03-03 19:52:02,565:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:02,565:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:02,565:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:02,565:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:02,565:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:02,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:02,569:WARNING:  warnings.warn(
2024-03-03 19:52:02,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:02,866:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:02,866:WARNING:
2024-03-03 19:52:02,866:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:02,867:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:02,867:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:02,867:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:02,867:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:02,871:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:02,871:WARNING:  warnings.warn(
2024-03-03 19:52:03,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:03,167:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:03,167:WARNING:
2024-03-03 19:52:03,167:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:03,167:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:03,167:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:03,167:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:03,167:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:03,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:03,171:WARNING:  warnings.warn(
2024-03-03 19:52:03,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:03,461:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:03,461:WARNING:
2024-03-03 19:52:03,461:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:03,461:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:03,461:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:03,461:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:03,461:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:03,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:03,465:WARNING:  warnings.warn(
2024-03-03 19:52:03,787:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:03,787:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:03,787:WARNING:
2024-03-03 19:52:03,787:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:03,787:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:03,787:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:03,787:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:03,787:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:03,792:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:03,792:WARNING:  warnings.warn(
2024-03-03 19:52:04,078:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:04,078:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:04,078:WARNING:
2024-03-03 19:52:04,078:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:04,079:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:04,079:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:04,079:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:04,079:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:04,082:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:04,083:WARNING:  warnings.warn(
2024-03-03 19:52:04,374:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:04,374:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:04,374:WARNING:
2024-03-03 19:52:04,374:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:04,374:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:04,374:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:04,374:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:04,374:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:04,378:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:04,378:WARNING:  warnings.warn(
2024-03-03 19:52:04,671:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:04,671:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:04,671:WARNING:
2024-03-03 19:52:04,671:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:04,671:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:04,671:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:04,671:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:04,672:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:04,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:04,676:WARNING:  warnings.warn(
2024-03-03 19:52:04,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:04,975:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:04,975:WARNING:
2024-03-03 19:52:04,975:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:04,975:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:04,975:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:04,975:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:04,975:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:04,978:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:04,979:WARNING:  warnings.warn(
2024-03-03 19:52:05,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:05,272:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:05,272:WARNING:
2024-03-03 19:52:05,272:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:05,272:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:05,272:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:05,272:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:05,272:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:05,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:05,276:WARNING:  warnings.warn(
2024-03-03 19:52:05,571:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:05,571:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:05,571:WARNING:
2024-03-03 19:52:05,571:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:05,571:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:05,571:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:05,571:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:05,571:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:05,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:05,576:WARNING:  warnings.warn(
2024-03-03 19:52:05,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:05,893:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:05,893:WARNING:
2024-03-03 19:52:05,893:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:05,893:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:05,893:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:05,893:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:05,893:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:05,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:05,897:WARNING:  warnings.warn(
2024-03-03 19:52:06,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:06,195:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:06,195:WARNING:
2024-03-03 19:52:06,195:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:06,195:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:06,195:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:06,195:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:06,195:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:06,199:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:06,200:WARNING:  warnings.warn(
2024-03-03 19:52:06,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:06,503:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:06,503:WARNING:
2024-03-03 19:52:06,503:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:06,503:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:06,503:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:06,503:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:06,503:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:06,507:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:06,507:WARNING:  warnings.warn(
2024-03-03 19:52:06,800:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:06,800:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:06,800:WARNING:
2024-03-03 19:52:06,800:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:06,800:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:06,800:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:06,800:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:06,800:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:06,804:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:06,805:WARNING:  warnings.warn(
2024-03-03 19:52:07,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:07,093:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:07,093:WARNING:
2024-03-03 19:52:07,093:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:07,093:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:07,095:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:07,095:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:07,095:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:07,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:07,099:WARNING:  warnings.warn(
2024-03-03 19:52:07,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:07,389:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:07,389:WARNING:
2024-03-03 19:52:07,389:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:07,389:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:07,389:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:07,389:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:07,389:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:07,392:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:07,392:WARNING:  warnings.warn(
2024-03-03 19:52:07,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:07,680:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:07,680:WARNING:
2024-03-03 19:52:07,680:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:07,680:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:07,680:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:07,680:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:07,680:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:07,685:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:07,685:WARNING:  warnings.warn(
2024-03-03 19:52:07,994:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:07,995:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:07,995:WARNING:
2024-03-03 19:52:07,995:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:07,995:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:07,995:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:07,995:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:07,995:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:07,999:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:07,999:WARNING:  warnings.warn(
2024-03-03 19:52:08,322:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:08,322:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:08,322:WARNING:
2024-03-03 19:52:08,322:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:08,322:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:08,322:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:08,322:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:08,322:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:08,326:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:08,326:WARNING:  warnings.warn(
2024-03-03 19:52:08,620:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:08,620:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:08,620:WARNING:
2024-03-03 19:52:08,620:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:08,620:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:08,620:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:08,620:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:08,620:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:08,625:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:08,625:WARNING:  warnings.warn(
2024-03-03 19:52:08,918:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:08,918:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:08,918:WARNING:
2024-03-03 19:52:08,918:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:08,918:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:08,918:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:08,918:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:08,918:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:08,921:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:08,921:WARNING:  warnings.warn(
2024-03-03 19:52:09,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:09,226:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:09,226:WARNING:
2024-03-03 19:52:09,226:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:09,226:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:09,226:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:09,226:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:09,226:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:09,229:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:09,229:WARNING:  warnings.warn(
2024-03-03 19:52:09,526:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:09,526:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:09,526:WARNING:
2024-03-03 19:52:09,526:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:09,526:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:09,526:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:09,526:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:09,526:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:09,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:09,531:WARNING:  warnings.warn(
2024-03-03 19:52:09,849:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:09,849:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:09,849:WARNING:
2024-03-03 19:52:09,849:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:09,849:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:09,849:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:09,849:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:09,849:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:09,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:09,854:WARNING:  warnings.warn(
2024-03-03 19:52:10,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:10,175:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:10,175:WARNING:
2024-03-03 19:52:10,175:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:10,175:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:10,175:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:10,175:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:10,175:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:10,179:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:10,179:WARNING:  warnings.warn(
2024-03-03 19:52:10,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:10,469:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:10,469:WARNING:
2024-03-03 19:52:10,469:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:10,469:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:10,469:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:10,469:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:10,469:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:10,473:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:10,473:WARNING:  warnings.warn(
2024-03-03 19:52:10,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:10,770:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:10,770:WARNING:
2024-03-03 19:52:10,770:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:10,770:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:10,770:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:10,770:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:10,770:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:10,774:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:10,774:WARNING:  warnings.warn(
2024-03-03 19:52:11,081:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:11,081:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:11,081:WARNING:
2024-03-03 19:52:11,081:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:11,082:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:11,082:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:11,082:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:11,082:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:11,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:11,086:WARNING:  warnings.warn(
2024-03-03 19:52:11,381:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:11,381:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:11,381:WARNING:
2024-03-03 19:52:11,381:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:11,381:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:11,381:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:11,381:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:11,381:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:11,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:11,386:WARNING:  warnings.warn(
2024-03-03 19:52:11,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:11,675:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:11,675:WARNING:
2024-03-03 19:52:11,675:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:11,675:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:11,675:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:11,675:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:11,675:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:11,679:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:11,679:WARNING:  warnings.warn(
2024-03-03 19:52:11,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:11,980:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:11,980:WARNING:
2024-03-03 19:52:11,980:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:11,980:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:11,980:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:11,980:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:11,980:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:11,985:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:11,985:WARNING:  warnings.warn(
2024-03-03 19:52:12,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:12,304:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:12,304:WARNING:
2024-03-03 19:52:12,304:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:12,304:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:12,305:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:12,305:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:12,305:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:12,309:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:12,309:WARNING:  warnings.warn(
2024-03-03 19:52:12,605:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:12,605:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:12,605:WARNING:
2024-03-03 19:52:12,605:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:12,605:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:12,605:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:12,605:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:12,605:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:12,610:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:12,610:WARNING:  warnings.warn(
2024-03-03 19:52:12,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:12,906:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:12,906:WARNING:
2024-03-03 19:52:12,906:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:12,906:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:12,906:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:12,906:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:12,906:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:12,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:12,910:WARNING:  warnings.warn(
2024-03-03 19:52:13,204:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:13,204:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:13,204:WARNING:
2024-03-03 19:52:13,204:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:13,204:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:13,204:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:13,204:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:13,204:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:13,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:13,209:WARNING:  warnings.warn(
2024-03-03 19:52:13,501:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:13,501:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:13,501:WARNING:
2024-03-03 19:52:13,501:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:13,501:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:13,501:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:13,501:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:13,501:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:13,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:13,505:WARNING:  warnings.warn(
2024-03-03 19:52:13,798:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:13,798:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:13,798:WARNING:
2024-03-03 19:52:13,798:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:13,799:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:13,799:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:13,799:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:13,799:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:13,802:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:13,802:WARNING:  warnings.warn(
2024-03-03 19:52:14,103:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:14,103:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:14,103:WARNING:
2024-03-03 19:52:14,103:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:14,103:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:14,103:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:14,103:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:14,103:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:14,108:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:14,108:WARNING:  warnings.warn(
2024-03-03 19:52:14,412:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:14,412:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:14,413:WARNING:
2024-03-03 19:52:14,413:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:14,413:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:14,413:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:14,413:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:14,413:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:14,417:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:14,417:WARNING:  warnings.warn(
2024-03-03 19:52:14,725:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:14,725:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:14,725:WARNING:
2024-03-03 19:52:14,725:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:14,725:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:14,725:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:14,725:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:14,725:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:14,729:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:14,729:WARNING:  warnings.warn(
2024-03-03 19:52:15,022:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:15,022:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:15,022:WARNING:
2024-03-03 19:52:15,022:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:15,022:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:15,022:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:15,022:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:15,022:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:15,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:15,026:WARNING:  warnings.warn(
2024-03-03 19:52:15,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:15,319:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:15,320:WARNING:
2024-03-03 19:52:15,320:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:15,320:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:15,320:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:15,320:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:15,320:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:15,324:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:15,324:WARNING:  warnings.warn(
2024-03-03 19:52:15,616:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:15,616:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:15,616:WARNING:
2024-03-03 19:52:15,616:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:15,616:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:15,616:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:15,616:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:15,616:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:15,621:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:15,621:WARNING:  warnings.warn(
2024-03-03 19:52:15,911:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:15,911:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:15,911:WARNING:
2024-03-03 19:52:15,911:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:15,911:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:15,911:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:15,911:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:15,911:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:15,916:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:15,916:WARNING:  warnings.warn(
2024-03-03 19:52:16,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:16,207:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:16,208:WARNING:
2024-03-03 19:52:16,208:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:16,208:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:16,208:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:16,208:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:16,208:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:16,211:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:16,211:WARNING:  warnings.warn(
2024-03-03 19:52:16,502:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:16,502:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:16,502:WARNING:
2024-03-03 19:52:16,502:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:16,502:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:16,502:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:16,502:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:16,502:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:16,506:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:16,506:WARNING:  warnings.warn(
2024-03-03 19:52:16,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:16,826:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:16,826:WARNING:
2024-03-03 19:52:16,826:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:16,826:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:16,826:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:16,826:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:16,826:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:16,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:16,831:WARNING:  warnings.warn(
2024-03-03 19:52:17,143:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:17,143:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:17,143:WARNING:
2024-03-03 19:52:17,143:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:17,143:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:17,143:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:17,143:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:17,143:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:17,147:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:17,147:WARNING:  warnings.warn(
2024-03-03 19:52:17,449:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:17,449:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:17,449:WARNING:
2024-03-03 19:52:17,449:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:17,449:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:17,449:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:17,449:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:17,449:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:17,454:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:17,454:WARNING:  warnings.warn(
2024-03-03 19:52:17,747:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:17,747:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:17,748:WARNING:
2024-03-03 19:52:17,748:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:17,748:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:17,748:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:17,748:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:17,748:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:17,751:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:17,751:WARNING:  warnings.warn(
2024-03-03 19:52:18,045:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:18,046:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:18,046:WARNING:
2024-03-03 19:52:18,046:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:18,046:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:18,046:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:18,046:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:18,046:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:18,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:18,049:WARNING:  warnings.warn(
2024-03-03 19:52:18,343:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:18,343:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:18,343:WARNING:
2024-03-03 19:52:18,343:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:18,343:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:18,343:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:18,343:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:18,343:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:18,347:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:18,347:WARNING:  warnings.warn(
2024-03-03 19:52:18,641:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:18,641:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:18,641:WARNING:
2024-03-03 19:52:18,641:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:18,641:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:18,641:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:18,641:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:18,641:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:18,646:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:18,646:WARNING:  warnings.warn(
2024-03-03 19:52:18,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:18,955:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:18,955:WARNING:
2024-03-03 19:52:18,955:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:18,955:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:18,955:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:18,955:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:18,955:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:18,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:18,959:WARNING:  warnings.warn(
2024-03-03 19:52:19,252:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:19,252:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:19,252:WARNING:
2024-03-03 19:52:19,252:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:19,252:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:19,252:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:19,252:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:19,252:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:19,256:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:19,256:WARNING:  warnings.warn(
2024-03-03 19:52:19,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:19,551:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:19,551:WARNING:
2024-03-03 19:52:19,551:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:19,551:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:19,551:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:19,551:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:19,551:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:19,556:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:19,556:WARNING:  warnings.warn(
2024-03-03 19:52:19,848:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:19,848:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:19,849:WARNING:
2024-03-03 19:52:19,849:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:19,849:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:19,849:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:19,849:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:19,849:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:19,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:19,853:WARNING:  warnings.warn(
2024-03-03 19:52:20,155:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:20,155:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:20,155:WARNING:
2024-03-03 19:52:20,155:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:20,155:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:20,155:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:20,155:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:20,155:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:20,160:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:20,160:WARNING:  warnings.warn(
2024-03-03 19:52:20,457:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:20,457:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:20,457:WARNING:
2024-03-03 19:52:20,457:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:20,457:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:20,457:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:20,457:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:20,457:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:20,460:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:20,460:WARNING:  warnings.warn(
2024-03-03 19:52:20,755:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:20,755:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:20,755:WARNING:
2024-03-03 19:52:20,755:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:20,755:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:20,755:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:20,755:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:20,755:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:20,760:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:20,760:WARNING:  warnings.warn(
2024-03-03 19:52:21,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:21,085:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:21,085:WARNING:
2024-03-03 19:52:21,085:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:21,085:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:21,085:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:21,085:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:21,085:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:21,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:21,089:WARNING:  warnings.warn(
2024-03-03 19:52:21,379:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:21,379:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:21,379:WARNING:
2024-03-03 19:52:21,379:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:21,379:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:21,379:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:21,379:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:21,379:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:21,383:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:21,383:WARNING:  warnings.warn(
2024-03-03 19:52:21,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:21,673:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:21,673:WARNING:
2024-03-03 19:52:21,673:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:21,673:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:21,673:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:21,673:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:21,673:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:21,677:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:21,678:WARNING:  warnings.warn(
2024-03-03 19:52:21,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:21,973:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:21,973:WARNING:
2024-03-03 19:52:21,973:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:21,973:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:21,973:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:21,973:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:21,973:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:21,978:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:21,979:WARNING:  warnings.warn(
2024-03-03 19:52:22,271:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:22,271:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:22,271:WARNING:
2024-03-03 19:52:22,271:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:22,271:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:22,271:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:22,271:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:22,271:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:22,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:22,276:WARNING:  warnings.warn(
2024-03-03 19:52:22,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:22,569:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:22,569:WARNING:
2024-03-03 19:52:22,569:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:22,569:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:22,569:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:22,569:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:22,569:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:22,572:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:22,572:WARNING:  warnings.warn(
2024-03-03 19:52:22,867:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:22,867:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:22,867:WARNING:
2024-03-03 19:52:22,867:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:22,867:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:22,867:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:22,867:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:22,867:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:22,871:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:22,871:WARNING:  warnings.warn(
2024-03-03 19:52:23,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:23,195:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:23,195:WARNING:
2024-03-03 19:52:23,195:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:23,195:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:23,195:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:23,195:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:23,195:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:23,199:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:23,199:WARNING:  warnings.warn(
2024-03-03 19:52:23,489:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:23,489:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:23,489:WARNING:
2024-03-03 19:52:23,489:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:23,489:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:23,489:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:23,489:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:23,489:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:23,493:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:23,493:WARNING:  warnings.warn(
2024-03-03 19:52:23,782:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:23,782:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:23,784:WARNING:
2024-03-03 19:52:23,784:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:23,784:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:23,784:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:23,784:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:23,784:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:23,787:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:23,787:WARNING:  warnings.warn(
2024-03-03 19:52:24,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:24,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:24,083:WARNING:
2024-03-03 19:52:24,083:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:24,083:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:24,083:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:24,083:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:24,083:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:24,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:24,087:WARNING:  warnings.warn(
2024-03-03 19:52:24,383:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:24,383:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:24,383:WARNING:
2024-03-03 19:52:24,383:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:24,383:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:24,383:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:24,383:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:24,383:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:24,387:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:24,387:WARNING:  warnings.warn(
2024-03-03 19:52:24,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:24,676:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:24,676:WARNING:
2024-03-03 19:52:24,676:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:24,676:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:24,676:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:24,677:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:24,677:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:24,681:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:24,681:WARNING:  warnings.warn(
2024-03-03 19:52:24,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:24,973:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:24,973:WARNING:
2024-03-03 19:52:24,973:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:24,973:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:24,973:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:24,973:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:24,973:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:24,978:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:24,978:WARNING:  warnings.warn(
2024-03-03 19:52:25,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:25,295:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:25,295:WARNING:
2024-03-03 19:52:25,295:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:25,295:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:25,295:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:25,295:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:25,295:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:25,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:25,299:WARNING:  warnings.warn(
2024-03-03 19:52:25,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:25,588:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:25,588:WARNING:
2024-03-03 19:52:25,588:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:25,588:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:25,588:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:25,588:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:25,588:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:25,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:25,593:WARNING:  warnings.warn(
2024-03-03 19:52:25,888:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:25,888:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:25,888:WARNING:
2024-03-03 19:52:25,888:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:25,888:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:25,889:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:25,889:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:25,889:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:25,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:25,893:WARNING:  warnings.warn(
2024-03-03 19:52:26,198:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:26,199:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:26,199:WARNING:
2024-03-03 19:52:26,199:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:26,199:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:26,199:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:26,199:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:26,199:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:26,203:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:26,203:WARNING:  warnings.warn(
2024-03-03 19:52:26,500:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:26,500:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:26,500:WARNING:
2024-03-03 19:52:26,500:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:26,500:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:26,500:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:26,500:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:26,500:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:26,504:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:26,504:WARNING:  warnings.warn(
2024-03-03 19:52:26,800:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:26,800:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:26,800:WARNING:
2024-03-03 19:52:26,800:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:26,800:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:26,800:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:26,800:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:26,800:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:26,804:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:26,804:WARNING:  warnings.warn(
2024-03-03 19:52:27,102:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:27,102:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:27,102:WARNING:
2024-03-03 19:52:27,102:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:27,102:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:27,102:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:27,102:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:27,102:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:27,106:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:27,106:WARNING:  warnings.warn(
2024-03-03 19:52:27,420:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:27,420:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:27,420:WARNING:
2024-03-03 19:52:27,420:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:27,420:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:27,420:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:27,420:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:27,420:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:27,424:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:27,424:WARNING:  warnings.warn(
2024-03-03 19:52:27,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:27,714:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:27,715:WARNING:
2024-03-03 19:52:27,715:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:27,715:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:27,715:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:27,715:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:27,715:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:27,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:27,719:WARNING:  warnings.warn(
2024-03-03 19:52:28,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:28,015:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:28,015:WARNING:
2024-03-03 19:52:28,015:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:28,015:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:28,015:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:28,015:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:28,015:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:28,019:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:28,019:WARNING:  warnings.warn(
2024-03-03 19:52:28,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:28,311:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:28,311:WARNING:
2024-03-03 19:52:28,311:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:28,311:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:28,311:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:28,311:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:28,311:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:28,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:28,315:WARNING:  warnings.warn(
2024-03-03 19:52:28,598:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:28,598:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:28,598:WARNING:
2024-03-03 19:52:28,598:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:28,598:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:28,598:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:28,598:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:28,598:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:28,603:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:28,603:WARNING:  warnings.warn(
2024-03-03 19:52:28,898:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:28,898:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:28,898:WARNING:
2024-03-03 19:52:28,898:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:28,898:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:28,898:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:28,898:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:28,898:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:28,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:28,902:WARNING:  warnings.warn(
2024-03-03 19:52:29,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:29,202:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:29,202:WARNING:
2024-03-03 19:52:29,202:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:29,202:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:29,202:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:29,202:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:29,202:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:29,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:29,206:WARNING:  warnings.warn(
2024-03-03 19:52:29,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:29,520:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:29,520:WARNING:
2024-03-03 19:52:29,520:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:29,520:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:29,520:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:29,520:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:29,520:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:29,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:29,525:WARNING:  warnings.warn(
2024-03-03 19:52:29,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:29,812:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:29,812:WARNING:
2024-03-03 19:52:29,812:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:29,812:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:29,812:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:29,812:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:29,812:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:29,816:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:29,816:WARNING:  warnings.warn(
2024-03-03 19:52:30,110:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:30,110:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:30,110:WARNING:
2024-03-03 19:52:30,110:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:30,110:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:30,110:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:30,110:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:30,110:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:30,114:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:30,114:WARNING:  warnings.warn(
2024-03-03 19:52:30,404:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:30,404:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:30,404:WARNING:
2024-03-03 19:52:30,404:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:30,404:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:30,404:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:30,404:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:30,404:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:30,407:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:30,407:WARNING:  warnings.warn(
2024-03-03 19:52:30,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:30,705:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:30,705:WARNING:
2024-03-03 19:52:30,705:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:30,705:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:30,706:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:30,706:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:30,706:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:30,712:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:30,712:WARNING:  warnings.warn(
2024-03-03 19:52:30,999:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:30,999:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:30,999:WARNING:
2024-03-03 19:52:30,999:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:30,999:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:30,999:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:30,999:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:30,999:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:31,004:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:31,004:WARNING:  warnings.warn(
2024-03-03 19:52:31,294:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:31,294:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:31,294:WARNING:
2024-03-03 19:52:31,294:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:31,294:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:31,294:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:31,294:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:31,294:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:31,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:31,299:WARNING:  warnings.warn(
2024-03-03 19:52:31,600:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:31,600:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:31,600:WARNING:
2024-03-03 19:52:31,600:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:31,600:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:31,600:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:31,600:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:31,600:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:31,604:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:31,604:WARNING:  warnings.warn(
2024-03-03 19:52:31,907:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:31,907:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:31,908:WARNING:
2024-03-03 19:52:31,908:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:31,908:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:31,908:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:31,908:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:31,908:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:31,911:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:31,911:WARNING:  warnings.warn(
2024-03-03 19:52:32,205:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:32,205:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:32,205:WARNING:
2024-03-03 19:52:32,205:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:32,205:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:32,205:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:32,205:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:32,205:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:32,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:32,209:WARNING:  warnings.warn(
2024-03-03 19:52:32,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:32,528:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:32,528:WARNING:
2024-03-03 19:52:32,528:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:32,528:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:32,528:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:32,528:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:32,528:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:32,534:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:32,536:WARNING:  warnings.warn(
2024-03-03 19:52:32,826:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:32,826:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:32,826:WARNING:
2024-03-03 19:52:32,826:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:32,826:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:32,826:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:32,826:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:32,826:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:32,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:32,830:WARNING:  warnings.warn(
2024-03-03 19:52:33,141:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:33,141:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:33,141:WARNING:
2024-03-03 19:52:33,141:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:33,142:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:33,142:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:33,142:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:33,142:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:33,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:33,146:WARNING:  warnings.warn(
2024-03-03 19:52:33,429:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:33,430:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:33,430:WARNING:
2024-03-03 19:52:33,430:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:33,430:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:33,430:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:33,430:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:33,430:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:33,434:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:33,434:WARNING:  warnings.warn(
2024-03-03 19:52:33,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:33,714:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:33,714:WARNING:
2024-03-03 19:52:33,714:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:33,714:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:33,714:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:33,714:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:33,714:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:33,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:33,719:WARNING:  warnings.warn(
2024-03-03 19:52:34,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:34,074:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:34,074:WARNING:
2024-03-03 19:52:34,074:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:34,074:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:34,074:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:34,074:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:34,074:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:34,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:34,079:WARNING:  warnings.warn(
2024-03-03 19:52:34,623:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:34,623:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:34,623:WARNING:
2024-03-03 19:52:34,623:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:34,623:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:34,623:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:34,623:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:34,623:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:34,629:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:34,630:WARNING:  warnings.warn(
2024-03-03 19:52:35,080:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:35,080:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:35,080:WARNING:
2024-03-03 19:52:35,081:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:35,081:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:35,081:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:35,081:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:35,081:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:35,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:35,086:WARNING:  warnings.warn(
2024-03-03 19:52:35,466:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:35,466:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:35,466:WARNING:
2024-03-03 19:52:35,466:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:35,466:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:35,466:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:35,466:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:35,466:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:35,470:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:35,470:WARNING:  warnings.warn(
2024-03-03 19:52:35,837:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:35,837:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:35,837:WARNING:
2024-03-03 19:52:35,838:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:35,838:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:35,838:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:35,838:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:35,838:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:35,841:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:35,842:WARNING:  warnings.warn(
2024-03-03 19:52:36,241:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:36,242:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:36,242:WARNING:
2024-03-03 19:52:36,242:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:36,242:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:36,242:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:36,242:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:36,242:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:36,246:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:36,246:WARNING:  warnings.warn(
2024-03-03 19:52:36,564:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:36,565:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:36,565:WARNING:
2024-03-03 19:52:36,565:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:36,565:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:36,565:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:36,565:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:36,565:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:36,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:36,569:WARNING:  warnings.warn(
2024-03-03 19:52:36,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:36,866:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:36,866:WARNING:
2024-03-03 19:52:36,866:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:36,866:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:36,866:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:36,866:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:36,866:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:36,870:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:36,870:WARNING:  warnings.warn(
2024-03-03 19:52:37,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:37,215:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:37,215:WARNING:
2024-03-03 19:52:37,215:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:37,215:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:37,215:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:37,215:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:37,215:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:37,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:37,226:WARNING:  warnings.warn(
2024-03-03 19:52:37,512:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:37,512:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:37,512:WARNING:
2024-03-03 19:52:37,512:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:37,512:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:37,512:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:37,512:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:37,513:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:37,516:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:37,516:WARNING:  warnings.warn(
2024-03-03 19:52:37,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:37,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:37,793:WARNING:
2024-03-03 19:52:37,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:37,794:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:37,794:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:37,794:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:37,794:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:37,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:37,797:WARNING:  warnings.warn(
2024-03-03 19:52:38,160:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:38,160:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:38,160:WARNING:
2024-03-03 19:52:38,160:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:38,160:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:38,160:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:38,160:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:38,160:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:38,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:38,164:WARNING:  warnings.warn(
2024-03-03 19:52:38,452:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:38,452:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:38,452:WARNING:
2024-03-03 19:52:38,452:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:38,452:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:38,452:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:38,452:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:38,452:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:38,456:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:38,456:WARNING:  warnings.warn(
2024-03-03 19:52:38,735:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:38,735:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:38,735:WARNING:
2024-03-03 19:52:38,735:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:38,735:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:38,735:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:38,735:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:38,737:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:38,740:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:38,740:WARNING:  warnings.warn(
2024-03-03 19:52:39,080:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:39,080:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:39,080:WARNING:
2024-03-03 19:52:39,080:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:39,080:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:39,080:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:39,080:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:39,080:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:39,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:39,085:WARNING:  warnings.warn(
2024-03-03 19:52:39,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:39,399:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:39,399:WARNING:
2024-03-03 19:52:39,399:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:39,399:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:39,399:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:39,399:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:39,399:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:39,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:39,403:WARNING:  warnings.warn(
2024-03-03 19:52:39,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:39,700:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:39,700:WARNING:
2024-03-03 19:52:39,700:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:39,700:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:39,700:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:39,700:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:39,700:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:39,704:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:39,704:WARNING:  warnings.warn(
2024-03-03 19:52:39,987:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:39,988:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:39,988:WARNING:
2024-03-03 19:52:39,988:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:39,988:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:39,988:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:39,988:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:39,988:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:39,992:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:39,992:WARNING:  warnings.warn(
2024-03-03 19:52:40,303:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:40,303:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:40,303:WARNING:
2024-03-03 19:52:40,303:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:40,303:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:40,303:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:40,304:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:40,304:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:40,307:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:40,307:WARNING:  warnings.warn(
2024-03-03 19:52:40,609:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:40,609:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:40,609:WARNING:
2024-03-03 19:52:40,609:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:40,609:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:40,609:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:40,609:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:40,609:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:40,613:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:40,613:WARNING:  warnings.warn(
2024-03-03 19:52:40,924:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:40,924:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:40,924:WARNING:
2024-03-03 19:52:40,924:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:40,924:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:40,924:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:40,924:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:40,924:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:40,928:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:40,928:WARNING:  warnings.warn(
2024-03-03 19:52:41,234:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:41,234:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:41,234:WARNING:
2024-03-03 19:52:41,234:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:41,235:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:41,235:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:41,235:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:41,235:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:41,239:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:41,239:WARNING:  warnings.warn(
2024-03-03 19:52:41,524:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:41,525:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:41,525:WARNING:
2024-03-03 19:52:41,525:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:41,525:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:41,525:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:41,525:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:41,525:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:41,528:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:41,528:WARNING:  warnings.warn(
2024-03-03 19:52:41,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:41,832:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:41,832:WARNING:
2024-03-03 19:52:41,832:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:41,832:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:41,832:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:41,832:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:41,832:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:41,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:41,836:WARNING:  warnings.warn(
2024-03-03 19:52:42,143:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:42,143:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:42,143:WARNING:
2024-03-03 19:52:42,143:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:42,143:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:42,143:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:42,143:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:42,143:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:42,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:42,148:WARNING:  warnings.warn(
2024-03-03 19:52:42,479:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:42,479:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:42,479:WARNING:
2024-03-03 19:52:42,479:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:42,479:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:42,479:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:42,479:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:42,479:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:42,484:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:42,484:WARNING:  warnings.warn(
2024-03-03 19:52:42,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:42,820:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:42,820:WARNING:
2024-03-03 19:52:42,820:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:42,820:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:42,820:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:42,820:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:42,820:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:42,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:42,827:WARNING:  warnings.warn(
2024-03-03 19:52:43,224:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:43,224:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:43,224:WARNING:
2024-03-03 19:52:43,224:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:43,224:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:43,224:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:43,224:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:43,224:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:43,229:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:43,229:WARNING:  warnings.warn(
2024-03-03 19:52:43,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:43,587:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:43,587:WARNING:
2024-03-03 19:52:43,587:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:43,587:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:43,587:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:43,587:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:43,587:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:43,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:43,593:WARNING:  warnings.warn(
2024-03-03 19:52:44,014:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:44,014:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:44,014:WARNING:
2024-03-03 19:52:44,014:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:44,014:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:44,014:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:44,014:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:44,014:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:44,022:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:44,022:WARNING:  warnings.warn(
2024-03-03 19:52:44,539:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:44,539:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:44,539:WARNING:
2024-03-03 19:52:44,539:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:44,539:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:44,539:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:44,539:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:44,539:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:44,548:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:44,548:WARNING:  warnings.warn(
2024-03-03 19:52:45,130:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:45,130:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:45,130:WARNING:
2024-03-03 19:52:45,130:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:45,130:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:45,130:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:45,130:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:45,130:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:45,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:45,144:WARNING:  warnings.warn(
2024-03-03 19:52:45,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:45,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:45,583:WARNING:
2024-03-03 19:52:45,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:45,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:45,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:45,583:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:45,583:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:45,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:45,587:WARNING:  warnings.warn(
2024-03-03 19:52:45,983:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:45,983:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:45,983:WARNING:
2024-03-03 19:52:45,983:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:45,983:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:45,983:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:45,983:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:45,983:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:45,990:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:45,990:WARNING:  warnings.warn(
2024-03-03 19:52:46,379:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:46,379:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:46,379:WARNING:
2024-03-03 19:52:46,379:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:46,379:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:46,379:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:46,379:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:46,379:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:46,385:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:46,385:WARNING:  warnings.warn(
2024-03-03 19:52:46,807:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:46,807:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:46,807:WARNING:
2024-03-03 19:52:46,808:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:46,808:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:46,808:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:46,808:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:46,808:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:46,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:46,812:WARNING:  warnings.warn(
2024-03-03 19:52:47,140:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:47,140:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:47,140:WARNING:
2024-03-03 19:52:47,140:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:47,140:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:47,140:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:47,140:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:47,140:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:47,145:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:47,145:WARNING:  warnings.warn(
2024-03-03 19:52:47,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:47,505:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:47,505:WARNING:
2024-03-03 19:52:47,505:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:47,505:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:47,505:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:47,505:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:47,505:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:47,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:47,510:WARNING:  warnings.warn(
2024-03-03 19:52:47,850:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:47,850:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:47,850:WARNING:
2024-03-03 19:52:47,850:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:47,850:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:47,851:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:47,851:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:47,851:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:47,855:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:47,855:WARNING:  warnings.warn(
2024-03-03 19:52:48,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:48,190:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:48,190:WARNING:
2024-03-03 19:52:48,190:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:48,190:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:48,190:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:48,190:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:48,190:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:48,194:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:48,195:WARNING:  warnings.warn(
2024-03-03 19:52:48,509:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:48,510:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:48,510:WARNING:
2024-03-03 19:52:48,510:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:48,510:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:48,510:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:48,510:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:48,510:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:48,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:48,514:WARNING:  warnings.warn(
2024-03-03 19:52:48,927:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:48,927:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:48,927:WARNING:
2024-03-03 19:52:48,927:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:48,927:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:48,927:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:48,927:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:48,927:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:48,934:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:48,934:WARNING:  warnings.warn(
2024-03-03 19:52:49,364:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:49,364:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:49,364:WARNING:
2024-03-03 19:52:49,364:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:49,364:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:49,364:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:49,364:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:49,364:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:49,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:49,372:WARNING:  warnings.warn(
2024-03-03 19:52:49,723:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:49,723:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:49,723:WARNING:
2024-03-03 19:52:49,723:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:49,723:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:49,723:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:49,723:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:49,723:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:49,728:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:49,728:WARNING:  warnings.warn(
2024-03-03 19:52:50,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:50,045:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:50,045:WARNING:
2024-03-03 19:52:50,045:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:50,045:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:50,045:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:50,045:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:50,045:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:50,048:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:50,049:WARNING:  warnings.warn(
2024-03-03 19:52:50,362:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:50,362:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:50,362:WARNING:
2024-03-03 19:52:50,362:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:50,362:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:50,362:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:50,362:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:50,362:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:50,366:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:50,366:WARNING:  warnings.warn(
2024-03-03 19:52:50,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:50,664:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:50,664:WARNING:
2024-03-03 19:52:50,664:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:50,665:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:50,665:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:50,665:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:50,665:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:50,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:50,669:WARNING:  warnings.warn(
2024-03-03 19:52:51,076:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:51,076:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:51,076:WARNING:
2024-03-03 19:52:51,076:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:51,076:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:51,076:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:51,076:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:51,076:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:51,081:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:51,081:WARNING:  warnings.warn(
2024-03-03 19:52:51,408:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:51,408:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:51,409:WARNING:
2024-03-03 19:52:51,409:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:51,409:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:51,409:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:51,409:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:51,409:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:51,414:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:51,414:WARNING:  warnings.warn(
2024-03-03 19:52:51,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:51,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:51,766:WARNING:
2024-03-03 19:52:51,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:51,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:51,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:51,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:51,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:51,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:51,770:WARNING:  warnings.warn(
2024-03-03 19:52:52,127:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:52,127:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:52,128:WARNING:
2024-03-03 19:52:52,128:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:52,128:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:52,128:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:52,128:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:52,128:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:52,131:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:52,131:WARNING:  warnings.warn(
2024-03-03 19:52:52,462:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:52,462:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:52,462:WARNING:
2024-03-03 19:52:52,462:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:52,462:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:52,462:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:52,462:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:52,462:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:52,471:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:52,471:WARNING:  warnings.warn(
2024-03-03 19:52:52,820:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:52,820:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:52,820:WARNING:
2024-03-03 19:52:52,820:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:52,820:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:52,820:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:52,820:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:52,820:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:52,824:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:52,824:WARNING:  warnings.warn(
2024-03-03 19:52:53,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:53,169:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:53,169:WARNING:
2024-03-03 19:52:53,169:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:53,169:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:53,169:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:53,169:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:53,169:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:53,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:53,176:WARNING:  warnings.warn(
2024-03-03 19:52:53,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:53,576:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:53,576:WARNING:
2024-03-03 19:52:53,576:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:53,576:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:53,576:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:53,576:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:53,576:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:53,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:53,584:WARNING:  warnings.warn(
2024-03-03 19:52:53,917:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:53,917:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:53,917:WARNING:
2024-03-03 19:52:53,917:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:53,918:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:53,918:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:53,918:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:53,918:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:53,922:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:53,922:WARNING:  warnings.warn(
2024-03-03 19:52:54,252:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:54,252:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:54,252:WARNING:
2024-03-03 19:52:54,252:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:54,253:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:54,253:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:54,253:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:54,253:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:54,256:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:54,256:WARNING:  warnings.warn(
2024-03-03 19:52:54,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:54,584:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:54,584:WARNING:
2024-03-03 19:52:54,584:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:54,584:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:54,584:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:54,584:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:54,584:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:54,589:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:54,589:WARNING:  warnings.warn(
2024-03-03 19:52:54,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:54,898:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:54,898:WARNING:
2024-03-03 19:52:54,898:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:54,898:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:54,898:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:54,898:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:54,898:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:54,903:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:54,903:WARNING:  warnings.warn(
2024-03-03 19:52:55,240:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:55,240:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:55,241:WARNING:
2024-03-03 19:52:55,241:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:55,241:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:55,241:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:55,241:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:55,241:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:55,245:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:55,245:WARNING:  warnings.warn(
2024-03-03 19:52:55,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:55,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:55,583:WARNING:
2024-03-03 19:52:55,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:55,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:55,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:55,583:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:55,583:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:55,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:55,588:WARNING:  warnings.warn(
2024-03-03 19:52:55,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:55,895:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:55,895:WARNING:
2024-03-03 19:52:55,895:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:55,895:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:55,895:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:55,897:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:55,897:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:55,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:55,901:WARNING:  warnings.warn(
2024-03-03 19:52:56,235:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:56,235:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:56,235:WARNING:
2024-03-03 19:52:56,235:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:56,235:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:56,235:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:56,235:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:56,235:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:56,240:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:56,240:WARNING:  warnings.warn(
2024-03-03 19:52:56,560:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:56,560:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:56,560:WARNING:
2024-03-03 19:52:56,560:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:56,560:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:56,560:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:56,560:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:56,560:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:56,564:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:56,564:WARNING:  warnings.warn(
2024-03-03 19:52:56,872:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:56,872:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:56,872:WARNING:
2024-03-03 19:52:56,872:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:56,872:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:56,872:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:56,872:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:56,872:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:56,876:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:56,876:WARNING:  warnings.warn(
2024-03-03 19:52:57,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:57,311:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:57,311:WARNING:
2024-03-03 19:52:57,311:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:57,311:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:57,311:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:57,311:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:57,311:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:57,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:57,316:WARNING:  warnings.warn(
2024-03-03 19:52:57,695:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:57,695:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:57,695:WARNING:
2024-03-03 19:52:57,695:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:57,695:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:57,695:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:57,695:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:57,695:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:57,699:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:57,699:WARNING:  warnings.warn(
2024-03-03 19:52:58,068:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:58,068:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:58,068:WARNING:
2024-03-03 19:52:58,068:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:58,068:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:58,068:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:58,068:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:58,068:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:58,073:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:58,073:WARNING:  warnings.warn(
2024-03-03 19:52:58,524:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:58,524:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:58,524:WARNING:
2024-03-03 19:52:58,525:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:58,525:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:58,525:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:58,525:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:58,525:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:58,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:58,533:WARNING:  warnings.warn(
2024-03-03 19:52:58,935:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:58,935:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:58,935:WARNING:
2024-03-03 19:52:58,935:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:58,935:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:58,935:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:58,935:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:58,935:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:58,940:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:58,940:WARNING:  warnings.warn(
2024-03-03 19:52:59,261:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:59,261:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:59,261:WARNING:
2024-03-03 19:52:59,261:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:59,261:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:59,262:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:59,262:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:59,262:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:59,266:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:59,266:WARNING:  warnings.warn(
2024-03-03 19:52:59,631:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:59,631:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:59,631:WARNING:
2024-03-03 19:52:59,631:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:59,631:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:59,631:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:59,631:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:59,631:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:59,635:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:59,635:WARNING:  warnings.warn(
2024-03-03 19:52:59,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:52:59,959:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:52:59,959:WARNING:
2024-03-03 19:52:59,959:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:52:59,959:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:52:59,959:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:52:59,959:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:52:59,959:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:52:59,963:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:52:59,963:WARNING:  warnings.warn(
2024-03-03 19:53:00,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:00,285:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:00,285:WARNING:
2024-03-03 19:53:00,285:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:00,285:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:00,285:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:00,285:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:00,285:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:00,290:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:00,290:WARNING:  warnings.warn(
2024-03-03 19:53:01,052:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:01,052:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:01,052:WARNING:
2024-03-03 19:53:01,053:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:01,053:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:01,053:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:01,053:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:01,053:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:01,062:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:01,062:WARNING:  warnings.warn(
2024-03-03 19:53:01,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:01,830:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:01,830:WARNING:
2024-03-03 19:53:01,831:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:01,831:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:01,831:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:01,831:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:01,831:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:01,840:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:01,840:WARNING:  warnings.warn(
2024-03-03 19:53:02,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:02,410:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:02,410:WARNING:
2024-03-03 19:53:02,410:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:02,410:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:02,410:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:02,410:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:02,410:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:02,415:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:02,416:WARNING:  warnings.warn(
2024-03-03 19:53:02,911:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:02,911:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:02,911:WARNING:
2024-03-03 19:53:02,911:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:02,911:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:02,912:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:02,912:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:02,912:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:02,917:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:02,917:WARNING:  warnings.warn(
2024-03-03 19:53:03,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:03,410:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:03,410:WARNING:
2024-03-03 19:53:03,410:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:03,410:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:03,411:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:03,411:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:03,411:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:03,418:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:03,418:WARNING:  warnings.warn(
2024-03-03 19:53:04,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:04,040:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:04,040:WARNING:
2024-03-03 19:53:04,040:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:04,040:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:04,040:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:04,040:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:04,040:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:04,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:04,051:WARNING:  warnings.warn(
2024-03-03 19:53:04,633:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:04,633:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:04,633:WARNING:
2024-03-03 19:53:04,633:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:04,633:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:04,633:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:04,633:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:04,633:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:04,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:04,642:WARNING:  warnings.warn(
2024-03-03 19:53:05,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:05,185:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:05,185:WARNING:
2024-03-03 19:53:05,185:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:05,185:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:05,185:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:05,185:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:05,185:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:05,192:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:05,192:WARNING:  warnings.warn(
2024-03-03 19:53:05,706:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:05,706:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:05,706:WARNING:
2024-03-03 19:53:05,706:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:05,706:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:05,706:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:05,706:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:05,706:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:05,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:05,715:WARNING:  warnings.warn(
2024-03-03 19:53:06,152:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:06,152:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:06,152:WARNING:
2024-03-03 19:53:06,152:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:06,152:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:06,152:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:06,152:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:06,152:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:06,158:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:06,158:WARNING:  warnings.warn(
2024-03-03 19:53:06,650:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:06,650:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:06,650:WARNING:
2024-03-03 19:53:06,650:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:06,650:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:06,650:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:06,650:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:06,650:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:06,656:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:06,656:WARNING:  warnings.warn(
2024-03-03 19:53:07,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:07,208:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:07,208:WARNING:
2024-03-03 19:53:07,208:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:07,208:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:07,208:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:07,208:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:07,208:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:07,217:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:07,218:WARNING:  warnings.warn(
2024-03-03 19:53:07,674:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:07,674:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:07,674:WARNING:
2024-03-03 19:53:07,675:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:07,675:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:07,675:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:07,675:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:07,675:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:07,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:07,680:WARNING:  warnings.warn(
2024-03-03 19:53:08,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:08,085:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:08,085:WARNING:
2024-03-03 19:53:08,085:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:08,085:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:08,085:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:08,085:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:08,085:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:08,090:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:08,090:WARNING:  warnings.warn(
2024-03-03 19:53:08,453:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:08,453:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:08,453:WARNING:
2024-03-03 19:53:08,453:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:08,453:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:08,453:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:08,453:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:08,453:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:08,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:08,461:WARNING:  warnings.warn(
2024-03-03 19:53:08,887:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:08,887:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:08,887:WARNING:
2024-03-03 19:53:08,887:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:08,887:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:08,887:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:08,887:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:08,887:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:08,891:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:08,891:WARNING:  warnings.warn(
2024-03-03 19:53:09,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:09,299:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:09,299:WARNING:
2024-03-03 19:53:09,299:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:09,299:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:09,299:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:09,299:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:09,299:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:09,303:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:09,303:WARNING:  warnings.warn(
2024-03-03 19:53:09,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:09,683:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:09,683:WARNING:
2024-03-03 19:53:09,683:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:09,683:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:09,683:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:09,684:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:09,684:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:09,688:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:09,688:WARNING:  warnings.warn(
2024-03-03 19:53:10,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:10,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:10,083:WARNING:
2024-03-03 19:53:10,083:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:10,083:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:10,083:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:10,083:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:10,083:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:10,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:10,088:WARNING:  warnings.warn(
2024-03-03 19:53:10,439:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:10,439:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:10,439:WARNING:
2024-03-03 19:53:10,439:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:10,440:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:10,440:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:10,440:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:10,440:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:10,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:10,444:WARNING:  warnings.warn(
2024-03-03 19:53:10,800:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:10,800:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:10,800:WARNING:
2024-03-03 19:53:10,800:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:10,800:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:10,800:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:10,800:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:10,800:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:10,806:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:10,806:WARNING:  warnings.warn(
2024-03-03 19:53:11,158:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:11,158:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:11,158:WARNING:
2024-03-03 19:53:11,158:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:11,158:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:11,158:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:11,158:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:11,158:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:11,162:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:11,162:WARNING:  warnings.warn(
2024-03-03 19:53:11,498:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:11,498:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:11,498:WARNING:
2024-03-03 19:53:11,498:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:11,498:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:11,498:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:11,498:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:11,498:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:11,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:11,503:WARNING:  warnings.warn(
2024-03-03 19:53:11,873:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:11,874:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:11,874:WARNING:
2024-03-03 19:53:11,874:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:11,874:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:11,874:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:11,874:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:11,874:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:11,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:11,881:WARNING:  warnings.warn(
2024-03-03 19:53:12,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:12,306:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:12,306:WARNING:
2024-03-03 19:53:12,306:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:12,306:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:12,306:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:12,306:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:12,306:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:12,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:12,311:WARNING:  warnings.warn(
2024-03-03 19:53:12,753:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:12,753:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:12,753:WARNING:
2024-03-03 19:53:12,753:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:12,753:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:12,753:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:12,753:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:12,753:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:12,758:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:12,758:WARNING:  warnings.warn(
2024-03-03 19:53:13,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:13,171:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:13,171:WARNING:
2024-03-03 19:53:13,171:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:13,171:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:13,171:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:13,171:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:13,171:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:13,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:13,175:WARNING:  warnings.warn(
2024-03-03 19:53:13,574:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:13,574:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:13,574:WARNING:
2024-03-03 19:53:13,575:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:13,575:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:13,575:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:13,575:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:13,575:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:13,579:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:13,579:WARNING:  warnings.warn(
2024-03-03 19:53:13,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:13,977:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:13,978:WARNING:
2024-03-03 19:53:13,978:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:13,978:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:13,978:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:13,978:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:13,978:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:13,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:13,982:WARNING:  warnings.warn(
2024-03-03 19:53:14,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:14,399:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:14,399:WARNING:
2024-03-03 19:53:14,399:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:14,399:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:14,399:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:14,399:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:14,399:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:14,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:14,403:WARNING:  warnings.warn(
2024-03-03 19:53:14,785:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:14,785:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:14,785:WARNING:
2024-03-03 19:53:14,785:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:14,785:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:14,785:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:14,785:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:14,785:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:14,790:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:14,790:WARNING:  warnings.warn(
2024-03-03 19:53:15,204:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:15,204:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:15,204:WARNING:
2024-03-03 19:53:15,204:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:15,204:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:15,204:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:15,204:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:15,204:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:15,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:15,208:WARNING:  warnings.warn(
2024-03-03 19:53:15,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:15,614:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:15,614:WARNING:
2024-03-03 19:53:15,614:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:15,614:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:15,614:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:15,614:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:15,614:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:15,619:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:15,619:WARNING:  warnings.warn(
2024-03-03 19:53:16,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:16,027:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:16,027:WARNING:
2024-03-03 19:53:16,027:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:16,027:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:16,027:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:16,027:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:16,027:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:16,031:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:16,031:WARNING:  warnings.warn(
2024-03-03 19:53:16,422:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:16,422:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:16,423:WARNING:
2024-03-03 19:53:16,423:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:16,423:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:16,423:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:16,423:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:16,423:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:16,427:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:16,427:WARNING:  warnings.warn(
2024-03-03 19:53:16,817:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:16,817:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:16,817:WARNING:
2024-03-03 19:53:16,817:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:16,817:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:16,817:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:16,817:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:16,817:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:16,822:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:16,822:WARNING:  warnings.warn(
2024-03-03 19:53:17,254:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:17,254:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:17,254:WARNING:
2024-03-03 19:53:17,254:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:17,254:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:17,254:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:17,254:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:17,254:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:17,259:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:17,260:WARNING:  warnings.warn(
2024-03-03 19:53:17,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:17,648:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:17,648:WARNING:
2024-03-03 19:53:17,648:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:17,648:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:17,648:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:17,648:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:17,650:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:17,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:17,654:WARNING:  warnings.warn(
2024-03-03 19:53:18,060:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:18,107:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:18,107:WARNING:
2024-03-03 19:53:18,107:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:18,108:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:18,108:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:18,108:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:18,108:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:18,114:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:18,114:WARNING:  warnings.warn(
2024-03-03 19:53:18,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:18,527:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:18,527:WARNING:
2024-03-03 19:53:18,527:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:18,527:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:18,527:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:18,527:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:18,527:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:18,532:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:18,532:WARNING:  warnings.warn(
2024-03-03 19:53:18,940:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:18,940:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:18,940:WARNING:
2024-03-03 19:53:18,940:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:18,940:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:18,940:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:18,940:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:18,940:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:18,944:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:18,944:WARNING:  warnings.warn(
2024-03-03 19:53:19,359:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:19,359:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:19,359:WARNING:
2024-03-03 19:53:19,359:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:19,359:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:19,359:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:19,359:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:19,359:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:19,364:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:19,364:WARNING:  warnings.warn(
2024-03-03 19:53:19,765:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:19,765:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:19,765:WARNING:
2024-03-03 19:53:19,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:19,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:19,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:19,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:19,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:19,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:19,770:WARNING:  warnings.warn(
2024-03-03 19:53:20,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:20,164:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:20,164:WARNING:
2024-03-03 19:53:20,164:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:20,165:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:20,165:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:20,165:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:20,165:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:20,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:20,169:WARNING:  warnings.warn(
2024-03-03 19:53:20,579:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:20,579:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:20,579:WARNING:
2024-03-03 19:53:20,579:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:20,579:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:20,579:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:20,579:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:20,579:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:20,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:20,584:WARNING:  warnings.warn(
2024-03-03 19:53:21,003:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:21,003:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:21,003:WARNING:
2024-03-03 19:53:21,003:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:21,004:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:21,004:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:21,004:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:21,004:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:21,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:21,008:WARNING:  warnings.warn(
2024-03-03 19:53:21,416:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:21,416:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:21,416:WARNING:
2024-03-03 19:53:21,416:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:21,416:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:21,416:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:21,416:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:21,416:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:21,420:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:21,420:WARNING:  warnings.warn(
2024-03-03 19:53:21,831:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:21,832:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:21,832:WARNING:
2024-03-03 19:53:21,832:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:21,832:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:21,832:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:21,832:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:21,832:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:21,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:21,836:WARNING:  warnings.warn(
2024-03-03 19:53:22,245:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:22,245:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:22,245:WARNING:
2024-03-03 19:53:22,245:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:22,245:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:22,245:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:22,245:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:22,245:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:22,248:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:22,248:WARNING:  warnings.warn(
2024-03-03 19:53:22,646:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:22,646:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:22,646:WARNING:
2024-03-03 19:53:22,646:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:22,646:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:22,646:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:22,646:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:22,646:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:22,651:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:22,651:WARNING:  warnings.warn(
2024-03-03 19:53:23,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:23,042:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:23,042:WARNING:
2024-03-03 19:53:23,042:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:23,042:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:23,042:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:23,042:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:23,042:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:23,046:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:23,046:WARNING:  warnings.warn(
2024-03-03 19:53:23,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:23,440:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:23,440:WARNING:
2024-03-03 19:53:23,440:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:23,440:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:23,440:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:23,440:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:23,440:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:23,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:23,444:WARNING:  warnings.warn(
2024-03-03 19:53:23,847:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:23,847:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:23,847:WARNING:
2024-03-03 19:53:23,847:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:23,847:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:23,847:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:23,847:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:23,847:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:23,851:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:23,851:WARNING:  warnings.warn(
2024-03-03 19:53:24,258:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:24,258:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:24,258:WARNING:
2024-03-03 19:53:24,258:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:24,258:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:24,258:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:24,258:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:24,258:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:24,263:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:24,263:WARNING:  warnings.warn(
2024-03-03 19:53:24,658:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:24,658:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:24,658:WARNING:
2024-03-03 19:53:24,658:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:24,658:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:24,658:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:24,658:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:24,658:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:24,662:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:24,662:WARNING:  warnings.warn(
2024-03-03 19:53:25,061:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:25,061:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:25,061:WARNING:
2024-03-03 19:53:25,061:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:25,061:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:25,061:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:25,061:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:25,061:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:25,065:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:25,065:WARNING:  warnings.warn(
2024-03-03 19:53:25,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:25,469:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:25,469:WARNING:
2024-03-03 19:53:25,469:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:25,469:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:25,469:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:25,469:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:25,469:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:25,473:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:25,473:WARNING:  warnings.warn(
2024-03-03 19:53:25,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:25,897:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:25,897:WARNING:
2024-03-03 19:53:25,897:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:25,897:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:25,897:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:25,897:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:25,898:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:25,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:25,902:WARNING:  warnings.warn(
2024-03-03 19:53:26,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:26,304:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:26,304:WARNING:
2024-03-03 19:53:26,304:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:26,304:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:26,304:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:26,304:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:26,304:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:26,308:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:26,308:WARNING:  warnings.warn(
2024-03-03 19:53:26,729:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:26,729:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:26,729:WARNING:
2024-03-03 19:53:26,729:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:26,729:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:26,729:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:26,729:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:26,729:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:26,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:26,733:WARNING:  warnings.warn(
2024-03-03 19:53:27,133:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:27,133:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:27,133:WARNING:
2024-03-03 19:53:27,133:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:27,133:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:27,133:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:27,133:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:27,133:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:27,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:27,137:WARNING:  warnings.warn(
2024-03-03 19:53:27,543:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:27,544:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:27,544:WARNING:
2024-03-03 19:53:27,544:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:27,544:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:27,544:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:27,544:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:27,544:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:27,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:27,547:WARNING:  warnings.warn(
2024-03-03 19:53:27,933:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:27,933:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:27,933:WARNING:
2024-03-03 19:53:27,934:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:27,934:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:27,934:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:27,934:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:27,934:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:27,937:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:27,937:WARNING:  warnings.warn(
2024-03-03 19:53:28,354:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:28,354:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:28,355:WARNING:
2024-03-03 19:53:28,355:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:28,355:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:28,355:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:28,355:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:28,355:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:28,359:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:28,359:WARNING:  warnings.warn(
2024-03-03 19:53:28,761:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:28,761:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:28,761:WARNING:
2024-03-03 19:53:28,761:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:28,761:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:28,761:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:28,761:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:28,761:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:28,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:28,766:WARNING:  warnings.warn(
2024-03-03 19:53:29,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:29,177:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:29,177:WARNING:
2024-03-03 19:53:29,177:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:29,177:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:29,177:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:29,177:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:29,177:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:29,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:29,181:WARNING:  warnings.warn(
2024-03-03 19:53:29,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:29,584:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:29,585:WARNING:
2024-03-03 19:53:29,585:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:29,585:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:29,585:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:29,585:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:29,585:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:29,589:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:29,589:WARNING:  warnings.warn(
2024-03-03 19:53:29,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:29,979:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:29,980:WARNING:
2024-03-03 19:53:29,980:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:29,980:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:29,980:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:29,980:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:29,980:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:29,984:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:29,984:WARNING:  warnings.warn(
2024-03-03 19:53:30,391:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:30,391:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:30,391:WARNING:
2024-03-03 19:53:30,391:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:30,391:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:30,391:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:30,391:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:30,391:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:30,396:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:30,396:WARNING:  warnings.warn(
2024-03-03 19:53:30,796:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:30,797:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:30,797:WARNING:
2024-03-03 19:53:30,797:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:30,797:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:30,797:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:30,797:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:30,797:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:30,800:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:30,800:WARNING:  warnings.warn(
2024-03-03 19:53:31,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:31,180:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:31,180:WARNING:
2024-03-03 19:53:31,180:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:31,180:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:31,180:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:31,180:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:31,180:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:31,184:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:31,185:WARNING:  warnings.warn(
2024-03-03 19:53:31,582:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:31,582:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:31,582:WARNING:
2024-03-03 19:53:31,582:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:31,582:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:31,582:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:31,582:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:31,582:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:31,586:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:31,586:WARNING:  warnings.warn(
2024-03-03 19:53:32,007:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:32,007:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:32,007:WARNING:
2024-03-03 19:53:32,007:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:32,007:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:32,007:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:32,007:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:32,007:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:32,011:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:32,012:WARNING:  warnings.warn(
2024-03-03 19:53:32,419:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:32,419:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:32,419:WARNING:
2024-03-03 19:53:32,420:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:32,420:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:32,420:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:32,420:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:32,420:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:32,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:32,424:WARNING:  warnings.warn(
2024-03-03 19:53:32,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:32,828:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:32,828:WARNING:
2024-03-03 19:53:32,828:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:32,828:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:32,828:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:32,828:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:32,828:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:32,832:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:32,832:WARNING:  warnings.warn(
2024-03-03 19:53:33,227:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:33,228:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:33,228:WARNING:
2024-03-03 19:53:33,228:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:33,228:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:33,228:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:33,228:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:33,228:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:33,232:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:33,232:WARNING:  warnings.warn(
2024-03-03 19:53:33,628:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:33,628:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:33,628:WARNING:
2024-03-03 19:53:33,628:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:33,628:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:33,628:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:33,628:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:33,628:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:33,633:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:33,633:WARNING:  warnings.warn(
2024-03-03 19:53:34,055:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:34,055:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:34,055:WARNING:
2024-03-03 19:53:34,055:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:34,055:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:34,055:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:34,055:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:34,055:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:34,059:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:34,059:WARNING:  warnings.warn(
2024-03-03 19:53:34,457:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:34,463:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:34,463:WARNING:
2024-03-03 19:53:34,463:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:34,463:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:34,463:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:34,463:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:34,463:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:34,468:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:34,468:WARNING:  warnings.warn(
2024-03-03 19:53:34,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:34,893:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:34,893:WARNING:
2024-03-03 19:53:34,893:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:34,893:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:34,893:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:34,893:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:34,893:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:34,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:34,897:WARNING:  warnings.warn(
2024-03-03 19:53:35,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:35,306:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:35,306:WARNING:
2024-03-03 19:53:35,306:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:35,306:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:35,306:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:35,306:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:35,306:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:35,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:35,311:WARNING:  warnings.warn(
2024-03-03 19:53:35,717:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:35,717:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:35,717:WARNING:
2024-03-03 19:53:35,717:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:35,717:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:35,717:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:35,717:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:35,717:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:35,721:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:35,721:WARNING:  warnings.warn(
2024-03-03 19:53:36,107:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:36,107:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:36,107:WARNING:
2024-03-03 19:53:36,107:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:36,107:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:36,107:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:36,107:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:36,107:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:36,111:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:36,111:WARNING:  warnings.warn(
2024-03-03 19:53:36,499:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:36,499:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:36,500:WARNING:
2024-03-03 19:53:36,500:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:36,500:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:36,500:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:36,500:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:36,500:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:36,504:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:36,505:WARNING:  warnings.warn(
2024-03-03 19:53:36,920:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:36,920:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:36,920:WARNING:
2024-03-03 19:53:36,920:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:36,920:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:36,920:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:36,920:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:36,920:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:36,924:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:36,924:WARNING:  warnings.warn(
2024-03-03 19:53:37,336:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:37,336:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:37,336:WARNING:
2024-03-03 19:53:37,336:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:37,336:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:37,336:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:37,336:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:37,336:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:37,341:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:37,341:WARNING:  warnings.warn(
2024-03-03 19:53:37,728:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:37,728:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:37,728:WARNING:
2024-03-03 19:53:37,728:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:37,728:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:37,728:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:37,728:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:37,728:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:37,733:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:37,733:WARNING:  warnings.warn(
2024-03-03 19:53:38,138:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:38,138:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:38,139:WARNING:
2024-03-03 19:53:38,139:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:38,139:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:38,139:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:38,139:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:38,139:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:38,142:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:38,142:WARNING:  warnings.warn(
2024-03-03 19:53:38,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:38,555:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:38,555:WARNING:
2024-03-03 19:53:38,555:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:38,555:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:38,555:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:38,556:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:38,556:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:38,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:38,570:WARNING:  warnings.warn(
2024-03-03 19:53:39,012:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:39,012:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:39,012:WARNING:
2024-03-03 19:53:39,012:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:39,014:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:39,014:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:39,014:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:39,014:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:39,017:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:39,017:WARNING:  warnings.warn(
2024-03-03 19:53:39,406:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:39,406:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:39,406:WARNING:
2024-03-03 19:53:39,406:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:39,406:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:39,406:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:39,406:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:39,406:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:39,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:39,410:WARNING:  warnings.warn(
2024-03-03 19:53:39,795:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:39,795:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:39,795:WARNING:
2024-03-03 19:53:39,795:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:39,795:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:39,795:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:39,795:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:39,795:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:39,799:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:39,799:WARNING:  warnings.warn(
2024-03-03 19:53:40,189:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:40,189:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:40,189:WARNING:
2024-03-03 19:53:40,189:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:40,189:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:40,189:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:40,189:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:40,189:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:40,194:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:40,194:WARNING:  warnings.warn(
2024-03-03 19:53:40,596:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:40,596:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:40,596:WARNING:
2024-03-03 19:53:40,596:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:40,596:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:40,596:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:40,596:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:40,596:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:40,600:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:40,601:WARNING:  warnings.warn(
2024-03-03 19:53:41,003:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:41,003:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:41,003:WARNING:
2024-03-03 19:53:41,003:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:41,003:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:41,003:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:41,003:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:41,003:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:41,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:41,008:WARNING:  warnings.warn(
2024-03-03 19:53:41,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:41,405:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:41,405:WARNING:
2024-03-03 19:53:41,405:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:41,405:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:41,405:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:41,405:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:41,405:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:41,409:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:41,409:WARNING:  warnings.warn(
2024-03-03 19:53:41,807:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:41,807:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:41,807:WARNING:
2024-03-03 19:53:41,807:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:41,807:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:41,807:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:41,807:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:41,807:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:41,811:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:41,811:WARNING:  warnings.warn(
2024-03-03 19:53:42,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:42,172:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:42,172:WARNING:
2024-03-03 19:53:42,172:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:42,172:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:42,172:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:42,172:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:42,172:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:42,177:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:42,177:WARNING:  warnings.warn(
2024-03-03 19:53:42,579:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:42,579:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:42,579:WARNING:
2024-03-03 19:53:42,579:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:42,579:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:42,579:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:42,579:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:42,579:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:42,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:42,583:WARNING:  warnings.warn(
2024-03-03 19:53:42,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:42,982:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:42,982:WARNING:
2024-03-03 19:53:42,982:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:42,982:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:42,982:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:42,982:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:42,982:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:42,986:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:42,986:WARNING:  warnings.warn(
2024-03-03 19:53:43,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:43,376:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:43,376:WARNING:
2024-03-03 19:53:43,376:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:43,376:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:43,376:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:43,376:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:43,377:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:43,380:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:43,380:WARNING:  warnings.warn(
2024-03-03 19:53:43,769:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:43,769:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:43,769:WARNING:
2024-03-03 19:53:43,769:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:43,769:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:43,769:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:43,769:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:43,769:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:43,773:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:43,773:WARNING:  warnings.warn(
2024-03-03 19:53:44,173:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:44,173:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:44,173:WARNING:
2024-03-03 19:53:44,175:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:44,175:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:44,175:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:44,175:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:44,175:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:44,178:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:44,178:WARNING:  warnings.warn(
2024-03-03 19:53:44,565:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:44,565:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:44,565:WARNING:
2024-03-03 19:53:44,565:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:44,565:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:44,565:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:44,565:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:44,565:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:44,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:44,569:WARNING:  warnings.warn(
2024-03-03 19:53:44,943:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:44,943:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:44,943:WARNING:
2024-03-03 19:53:44,943:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:44,943:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:44,943:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:44,943:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:44,943:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:44,947:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:44,947:WARNING:  warnings.warn(
2024-03-03 19:53:45,345:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:45,362:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:45,362:WARNING:
2024-03-03 19:53:45,362:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:45,362:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:45,363:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:45,363:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:45,363:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:45,375:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:45,375:WARNING:  warnings.warn(
2024-03-03 19:53:45,772:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:45,773:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:45,773:WARNING:
2024-03-03 19:53:45,773:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:45,773:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:45,773:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:45,773:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:45,773:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:45,777:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:45,777:WARNING:  warnings.warn(
2024-03-03 19:53:46,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:46,176:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:46,176:WARNING:
2024-03-03 19:53:46,176:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:46,176:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:46,176:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:46,176:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:46,176:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:46,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:46,180:WARNING:  warnings.warn(
2024-03-03 19:53:46,564:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:46,564:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:46,564:WARNING:
2024-03-03 19:53:46,564:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:46,564:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:46,564:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:46,564:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:46,564:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:46,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:46,569:WARNING:  warnings.warn(
2024-03-03 19:53:46,973:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:46,973:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:46,973:WARNING:
2024-03-03 19:53:46,973:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:46,973:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:46,973:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:46,973:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:46,973:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:46,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:46,977:WARNING:  warnings.warn(
2024-03-03 19:53:47,369:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:47,369:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:47,369:WARNING:
2024-03-03 19:53:47,369:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:47,369:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:47,369:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:47,369:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:47,369:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:47,373:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:47,373:WARNING:  warnings.warn(
2024-03-03 19:53:47,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:47,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:47,766:WARNING:
2024-03-03 19:53:47,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:47,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:47,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:47,767:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:47,767:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:47,771:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:47,771:WARNING:  warnings.warn(
2024-03-03 19:53:48,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:48,157:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:48,157:WARNING:
2024-03-03 19:53:48,157:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:48,157:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:48,157:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:48,157:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:48,157:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:48,161:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:48,161:WARNING:  warnings.warn(
2024-03-03 19:53:48,529:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:48,529:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:48,529:WARNING:
2024-03-03 19:53:48,529:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:48,529:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:48,529:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:48,529:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:48,529:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:48,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:48,533:WARNING:  warnings.warn(
2024-03-03 19:53:48,879:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:48,879:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:48,879:WARNING:
2024-03-03 19:53:48,879:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:48,879:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:48,879:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:48,879:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:48,879:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:48,884:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:48,884:WARNING:  warnings.warn(
2024-03-03 19:53:49,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:49,276:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:49,276:WARNING:
2024-03-03 19:53:49,276:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:49,276:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:49,276:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:49,276:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:49,276:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:49,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:49,281:WARNING:  warnings.warn(
2024-03-03 19:53:49,639:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:49,639:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:49,639:WARNING:
2024-03-03 19:53:49,639:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:49,639:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:49,639:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:49,639:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:49,639:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:49,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:49,644:WARNING:  warnings.warn(
2024-03-03 19:53:50,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:50,074:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:50,074:WARNING:
2024-03-03 19:53:50,075:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:50,075:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:50,075:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:50,075:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:50,075:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:50,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:50,079:WARNING:  warnings.warn(
2024-03-03 19:53:50,455:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:50,455:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:50,455:WARNING:
2024-03-03 19:53:50,455:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:50,455:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:50,455:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:50,455:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:50,455:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:50,459:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:50,459:WARNING:  warnings.warn(
2024-03-03 19:53:50,811:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:50,819:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:50,819:WARNING:
2024-03-03 19:53:50,819:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:50,819:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:50,819:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:50,819:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:50,820:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:50,830:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:50,831:WARNING:  warnings.warn(
2024-03-03 19:53:51,245:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:51,245:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:51,245:WARNING:
2024-03-03 19:53:51,245:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:51,245:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:51,245:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:51,245:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:51,245:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:51,250:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:51,250:WARNING:  warnings.warn(
2024-03-03 19:53:51,608:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:51,608:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:51,608:WARNING:
2024-03-03 19:53:51,608:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:51,608:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:51,608:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:51,608:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:51,609:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:51,613:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:51,613:WARNING:  warnings.warn(
2024-03-03 19:53:52,001:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:52,001:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:52,001:WARNING:
2024-03-03 19:53:52,001:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:52,001:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:52,001:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:52,001:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:52,001:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:52,006:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:52,006:WARNING:  warnings.warn(
2024-03-03 19:53:52,379:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:52,379:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:52,379:WARNING:
2024-03-03 19:53:52,379:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:52,379:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:52,379:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:52,379:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:52,379:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:52,384:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:52,384:WARNING:  warnings.warn(
2024-03-03 19:53:52,748:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:52,748:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:52,748:WARNING:
2024-03-03 19:53:52,748:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:52,748:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:52,749:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:52,749:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:52,749:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:52,753:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:52,753:WARNING:  warnings.warn(
2024-03-03 19:53:53,113:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:53,113:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:53,113:WARNING:
2024-03-03 19:53:53,113:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:53,113:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:53,113:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:53,113:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:53,113:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:53,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:53,117:WARNING:  warnings.warn(
2024-03-03 19:53:53,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:53,514:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:53,514:WARNING:
2024-03-03 19:53:53,514:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:53,514:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:53,514:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:53,514:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:53,514:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:53,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:53,518:WARNING:  warnings.warn(
2024-03-03 19:53:53,886:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:53,886:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:53,886:WARNING:
2024-03-03 19:53:53,886:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:53,886:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:53,886:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:53,886:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:53,886:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:53,890:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:53,890:WARNING:  warnings.warn(
2024-03-03 19:53:54,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:54,280:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:54,280:WARNING:
2024-03-03 19:53:54,280:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:54,280:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:54,280:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:54,280:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:54,280:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:54,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:54,284:WARNING:  warnings.warn(
2024-03-03 19:53:54,678:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:54,678:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:54,678:WARNING:
2024-03-03 19:53:54,678:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:54,678:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:54,678:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:54,678:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:54,678:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:54,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:54,683:WARNING:  warnings.warn(
2024-03-03 19:53:55,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:55,086:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:55,086:WARNING:
2024-03-03 19:53:55,086:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:55,086:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:55,086:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:55,086:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:55,086:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:55,090:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:55,090:WARNING:  warnings.warn(
2024-03-03 19:53:55,460:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:55,461:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:55,461:WARNING:
2024-03-03 19:53:55,461:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:55,461:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:55,461:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:55,461:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:55,461:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:55,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:55,465:WARNING:  warnings.warn(
2024-03-03 19:53:55,809:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:55,809:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:55,809:WARNING:
2024-03-03 19:53:55,809:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:55,809:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:55,809:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:55,809:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:55,809:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:55,814:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:55,814:WARNING:  warnings.warn(
2024-03-03 19:53:56,209:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:56,269:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:56,269:WARNING:
2024-03-03 19:53:56,269:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:56,269:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:56,269:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:56,269:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:56,269:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:56,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:56,274:WARNING:  warnings.warn(
2024-03-03 19:53:56,660:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:56,660:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:56,660:WARNING:
2024-03-03 19:53:56,660:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:56,660:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:56,660:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:56,660:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:56,660:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:56,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:56,665:WARNING:  warnings.warn(
2024-03-03 19:53:57,029:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:57,029:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:57,029:WARNING:
2024-03-03 19:53:57,029:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:57,029:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:57,029:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:57,029:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:57,029:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:57,033:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:57,034:WARNING:  warnings.warn(
2024-03-03 19:53:57,418:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:57,419:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:57,419:WARNING:
2024-03-03 19:53:57,419:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:57,419:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:57,419:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:57,419:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:57,419:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:57,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:57,423:WARNING:  warnings.warn(
2024-03-03 19:53:57,798:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:57,798:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:57,798:WARNING:
2024-03-03 19:53:57,798:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:57,798:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:57,798:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:57,798:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:57,798:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:57,802:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:57,802:WARNING:  warnings.warn(
2024-03-03 19:53:58,192:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:58,192:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:58,192:WARNING:
2024-03-03 19:53:58,192:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:58,192:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:58,192:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:58,192:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:58,192:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:58,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:58,196:WARNING:  warnings.warn(
2024-03-03 19:53:58,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:58,588:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:58,588:WARNING:
2024-03-03 19:53:58,588:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:58,588:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:58,588:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:58,588:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:58,588:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:58,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:58,593:WARNING:  warnings.warn(
2024-03-03 19:53:58,977:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:59,000:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:59,000:WARNING:
2024-03-03 19:53:59,001:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:59,001:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:59,001:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:59,001:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:59,001:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:59,007:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:59,007:WARNING:  warnings.warn(
2024-03-03 19:53:59,389:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:59,389:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:59,389:WARNING:
2024-03-03 19:53:59,389:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:59,389:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:59,389:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:59,389:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:59,389:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:59,394:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:59,394:WARNING:  warnings.warn(
2024-03-03 19:53:59,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:53:59,763:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:53:59,763:WARNING:
2024-03-03 19:53:59,763:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:53:59,763:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:53:59,763:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:53:59,763:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:53:59,763:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:53:59,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:53:59,767:WARNING:  warnings.warn(
2024-03-03 19:54:00,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:00,144:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:00,144:WARNING:
2024-03-03 19:54:00,144:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:00,144:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:00,144:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:00,144:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:00,144:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:00,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:00,148:WARNING:  warnings.warn(
2024-03-03 19:54:00,536:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:00,536:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:00,536:WARNING:
2024-03-03 19:54:00,536:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:00,536:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:00,536:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:00,536:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:00,536:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:00,540:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:00,540:WARNING:  warnings.warn(
2024-03-03 19:54:00,919:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:00,919:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:00,919:WARNING:
2024-03-03 19:54:00,919:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:00,919:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:00,919:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:00,919:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:00,919:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:00,924:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:00,924:WARNING:  warnings.warn(
2024-03-03 19:54:01,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:01,321:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:01,321:WARNING:
2024-03-03 19:54:01,321:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:01,321:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:01,321:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:01,321:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:01,321:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:01,325:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:01,325:WARNING:  warnings.warn(
2024-03-03 19:54:01,713:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:01,713:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:01,713:WARNING:
2024-03-03 19:54:01,714:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:01,714:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:01,714:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:01,714:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:01,714:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:01,718:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:01,718:WARNING:  warnings.warn(
2024-03-03 19:54:02,154:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:02,155:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:02,155:WARNING:
2024-03-03 19:54:02,155:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:02,155:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:02,155:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:02,155:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:02,155:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:02,160:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:02,160:WARNING:  warnings.warn(
2024-03-03 19:54:02,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:02,514:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:02,514:WARNING:
2024-03-03 19:54:02,514:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:02,514:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:02,514:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:02,514:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:02,514:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:02,519:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:02,519:WARNING:  warnings.warn(
2024-03-03 19:54:02,975:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:02,975:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:02,975:WARNING:
2024-03-03 19:54:02,975:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:02,975:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:02,975:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:02,975:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:02,975:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:02,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:02,979:WARNING:  warnings.warn(
2024-03-03 19:54:03,343:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:03,343:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:03,343:WARNING:
2024-03-03 19:54:03,343:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:03,343:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:03,343:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:03,343:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:03,343:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:03,347:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:03,347:WARNING:  warnings.warn(
2024-03-03 19:54:03,724:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:03,724:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:03,724:WARNING:
2024-03-03 19:54:03,724:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:03,724:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:03,724:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:03,724:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:03,724:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:03,728:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:03,728:WARNING:  warnings.warn(
2024-03-03 19:54:04,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:04,097:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:04,097:WARNING:
2024-03-03 19:54:04,097:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:04,097:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:04,097:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:04,097:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:04,097:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:04,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:04,102:WARNING:  warnings.warn(
2024-03-03 19:54:04,472:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:04,472:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:04,472:WARNING:
2024-03-03 19:54:04,472:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:04,472:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:04,472:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:04,472:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:04,472:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:04,476:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:04,476:WARNING:  warnings.warn(
2024-03-03 19:54:04,841:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:04,841:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:04,841:WARNING:
2024-03-03 19:54:04,841:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:04,841:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:04,841:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:04,841:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:04,841:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:04,846:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:04,847:WARNING:  warnings.warn(
2024-03-03 19:54:05,229:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:05,229:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:05,229:WARNING:
2024-03-03 19:54:05,229:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:05,229:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:05,229:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:05,230:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:05,230:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:05,234:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:05,234:WARNING:  warnings.warn(
2024-03-03 19:54:05,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:05,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:05,583:WARNING:
2024-03-03 19:54:05,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:05,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:05,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:05,583:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:05,583:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:05,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:05,587:WARNING:  warnings.warn(
2024-03-03 19:54:05,938:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:05,938:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:05,938:WARNING:
2024-03-03 19:54:05,938:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:05,938:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:05,938:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:05,938:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:05,938:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:05,942:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:05,942:WARNING:  warnings.warn(
2024-03-03 19:54:06,307:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:06,307:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:06,307:WARNING:
2024-03-03 19:54:06,307:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:06,307:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:06,307:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:06,307:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:06,307:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:06,311:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:06,311:WARNING:  warnings.warn(
2024-03-03 19:54:06,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:06,673:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:06,673:WARNING:
2024-03-03 19:54:06,673:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:06,673:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:06,673:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:06,673:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:06,673:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:06,677:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:06,677:WARNING:  warnings.warn(
2024-03-03 19:54:07,053:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:07,053:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:07,053:WARNING:
2024-03-03 19:54:07,053:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:07,053:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:07,053:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:07,053:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:07,053:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:07,057:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:07,057:WARNING:  warnings.warn(
2024-03-03 19:54:07,425:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:07,425:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:07,426:WARNING:
2024-03-03 19:54:07,426:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:07,426:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:07,426:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:07,426:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:07,426:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:07,430:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:07,430:WARNING:  warnings.warn(
2024-03-03 19:54:07,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:07,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:07,793:WARNING:
2024-03-03 19:54:07,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:07,793:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:07,793:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:07,793:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:07,793:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:07,798:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:07,798:WARNING:  warnings.warn(
2024-03-03 19:54:08,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:08,169:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:08,169:WARNING:
2024-03-03 19:54:08,169:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:08,169:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:08,169:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:08,169:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:08,169:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:08,174:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:08,174:WARNING:  warnings.warn(
2024-03-03 19:54:08,528:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:08,548:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:08,548:WARNING:
2024-03-03 19:54:08,548:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:08,548:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:08,548:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:08,548:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:08,548:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:08,553:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:08,554:WARNING:  warnings.warn(
2024-03-03 19:54:08,910:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:08,910:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:08,910:WARNING:
2024-03-03 19:54:08,910:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:08,910:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:08,910:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:08,910:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:08,910:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:08,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:08,915:WARNING:  warnings.warn(
2024-03-03 19:54:09,317:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:09,318:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:09,318:WARNING:
2024-03-03 19:54:09,318:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:09,318:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:09,318:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:09,318:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:09,318:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:09,322:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:09,322:WARNING:  warnings.warn(
2024-03-03 19:54:09,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:09,657:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:09,657:WARNING:
2024-03-03 19:54:09,658:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:09,658:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:09,658:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:09,658:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:09,658:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:09,662:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:09,662:WARNING:  warnings.warn(
2024-03-03 19:54:10,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:10,049:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:10,049:WARNING:
2024-03-03 19:54:10,049:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:10,049:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:10,049:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:10,049:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:10,049:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:10,052:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:10,052:WARNING:  warnings.warn(
2024-03-03 19:54:10,435:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:10,435:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:10,435:WARNING:
2024-03-03 19:54:10,436:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:10,436:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:10,436:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:10,436:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:10,436:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:10,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:10,440:WARNING:  warnings.warn(
2024-03-03 19:54:10,789:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:10,789:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:10,789:WARNING:
2024-03-03 19:54:10,789:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:10,789:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:10,789:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:10,789:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:10,789:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:10,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:10,793:WARNING:  warnings.warn(
2024-03-03 19:54:11,194:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:11,194:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:11,194:WARNING:
2024-03-03 19:54:11,194:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:11,194:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:11,194:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:11,195:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:11,195:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:11,199:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:11,199:WARNING:  warnings.warn(
2024-03-03 19:54:11,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:11,571:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:11,571:WARNING:
2024-03-03 19:54:11,571:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:11,571:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:11,571:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:11,571:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:11,571:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:11,575:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:11,575:WARNING:  warnings.warn(
2024-03-03 19:54:11,923:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:11,923:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:11,923:WARNING:
2024-03-03 19:54:11,923:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:11,924:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:11,924:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:11,924:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:11,924:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:11,927:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:11,928:WARNING:  warnings.warn(
2024-03-03 19:54:12,291:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:12,291:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:12,291:WARNING:
2024-03-03 19:54:12,291:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:12,291:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:12,291:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:12,291:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:12,291:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:12,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:12,295:WARNING:  warnings.warn(
2024-03-03 19:54:12,643:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:12,643:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:12,643:WARNING:
2024-03-03 19:54:12,643:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:12,643:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:12,643:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:12,643:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:12,643:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:12,647:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:12,647:WARNING:  warnings.warn(
2024-03-03 19:54:13,021:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:13,021:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:13,021:WARNING:
2024-03-03 19:54:13,023:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:13,023:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:13,023:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:13,023:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:13,023:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:13,026:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:13,026:WARNING:  warnings.warn(
2024-03-03 19:54:13,396:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:13,396:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:13,396:WARNING:
2024-03-03 19:54:13,396:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:13,396:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:13,396:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:13,396:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:13,396:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:13,401:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:13,401:WARNING:  warnings.warn(
2024-03-03 19:54:13,787:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:13,788:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:13,788:WARNING:
2024-03-03 19:54:13,788:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:13,788:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:13,788:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:13,788:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:13,788:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:13,791:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:13,792:WARNING:  warnings.warn(
2024-03-03 19:54:14,172:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:14,172:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:14,172:WARNING:
2024-03-03 19:54:14,172:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:14,172:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:14,172:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:14,172:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:14,172:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:14,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:14,176:WARNING:  warnings.warn(
2024-03-03 19:54:14,545:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:14,545:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:14,545:WARNING:
2024-03-03 19:54:14,545:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:14,545:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:14,545:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:14,545:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:14,545:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:14,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:14,549:WARNING:  warnings.warn(
2024-03-03 19:54:14,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:14,910:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:14,910:WARNING:
2024-03-03 19:54:14,910:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:14,910:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:14,910:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:14,910:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:14,910:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:14,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:14,914:WARNING:  warnings.warn(
2024-03-03 19:54:15,261:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:15,261:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:15,261:WARNING:
2024-03-03 19:54:15,261:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:15,261:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:15,261:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:15,261:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:15,261:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:15,266:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:15,266:WARNING:  warnings.warn(
2024-03-03 19:54:15,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:15,648:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:15,648:WARNING:
2024-03-03 19:54:15,648:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:15,648:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:15,649:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:15,649:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:15,649:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:15,653:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:15,653:WARNING:  warnings.warn(
2024-03-03 19:54:16,032:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:16,032:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:16,032:WARNING:
2024-03-03 19:54:16,032:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:16,032:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:16,032:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:16,034:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:16,034:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:16,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:16,037:WARNING:  warnings.warn(
2024-03-03 19:54:16,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:16,397:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:16,397:WARNING:
2024-03-03 19:54:16,397:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:16,397:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:16,397:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:16,397:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:16,397:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:16,401:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:16,401:WARNING:  warnings.warn(
2024-03-03 19:54:16,768:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:16,768:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:16,768:WARNING:
2024-03-03 19:54:16,768:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:16,768:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:16,768:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:16,769:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:16,769:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:16,773:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:16,773:WARNING:  warnings.warn(
2024-03-03 19:54:17,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:17,146:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:17,146:WARNING:
2024-03-03 19:54:17,146:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:17,146:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:17,146:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:17,146:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:17,146:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:17,150:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:17,150:WARNING:  warnings.warn(
2024-03-03 19:54:17,492:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:17,492:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:17,492:WARNING:
2024-03-03 19:54:17,492:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:17,492:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:17,492:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:17,492:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:17,492:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:17,496:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:17,496:WARNING:  warnings.warn(
2024-03-03 19:54:17,862:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:17,862:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:17,862:WARNING:
2024-03-03 19:54:17,862:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:17,862:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:17,862:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:17,862:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:17,862:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:17,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:17,866:WARNING:  warnings.warn(
2024-03-03 19:54:18,228:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:18,228:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:18,228:WARNING:
2024-03-03 19:54:18,228:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:18,228:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:18,228:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:18,228:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:18,228:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:18,233:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:18,233:WARNING:  warnings.warn(
2024-03-03 19:54:18,611:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:18,611:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:18,611:WARNING:
2024-03-03 19:54:18,611:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:18,611:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:18,611:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:18,611:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:18,612:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:18,616:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:18,616:WARNING:  warnings.warn(
2024-03-03 19:54:18,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:18,974:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:18,974:WARNING:
2024-03-03 19:54:18,974:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:18,974:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:18,974:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:18,974:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:18,974:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:18,978:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:18,978:WARNING:  warnings.warn(
2024-03-03 19:54:19,331:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:19,331:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:19,331:WARNING:
2024-03-03 19:54:19,331:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:19,331:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:19,331:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:19,331:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:19,331:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:19,335:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:19,335:WARNING:  warnings.warn(
2024-03-03 19:54:19,699:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:19,699:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:19,699:WARNING:
2024-03-03 19:54:19,700:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:19,700:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:19,700:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:19,700:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:19,700:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:19,704:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:19,704:WARNING:  warnings.warn(
2024-03-03 19:54:20,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:20,093:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:20,093:WARNING:
2024-03-03 19:54:20,093:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:20,093:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:20,093:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:20,093:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:20,093:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:20,097:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:20,097:WARNING:  warnings.warn(
2024-03-03 19:54:20,468:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:20,468:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:20,469:WARNING:
2024-03-03 19:54:20,469:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:20,469:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:20,469:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:20,469:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:20,469:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:20,474:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:20,474:WARNING:  warnings.warn(
2024-03-03 19:54:20,845:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:20,845:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:20,845:WARNING:
2024-03-03 19:54:20,845:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:20,845:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:20,845:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:20,846:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:20,846:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:20,849:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:20,850:WARNING:  warnings.warn(
2024-03-03 19:54:21,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:21,226:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:21,226:WARNING:
2024-03-03 19:54:21,226:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:21,226:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:21,226:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:21,226:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:21,226:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:21,230:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:21,230:WARNING:  warnings.warn(
2024-03-03 19:54:21,572:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:21,572:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:21,572:WARNING:
2024-03-03 19:54:21,572:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:21,572:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:21,572:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:21,573:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:21,573:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:21,576:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:21,576:WARNING:  warnings.warn(
2024-03-03 19:54:21,954:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:21,954:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:21,954:WARNING:
2024-03-03 19:54:21,954:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:21,954:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:21,954:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:21,954:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:21,954:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:21,957:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:21,957:WARNING:  warnings.warn(
2024-03-03 19:54:22,339:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:22,339:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:22,339:WARNING:
2024-03-03 19:54:22,340:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:22,340:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:22,340:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:22,340:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:22,340:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:22,344:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:22,344:WARNING:  warnings.warn(
2024-03-03 19:54:22,718:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:22,718:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:22,718:WARNING:
2024-03-03 19:54:22,718:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:22,718:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:22,718:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:22,718:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:22,718:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:22,722:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:22,722:WARNING:  warnings.warn(
2024-03-03 19:54:23,104:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:23,104:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:23,104:WARNING:
2024-03-03 19:54:23,104:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:23,104:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:23,104:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:23,104:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:23,104:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:23,108:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:23,108:WARNING:  warnings.warn(
2024-03-03 19:54:23,454:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:23,454:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:23,454:WARNING:
2024-03-03 19:54:23,454:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:23,454:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:23,454:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:23,454:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:23,454:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:23,458:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:23,458:WARNING:  warnings.warn(
2024-03-03 19:54:23,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:23,812:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:23,812:WARNING:
2024-03-03 19:54:23,812:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:23,812:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:23,812:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:23,812:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:23,812:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:23,816:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:23,816:WARNING:  warnings.warn(
2024-03-03 19:54:24,199:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:24,199:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:24,199:WARNING:
2024-03-03 19:54:24,199:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:24,199:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:24,199:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:24,199:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:24,199:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:24,205:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:24,205:WARNING:  warnings.warn(
2024-03-03 19:54:24,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:24,587:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:24,587:WARNING:
2024-03-03 19:54:24,587:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:24,587:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:24,587:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:24,587:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:24,587:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:24,591:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:24,591:WARNING:  warnings.warn(
2024-03-03 19:54:24,965:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:24,965:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:24,965:WARNING:
2024-03-03 19:54:24,965:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:24,965:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:24,965:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:24,965:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:24,965:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:24,969:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:24,969:WARNING:  warnings.warn(
2024-03-03 19:54:25,302:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:25,302:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:25,302:WARNING:
2024-03-03 19:54:25,303:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:25,303:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:25,303:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:25,303:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:25,303:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:25,306:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:25,306:WARNING:  warnings.warn(
2024-03-03 19:54:25,662:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:25,662:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:25,662:WARNING:
2024-03-03 19:54:25,662:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:25,663:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:25,663:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:25,663:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:25,663:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:25,667:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:25,667:WARNING:  warnings.warn(
2024-03-03 19:54:26,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:26,039:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:26,039:WARNING:
2024-03-03 19:54:26,039:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:26,039:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:26,039:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:26,039:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:26,039:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:26,043:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:26,043:WARNING:  warnings.warn(
2024-03-03 19:54:26,427:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:26,427:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:26,427:WARNING:
2024-03-03 19:54:26,427:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:26,427:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:26,427:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:26,427:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:26,427:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:26,432:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:26,432:WARNING:  warnings.warn(
2024-03-03 19:54:26,801:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:26,802:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:26,802:WARNING:
2024-03-03 19:54:26,802:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:26,802:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:26,802:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:26,802:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:26,802:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:26,806:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:26,806:WARNING:  warnings.warn(
2024-03-03 19:54:27,178:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:27,178:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:27,178:WARNING:
2024-03-03 19:54:27,178:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:27,178:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:27,178:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:27,178:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:27,178:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:27,183:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:27,183:WARNING:  warnings.warn(
2024-03-03 19:54:27,574:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:27,574:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:27,574:WARNING:
2024-03-03 19:54:27,574:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:27,574:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:27,574:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:27,574:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:27,574:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:27,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:27,578:WARNING:  warnings.warn(
2024-03-03 19:54:27,939:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:27,939:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:27,939:WARNING:
2024-03-03 19:54:27,940:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:27,940:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:27,940:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:27,940:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:27,940:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:27,944:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:27,944:WARNING:  warnings.warn(
2024-03-03 19:54:28,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:28,304:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:28,304:WARNING:
2024-03-03 19:54:28,304:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:28,304:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:28,304:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:28,304:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:28,304:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:28,308:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:28,308:WARNING:  warnings.warn(
2024-03-03 19:54:28,691:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:28,692:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:28,692:WARNING:
2024-03-03 19:54:28,692:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:28,692:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:28,692:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:28,692:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:28,692:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:28,696:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:28,696:WARNING:  warnings.warn(
2024-03-03 19:54:29,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:29,074:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:29,074:WARNING:
2024-03-03 19:54:29,074:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:29,074:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:29,075:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:29,075:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:29,075:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:29,079:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:29,079:WARNING:  warnings.warn(
2024-03-03 19:54:29,434:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:29,434:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:29,434:WARNING:
2024-03-03 19:54:29,434:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:29,434:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:29,434:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:29,434:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:29,434:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:29,438:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:29,438:WARNING:  warnings.warn(
2024-03-03 19:54:29,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:29,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:29,766:WARNING:
2024-03-03 19:54:29,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:29,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:29,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:29,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:29,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:29,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:29,771:WARNING:  warnings.warn(
2024-03-03 19:54:30,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:30,137:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:30,138:WARNING:
2024-03-03 19:54:30,138:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:30,138:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:30,138:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:30,138:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:30,138:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:30,142:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:30,142:WARNING:  warnings.warn(
2024-03-03 19:54:30,504:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:30,504:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:30,504:WARNING:
2024-03-03 19:54:30,504:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:30,504:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:30,504:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:30,504:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:30,504:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:30,508:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:30,508:WARNING:  warnings.warn(
2024-03-03 19:54:30,889:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:30,889:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:30,889:WARNING:
2024-03-03 19:54:30,889:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:30,889:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:30,889:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:30,889:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:30,889:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:30,893:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:30,893:WARNING:  warnings.warn(
2024-03-03 19:54:31,259:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:31,259:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:31,259:WARNING:
2024-03-03 19:54:31,259:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:31,259:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:31,259:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:31,259:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:31,259:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:31,264:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:31,264:WARNING:  warnings.warn(
2024-03-03 19:54:31,638:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:31,638:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:31,638:WARNING:
2024-03-03 19:54:31,638:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:31,638:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:31,639:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:31,639:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:31,639:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:31,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:31,642:WARNING:  warnings.warn(
2024-03-03 19:54:32,005:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:32,005:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:32,005:WARNING:
2024-03-03 19:54:32,005:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:32,006:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:32,006:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:32,006:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:32,006:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:32,009:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:32,009:WARNING:  warnings.warn(
2024-03-03 19:54:32,369:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:32,370:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:32,370:WARNING:
2024-03-03 19:54:32,370:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:32,370:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:32,370:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:32,370:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:32,370:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:32,374:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:32,374:WARNING:  warnings.warn(
2024-03-03 19:54:32,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:32,738:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:32,738:WARNING:
2024-03-03 19:54:32,738:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:32,738:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:32,738:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:32,738:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:32,738:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:32,742:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:32,742:WARNING:  warnings.warn(
2024-03-03 19:54:33,133:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:33,133:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:33,133:WARNING:
2024-03-03 19:54:33,133:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:33,133:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:33,133:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:33,133:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:33,133:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:33,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:33,138:WARNING:  warnings.warn(
2024-03-03 19:54:33,511:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:33,511:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:33,511:WARNING:
2024-03-03 19:54:33,511:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:33,511:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:33,511:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:33,511:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:33,511:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:33,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:33,515:WARNING:  warnings.warn(
2024-03-03 19:54:33,864:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:33,864:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:33,864:WARNING:
2024-03-03 19:54:33,864:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:33,864:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:33,864:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:33,864:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:33,864:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:33,867:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:33,867:WARNING:  warnings.warn(
2024-03-03 19:54:34,251:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:34,251:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:34,251:WARNING:
2024-03-03 19:54:34,251:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:34,251:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:34,251:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:34,251:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:34,251:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:34,255:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:34,255:WARNING:  warnings.warn(
2024-03-03 19:54:34,616:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:34,616:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:34,616:WARNING:
2024-03-03 19:54:34,616:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:34,616:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:34,617:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:34,617:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:34,617:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:34,620:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:34,621:WARNING:  warnings.warn(
2024-03-03 19:54:34,992:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:34,992:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:34,992:WARNING:
2024-03-03 19:54:34,992:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:34,992:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:34,992:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:34,992:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:34,992:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:34,998:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:34,998:WARNING:  warnings.warn(
2024-03-03 19:54:35,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:35,372:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:35,372:WARNING:
2024-03-03 19:54:35,372:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:35,372:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:35,372:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:35,372:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:35,372:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:35,376:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:35,376:WARNING:  warnings.warn(
2024-03-03 19:54:35,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:35,762:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:35,763:WARNING:
2024-03-03 19:54:35,763:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:35,763:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:35,763:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:35,763:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:35,763:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:35,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:35,767:WARNING:  warnings.warn(
2024-03-03 19:54:36,153:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:36,153:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:36,153:WARNING:
2024-03-03 19:54:36,153:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:36,153:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:36,153:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:36,153:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:36,153:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:36,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:36,157:WARNING:  warnings.warn(
2024-03-03 19:54:36,526:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:36,526:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:36,526:WARNING:
2024-03-03 19:54:36,526:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:36,526:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:36,526:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:36,527:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:36,527:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:36,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:36,531:WARNING:  warnings.warn(
2024-03-03 19:54:36,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:36,895:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:36,895:WARNING:
2024-03-03 19:54:36,895:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:36,895:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:36,895:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:36,895:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:36,895:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:36,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:36,900:WARNING:  warnings.warn(
2024-03-03 19:54:37,286:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:37,286:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:37,286:WARNING:
2024-03-03 19:54:37,287:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:37,287:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:37,287:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:37,287:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:37,287:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:37,291:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:37,291:WARNING:  warnings.warn(
2024-03-03 19:54:37,662:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:37,662:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:37,662:WARNING:
2024-03-03 19:54:37,662:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:37,662:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:37,662:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:37,662:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:37,663:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:37,666:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:37,667:WARNING:  warnings.warn(
2024-03-03 19:54:38,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:38,042:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:38,042:WARNING:
2024-03-03 19:54:38,042:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:38,042:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:38,042:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:38,042:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:38,042:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:38,048:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:38,048:WARNING:  warnings.warn(
2024-03-03 19:54:38,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:38,424:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:38,424:WARNING:
2024-03-03 19:54:38,424:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:38,424:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:38,424:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:38,424:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:38,424:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:38,429:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:38,429:WARNING:  warnings.warn(
2024-03-03 19:54:38,800:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:38,800:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:38,800:WARNING:
2024-03-03 19:54:38,800:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:38,800:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:38,800:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:38,800:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:38,800:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:38,806:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:38,806:WARNING:  warnings.warn(
2024-03-03 19:54:39,232:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:39,232:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:39,232:WARNING:
2024-03-03 19:54:39,232:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:39,232:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:39,232:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:39,232:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:39,232:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:39,238:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:39,238:WARNING:  warnings.warn(
2024-03-03 19:54:39,618:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:39,618:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:39,618:WARNING:
2024-03-03 19:54:39,618:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:39,618:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:39,618:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:39,618:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:39,618:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:39,623:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:39,623:WARNING:  warnings.warn(
2024-03-03 19:54:39,974:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:39,974:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:39,974:WARNING:
2024-03-03 19:54:39,974:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:39,974:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:39,974:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:39,974:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:39,974:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:39,979:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:39,979:WARNING:  warnings.warn(
2024-03-03 19:54:40,336:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:40,336:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:40,336:WARNING:
2024-03-03 19:54:40,336:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:40,336:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:40,336:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:40,336:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:40,336:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:40,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:40,340:WARNING:  warnings.warn(
2024-03-03 19:54:40,691:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:40,691:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:40,691:WARNING:
2024-03-03 19:54:40,691:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:40,691:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:40,692:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:40,692:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:40,692:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:40,696:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:40,696:WARNING:  warnings.warn(
2024-03-03 19:54:41,064:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:41,064:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:41,064:WARNING:
2024-03-03 19:54:41,065:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:41,065:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:41,065:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:41,065:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:41,065:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:41,069:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:41,069:WARNING:  warnings.warn(
2024-03-03 19:54:41,460:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:41,460:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:41,460:WARNING:
2024-03-03 19:54:41,461:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:41,461:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:41,461:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:41,461:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:41,461:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:41,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:41,465:WARNING:  warnings.warn(
2024-03-03 19:54:41,818:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:41,818:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:41,818:WARNING:
2024-03-03 19:54:41,818:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:41,818:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:41,818:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:41,818:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:41,818:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:41,822:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:41,822:WARNING:  warnings.warn(
2024-03-03 19:54:42,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:42,190:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:42,190:WARNING:
2024-03-03 19:54:42,190:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:42,190:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:42,190:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:42,190:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:42,190:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:42,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:42,195:WARNING:  warnings.warn(
2024-03-03 19:54:42,558:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:42,558:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:42,558:WARNING:
2024-03-03 19:54:42,558:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:42,558:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:42,558:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:42,558:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:42,558:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:42,562:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:42,562:WARNING:  warnings.warn(
2024-03-03 19:54:42,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:42,932:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:42,932:WARNING:
2024-03-03 19:54:42,932:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:42,933:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:42,933:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:42,933:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:42,933:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:42,936:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:42,936:WARNING:  warnings.warn(
2024-03-03 19:54:43,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:43,284:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:43,284:WARNING:
2024-03-03 19:54:43,284:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:43,284:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:43,284:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:43,284:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:43,284:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:43,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:43,288:WARNING:  warnings.warn(
2024-03-03 19:54:43,676:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:43,676:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:43,676:WARNING:
2024-03-03 19:54:43,676:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:43,676:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:43,676:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:43,676:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:43,676:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:43,681:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:43,681:WARNING:  warnings.warn(
2024-03-03 19:54:44,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:44,042:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:44,042:WARNING:
2024-03-03 19:54:44,042:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:44,043:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:44,043:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:44,043:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:44,043:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:44,046:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:44,046:WARNING:  warnings.warn(
2024-03-03 19:54:44,412:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:44,412:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:44,412:WARNING:
2024-03-03 19:54:44,412:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:44,412:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:44,412:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:44,412:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:44,412:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:44,416:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:44,416:WARNING:  warnings.warn(
2024-03-03 19:54:44,762:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:44,762:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:44,762:WARNING:
2024-03-03 19:54:44,762:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:44,764:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:44,764:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:44,764:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:44,764:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:44,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:44,767:WARNING:  warnings.warn(
2024-03-03 19:54:45,181:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:45,181:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:45,181:WARNING:
2024-03-03 19:54:45,181:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:45,181:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:45,181:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:45,181:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:45,183:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:45,186:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:45,186:WARNING:  warnings.warn(
2024-03-03 19:54:45,543:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:45,543:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:45,543:WARNING:
2024-03-03 19:54:45,543:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:45,543:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:45,543:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:45,543:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:45,544:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:45,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:45,547:WARNING:  warnings.warn(
2024-03-03 19:54:45,938:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:45,938:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:45,938:WARNING:
2024-03-03 19:54:45,938:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:45,938:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:45,938:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:45,938:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:45,938:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:45,942:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:45,942:WARNING:  warnings.warn(
2024-03-03 19:54:46,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:46,285:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:46,285:WARNING:
2024-03-03 19:54:46,285:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:46,285:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:46,285:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:46,285:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:46,285:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:46,289:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:46,289:WARNING:  warnings.warn(
2024-03-03 19:54:46,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:46,659:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:46,659:WARNING:
2024-03-03 19:54:46,659:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:46,659:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:46,659:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:46,659:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:46,659:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:46,663:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:46,663:WARNING:  warnings.warn(
2024-03-03 19:54:47,030:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:47,030:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:47,030:WARNING:
2024-03-03 19:54:47,030:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:47,030:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:47,030:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:47,030:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:47,030:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:47,035:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:47,035:WARNING:  warnings.warn(
2024-03-03 19:54:47,374:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:47,374:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:47,374:WARNING:
2024-03-03 19:54:47,374:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:47,374:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:47,375:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:47,375:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:47,375:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:47,379:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:47,379:WARNING:  warnings.warn(
2024-03-03 19:54:47,752:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:47,752:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:47,752:WARNING:
2024-03-03 19:54:47,752:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:47,752:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:47,752:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:47,753:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:47,753:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:47,756:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:47,756:WARNING:  warnings.warn(
2024-03-03 19:54:48,146:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:48,146:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:48,146:WARNING:
2024-03-03 19:54:48,146:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:48,146:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:48,146:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:48,147:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:48,147:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:48,151:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:48,151:WARNING:  warnings.warn(
2024-03-03 19:54:48,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:48,526:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:48,526:WARNING:
2024-03-03 19:54:48,526:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:48,526:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:48,526:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:48,526:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:48,526:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:48,530:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:48,530:WARNING:  warnings.warn(
2024-03-03 19:54:48,883:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:48,883:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:48,883:WARNING:
2024-03-03 19:54:48,883:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:48,883:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:48,883:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:48,883:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:48,883:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:48,887:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:48,887:WARNING:  warnings.warn(
2024-03-03 19:54:49,247:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:49,247:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:49,247:WARNING:
2024-03-03 19:54:49,247:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:49,247:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:49,247:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:49,247:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:49,247:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:49,251:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:49,251:WARNING:  warnings.warn(
2024-03-03 19:54:49,607:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:49,607:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:49,607:WARNING:
2024-03-03 19:54:49,607:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:49,607:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:49,607:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:49,607:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:49,607:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:49,612:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:49,612:WARNING:  warnings.warn(
2024-03-03 19:54:49,985:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:49,985:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:49,985:WARNING:
2024-03-03 19:54:49,986:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:49,986:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:49,986:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:49,986:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:49,986:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:49,991:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:49,991:WARNING:  warnings.warn(
2024-03-03 19:54:50,364:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:50,364:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:50,364:WARNING:
2024-03-03 19:54:50,364:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:50,364:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:50,364:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:50,364:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:50,364:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:50,368:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:50,368:WARNING:  warnings.warn(
2024-03-03 19:54:50,735:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:50,794:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:50,794:WARNING:
2024-03-03 19:54:50,794:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:50,794:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:50,794:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:50,794:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:50,794:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:50,803:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:50,803:WARNING:  warnings.warn(
2024-03-03 19:54:51,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:51,176:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:51,176:WARNING:
2024-03-03 19:54:51,176:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:51,176:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:51,176:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:51,176:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:51,176:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:51,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:51,180:WARNING:  warnings.warn(
2024-03-03 19:54:51,531:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:51,531:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:51,531:WARNING:
2024-03-03 19:54:51,532:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:51,532:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:51,532:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:51,532:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:51,532:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:51,535:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:51,536:WARNING:  warnings.warn(
2024-03-03 19:54:51,892:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:51,892:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:51,892:WARNING:
2024-03-03 19:54:51,892:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:51,892:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:51,892:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:51,893:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:51,893:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:51,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:51,897:WARNING:  warnings.warn(
2024-03-03 19:54:52,278:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:52,278:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:52,278:WARNING:
2024-03-03 19:54:52,278:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:52,278:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:52,278:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:52,278:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:52,278:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:52,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:52,281:WARNING:  warnings.warn(
2024-03-03 19:54:52,643:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:52,643:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:52,643:WARNING:
2024-03-03 19:54:52,643:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:52,643:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:52,643:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:52,643:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:52,644:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:52,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:52,648:WARNING:  warnings.warn(
2024-03-03 19:54:53,033:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:53,033:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:53,033:WARNING:
2024-03-03 19:54:53,033:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:53,033:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:53,033:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:53,033:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:53,033:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:53,038:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:53,038:WARNING:  warnings.warn(
2024-03-03 19:54:53,386:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:53,387:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:53,387:WARNING:
2024-03-03 19:54:53,387:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:53,387:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:53,387:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:53,387:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:53,387:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:53,390:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:53,390:WARNING:  warnings.warn(
2024-03-03 19:54:53,750:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:53,750:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:53,750:WARNING:
2024-03-03 19:54:53,750:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:53,750:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:53,750:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:53,750:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:53,750:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:53,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:53,754:WARNING:  warnings.warn(
2024-03-03 19:54:54,111:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:54,111:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:54,111:WARNING:
2024-03-03 19:54:54,111:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:54,111:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:54,111:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:54,111:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:54,111:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:54,115:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:54,115:WARNING:  warnings.warn(
2024-03-03 19:54:54,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:54,520:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:54,521:WARNING:
2024-03-03 19:54:54,521:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:54,521:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:54,521:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:54,521:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:54,521:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:54,525:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:54,525:WARNING:  warnings.warn(
2024-03-03 19:54:54,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:54,905:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:54,905:WARNING:
2024-03-03 19:54:54,905:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:54,905:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:54,905:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:54,905:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:54,905:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:54,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:54,909:WARNING:  warnings.warn(
2024-03-03 19:54:55,267:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:55,267:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:55,267:WARNING:
2024-03-03 19:54:55,267:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:55,267:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:55,267:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:55,267:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:55,268:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:55,272:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:55,272:WARNING:  warnings.warn(
2024-03-03 19:54:55,631:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:55,631:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:55,631:WARNING:
2024-03-03 19:54:55,632:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:55,632:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:55,632:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:55,632:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:55,632:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:55,636:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:55,636:WARNING:  warnings.warn(
2024-03-03 19:54:55,991:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:55,991:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:55,991:WARNING:
2024-03-03 19:54:55,991:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:55,991:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:55,991:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:55,991:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:55,991:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:55,995:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:55,995:WARNING:  warnings.warn(
2024-03-03 19:54:56,363:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:56,363:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:56,363:WARNING:
2024-03-03 19:54:56,363:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:56,363:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:56,363:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:56,363:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:56,363:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:56,367:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:56,367:WARNING:  warnings.warn(
2024-03-03 19:54:56,735:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:56,735:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:56,735:WARNING:
2024-03-03 19:54:56,735:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:56,735:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:56,735:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:56,735:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:56,735:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:56,739:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:56,739:WARNING:  warnings.warn(
2024-03-03 19:54:57,078:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:57,078:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:57,078:WARNING:
2024-03-03 19:54:57,078:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:57,078:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:57,078:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:57,078:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:57,078:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:57,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:57,083:WARNING:  warnings.warn(
2024-03-03 19:54:57,437:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:57,437:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:57,437:WARNING:
2024-03-03 19:54:57,437:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:57,437:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:57,437:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:57,437:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:57,437:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:57,441:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:57,441:WARNING:  warnings.warn(
2024-03-03 19:54:57,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:57,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:57,793:WARNING:
2024-03-03 19:54:57,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:57,793:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:57,793:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:57,793:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:57,793:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:57,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:57,797:WARNING:  warnings.warn(
2024-03-03 19:54:58,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:58,167:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:58,167:WARNING:
2024-03-03 19:54:58,167:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:58,167:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:58,167:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:58,167:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:58,167:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:58,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:58,172:WARNING:  warnings.warn(
2024-03-03 19:54:58,541:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:58,541:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:58,541:WARNING:
2024-03-03 19:54:58,541:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:58,541:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:58,541:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:58,541:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:58,541:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:58,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:58,546:WARNING:  warnings.warn(
2024-03-03 19:54:58,950:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:58,950:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:58,950:WARNING:
2024-03-03 19:54:58,950:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:58,950:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:58,950:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:58,950:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:58,950:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:58,954:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:58,954:WARNING:  warnings.warn(
2024-03-03 19:54:59,336:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:59,336:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:59,336:WARNING:
2024-03-03 19:54:59,336:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:59,336:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:59,336:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:59,336:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:59,336:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:59,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:59,340:WARNING:  warnings.warn(
2024-03-03 19:54:59,728:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:54:59,728:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:54:59,728:WARNING:
2024-03-03 19:54:59,728:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:54:59,728:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:54:59,728:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:54:59,728:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:54:59,728:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:54:59,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:54:59,732:WARNING:  warnings.warn(
2024-03-03 19:55:00,122:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:00,122:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:00,122:WARNING:
2024-03-03 19:55:00,122:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:00,122:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:00,122:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:00,122:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:00,122:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:00,126:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:00,127:WARNING:  warnings.warn(
2024-03-03 19:55:00,501:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:00,501:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:00,501:WARNING:
2024-03-03 19:55:00,501:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:00,501:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:00,501:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:00,501:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:00,501:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:00,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:00,505:WARNING:  warnings.warn(
2024-03-03 19:55:00,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:00,897:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:00,897:WARNING:
2024-03-03 19:55:00,897:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:00,897:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:00,897:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:00,897:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:00,897:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:00,901:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:00,901:WARNING:  warnings.warn(
2024-03-03 19:55:01,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:01,275:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:01,275:WARNING:
2024-03-03 19:55:01,275:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:01,275:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:01,275:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:01,275:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:01,275:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:01,279:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:01,279:WARNING:  warnings.warn(
2024-03-03 19:55:01,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:01,644:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:01,644:WARNING:
2024-03-03 19:55:01,644:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:01,644:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:01,644:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:01,644:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:01,644:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:01,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:01,648:WARNING:  warnings.warn(
2024-03-03 19:55:02,031:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:02,031:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:02,031:WARNING:
2024-03-03 19:55:02,031:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:02,031:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:02,033:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:02,033:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:02,033:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:02,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:02,037:WARNING:  warnings.warn(
2024-03-03 19:55:02,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:02,395:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:02,395:WARNING:
2024-03-03 19:55:02,395:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:02,395:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:02,395:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:02,395:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:02,395:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:02,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:02,400:WARNING:  warnings.warn(
2024-03-03 19:55:02,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:02,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:02,766:WARNING:
2024-03-03 19:55:02,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:02,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:02,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:02,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:02,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:02,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:02,770:WARNING:  warnings.warn(
2024-03-03 19:55:03,152:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:03,152:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:03,152:WARNING:
2024-03-03 19:55:03,152:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:03,152:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:03,152:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:03,152:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:03,152:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:03,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:03,157:WARNING:  warnings.warn(
2024-03-03 19:55:03,533:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:03,533:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:03,533:WARNING:
2024-03-03 19:55:03,533:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:03,535:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:03,535:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:03,535:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:03,535:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:03,538:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:03,538:WARNING:  warnings.warn(
2024-03-03 19:55:03,908:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:03,908:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:03,908:WARNING:
2024-03-03 19:55:03,908:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:03,908:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:03,908:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:03,908:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:03,909:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:03,913:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:03,913:WARNING:  warnings.warn(
2024-03-03 19:55:04,284:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:04,284:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:04,284:WARNING:
2024-03-03 19:55:04,284:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:04,284:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:04,284:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:04,284:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:04,284:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:04,288:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:04,288:WARNING:  warnings.warn(
2024-03-03 19:55:04,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:04,669:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:04,669:WARNING:
2024-03-03 19:55:04,669:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:04,669:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:04,669:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:04,669:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:04,669:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:04,673:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:04,673:WARNING:  warnings.warn(
2024-03-03 19:55:05,033:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:05,033:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:05,033:WARNING:
2024-03-03 19:55:05,033:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:05,033:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:05,033:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:05,033:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:05,033:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:05,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:05,037:WARNING:  warnings.warn(
2024-03-03 19:55:05,419:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:05,419:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:05,419:WARNING:
2024-03-03 19:55:05,419:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:05,419:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:05,420:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:05,420:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:05,420:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:05,424:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:05,424:WARNING:  warnings.warn(
2024-03-03 19:55:05,790:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:05,801:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:05,801:WARNING:
2024-03-03 19:55:05,801:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:05,801:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:05,801:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:05,801:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:05,801:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:05,806:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:05,806:WARNING:  warnings.warn(
2024-03-03 19:55:06,178:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:06,179:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:06,179:WARNING:
2024-03-03 19:55:06,179:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:06,179:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:06,179:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:06,179:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:06,179:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:06,183:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:06,183:WARNING:  warnings.warn(
2024-03-03 19:55:06,574:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:06,574:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:06,574:WARNING:
2024-03-03 19:55:06,574:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:06,574:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:06,574:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:06,574:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:06,574:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:06,578:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:06,578:WARNING:  warnings.warn(
2024-03-03 19:55:06,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:06,959:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:06,959:WARNING:
2024-03-03 19:55:06,959:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:06,959:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:06,959:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:06,959:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:06,959:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:06,963:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:06,963:WARNING:  warnings.warn(
2024-03-03 19:55:07,346:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:07,346:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:07,346:WARNING:
2024-03-03 19:55:07,346:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:07,346:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:07,346:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:07,346:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:07,346:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:07,352:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:07,353:WARNING:  warnings.warn(
2024-03-03 19:55:07,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:07,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:07,766:WARNING:
2024-03-03 19:55:07,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:07,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:07,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:07,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:07,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:07,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:07,770:WARNING:  warnings.warn(
2024-03-03 19:55:08,157:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:08,157:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:08,157:WARNING:
2024-03-03 19:55:08,157:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:08,157:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:08,157:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:08,157:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:08,157:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:08,161:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:08,161:WARNING:  warnings.warn(
2024-03-03 19:55:08,541:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:08,541:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:08,541:WARNING:
2024-03-03 19:55:08,541:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:08,541:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:08,541:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:08,541:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:08,541:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:08,545:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:08,546:WARNING:  warnings.warn(
2024-03-03 19:55:08,897:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:08,897:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:08,897:WARNING:
2024-03-03 19:55:08,897:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:08,897:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:08,897:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:08,897:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:08,897:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:08,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:08,900:WARNING:  warnings.warn(
2024-03-03 19:55:09,295:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:09,295:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:09,295:WARNING:
2024-03-03 19:55:09,295:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:09,295:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:09,295:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:09,295:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:09,295:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:09,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:09,299:WARNING:  warnings.warn(
2024-03-03 19:55:09,702:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:09,702:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:09,702:WARNING:
2024-03-03 19:55:09,702:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:09,702:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:09,702:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:09,702:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:09,702:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:09,707:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:09,707:WARNING:  warnings.warn(
2024-03-03 19:55:10,091:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:10,091:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:10,091:WARNING:
2024-03-03 19:55:10,091:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:10,092:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:10,092:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:10,092:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:10,092:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:10,095:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:10,095:WARNING:  warnings.warn(
2024-03-03 19:55:10,478:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:10,478:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:10,478:WARNING:
2024-03-03 19:55:10,478:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:10,478:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:10,478:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:10,478:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:10,478:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:10,483:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:10,483:WARNING:  warnings.warn(
2024-03-03 19:55:10,878:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:10,878:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:10,878:WARNING:
2024-03-03 19:55:10,878:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:10,878:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:10,878:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:10,878:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:10,878:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:10,883:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:10,883:WARNING:  warnings.warn(
2024-03-03 19:55:11,261:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:11,261:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:11,261:WARNING:
2024-03-03 19:55:11,261:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:11,261:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:11,261:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:11,261:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:11,261:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:11,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:11,265:WARNING:  warnings.warn(
2024-03-03 19:55:11,659:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:11,659:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:11,659:WARNING:
2024-03-03 19:55:11,659:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:11,659:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:11,659:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:11,659:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:11,659:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:11,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:11,664:WARNING:  warnings.warn(
2024-03-03 19:55:12,064:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:12,064:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:12,064:WARNING:
2024-03-03 19:55:12,064:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:12,064:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:12,064:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:12,064:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:12,064:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:12,068:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:12,068:WARNING:  warnings.warn(
2024-03-03 19:55:12,451:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:12,451:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:12,451:WARNING:
2024-03-03 19:55:12,451:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:12,451:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:12,451:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:12,451:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:12,451:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:12,455:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:12,455:WARNING:  warnings.warn(
2024-03-03 19:55:12,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:12,810:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:12,810:WARNING:
2024-03-03 19:55:12,810:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:12,810:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:12,810:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:12,810:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:12,810:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:12,814:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:12,814:WARNING:  warnings.warn(
2024-03-03 19:55:13,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:13,207:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:13,207:WARNING:
2024-03-03 19:55:13,207:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:13,207:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:13,207:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:13,207:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:13,207:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:13,211:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:13,211:WARNING:  warnings.warn(
2024-03-03 19:55:13,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:13,584:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:13,584:WARNING:
2024-03-03 19:55:13,584:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:13,584:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:13,584:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:13,584:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:13,584:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:13,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:13,588:WARNING:  warnings.warn(
2024-03-03 19:55:13,940:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:13,940:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:13,940:WARNING:
2024-03-03 19:55:13,940:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:13,940:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:13,940:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:13,940:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:13,940:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:13,945:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:13,945:WARNING:  warnings.warn(
2024-03-03 19:55:14,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:14,348:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:14,348:WARNING:
2024-03-03 19:55:14,348:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:14,348:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:14,348:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:14,348:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:14,348:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:14,353:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:14,353:WARNING:  warnings.warn(
2024-03-03 19:55:14,743:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:14,743:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:14,743:WARNING:
2024-03-03 19:55:14,743:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:14,743:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:14,744:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:14,744:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:14,744:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:14,747:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:14,747:WARNING:  warnings.warn(
2024-03-03 19:55:15,138:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:15,138:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:15,138:WARNING:
2024-03-03 19:55:15,138:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:15,138:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:15,138:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:15,138:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:15,138:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:15,142:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:15,142:WARNING:  warnings.warn(
2024-03-03 19:55:15,520:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:15,520:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:15,520:WARNING:
2024-03-03 19:55:15,520:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:15,520:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:15,520:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:15,520:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:15,520:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:15,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:15,523:WARNING:  warnings.warn(
2024-03-03 19:55:15,891:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:15,891:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:15,891:WARNING:
2024-03-03 19:55:15,891:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:15,891:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:15,891:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:15,891:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:15,891:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:15,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:15,895:WARNING:  warnings.warn(
2024-03-03 19:55:16,265:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:16,265:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:16,265:WARNING:
2024-03-03 19:55:16,265:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:16,265:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:16,265:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:16,265:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:16,265:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:16,269:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:16,269:WARNING:  warnings.warn(
2024-03-03 19:55:16,657:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:16,657:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:16,657:WARNING:
2024-03-03 19:55:16,657:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:16,657:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:16,657:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:16,657:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:16,657:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:16,661:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:16,661:WARNING:  warnings.warn(
2024-03-03 19:55:17,045:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:17,045:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:17,045:WARNING:
2024-03-03 19:55:17,045:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:17,045:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:17,045:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:17,045:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:17,045:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:17,049:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:17,049:WARNING:  warnings.warn(
2024-03-03 19:55:17,416:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:17,416:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:17,416:WARNING:
2024-03-03 19:55:17,416:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:17,416:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:17,416:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:17,416:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:17,416:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:17,421:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:17,421:WARNING:  warnings.warn(
2024-03-03 19:55:17,802:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:17,802:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:17,802:WARNING:
2024-03-03 19:55:17,802:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:17,802:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:17,802:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:17,802:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:17,802:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:17,807:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:17,807:WARNING:  warnings.warn(
2024-03-03 19:55:18,193:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:18,193:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:18,193:WARNING:
2024-03-03 19:55:18,193:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:18,193:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:18,193:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:18,193:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:18,193:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:18,197:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:18,197:WARNING:  warnings.warn(
2024-03-03 19:55:18,584:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:18,584:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:18,584:WARNING:
2024-03-03 19:55:18,584:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:18,584:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:18,584:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:18,584:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:18,584:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:18,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:18,588:WARNING:  warnings.warn(
2024-03-03 19:55:18,957:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:18,957:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:18,957:WARNING:
2024-03-03 19:55:18,957:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:18,957:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:18,957:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:18,957:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:18,957:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:18,961:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:18,961:WARNING:  warnings.warn(
2024-03-03 19:55:19,337:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:19,337:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:19,337:WARNING:
2024-03-03 19:55:19,337:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:19,337:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:19,337:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:19,337:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:19,337:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:19,341:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:19,341:WARNING:  warnings.warn(
2024-03-03 19:55:19,708:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:19,708:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:19,708:WARNING:
2024-03-03 19:55:19,709:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:19,709:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:19,709:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:19,709:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:19,709:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:19,712:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:19,713:WARNING:  warnings.warn(
2024-03-03 19:55:20,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:20,089:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:20,089:WARNING:
2024-03-03 19:55:20,089:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:20,089:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:20,089:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:20,089:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:20,089:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:20,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:20,093:WARNING:  warnings.warn(
2024-03-03 19:55:20,485:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:20,485:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:20,485:WARNING:
2024-03-03 19:55:20,486:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:20,486:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:20,486:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:20,486:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:20,486:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:20,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:20,492:WARNING:  warnings.warn(
2024-03-03 19:55:20,884:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:20,884:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:20,884:WARNING:
2024-03-03 19:55:20,884:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:20,884:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:20,884:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:20,884:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:20,884:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:20,888:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:20,888:WARNING:  warnings.warn(
2024-03-03 19:55:21,276:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:21,276:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:21,276:WARNING:
2024-03-03 19:55:21,276:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:21,276:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:21,276:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:21,276:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:21,276:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:21,280:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:21,280:WARNING:  warnings.warn(
2024-03-03 19:55:21,642:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:21,642:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:21,642:WARNING:
2024-03-03 19:55:21,642:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:21,642:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:21,642:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:21,642:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:21,642:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:21,646:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:21,646:WARNING:  warnings.warn(
2024-03-03 19:55:21,981:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:21,981:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:21,982:WARNING:
2024-03-03 19:55:21,982:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:21,982:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:21,982:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:21,982:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:21,982:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:21,986:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:21,986:WARNING:  warnings.warn(
2024-03-03 19:55:22,350:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:22,350:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:22,350:WARNING:
2024-03-03 19:55:22,350:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:22,350:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:22,350:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:22,350:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:22,350:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:22,355:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:22,355:WARNING:  warnings.warn(
2024-03-03 19:55:22,745:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:22,746:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:22,746:WARNING:
2024-03-03 19:55:22,746:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:22,746:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:22,746:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:22,746:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:22,746:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:22,749:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:22,750:WARNING:  warnings.warn(
2024-03-03 19:55:23,150:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:23,150:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:23,150:WARNING:
2024-03-03 19:55:23,150:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:23,150:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:23,150:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:23,150:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:23,150:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:23,154:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:23,154:WARNING:  warnings.warn(
2024-03-03 19:55:23,513:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:23,513:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:23,513:WARNING:
2024-03-03 19:55:23,513:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:23,513:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:23,513:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:23,513:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:23,513:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:23,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:23,518:WARNING:  warnings.warn(
2024-03-03 19:55:23,900:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:23,900:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:23,900:WARNING:
2024-03-03 19:55:23,900:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:23,900:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:23,900:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:23,900:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:23,900:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:23,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:23,905:WARNING:  warnings.warn(
2024-03-03 19:55:24,287:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:24,287:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:24,287:WARNING:
2024-03-03 19:55:24,287:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:24,287:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:24,287:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:24,287:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:24,288:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:24,292:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:24,292:WARNING:  warnings.warn(
2024-03-03 19:55:24,665:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:24,665:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:24,665:WARNING:
2024-03-03 19:55:24,665:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:24,665:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:24,666:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:24,666:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:24,666:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:24,670:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:24,670:WARNING:  warnings.warn(
2024-03-03 19:55:25,050:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:25,050:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:25,050:WARNING:
2024-03-03 19:55:25,050:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:25,050:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:25,050:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:25,050:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:25,050:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:25,055:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:25,055:WARNING:  warnings.warn(
2024-03-03 19:55:25,422:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:25,422:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:25,422:WARNING:
2024-03-03 19:55:25,422:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:25,422:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:25,422:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:25,422:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:25,422:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:25,426:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:25,426:WARNING:  warnings.warn(
2024-03-03 19:55:25,817:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:25,818:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:25,818:WARNING:
2024-03-03 19:55:25,818:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:25,818:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:25,818:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:25,818:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:25,818:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:25,822:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:25,822:WARNING:  warnings.warn(
2024-03-03 19:55:26,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:26,235:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:26,235:WARNING:
2024-03-03 19:55:26,235:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:26,235:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:26,235:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:26,235:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:26,235:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:26,241:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:26,241:WARNING:  warnings.warn(
2024-03-03 19:55:26,614:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:26,614:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:26,614:WARNING:
2024-03-03 19:55:26,614:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:26,614:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:26,614:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:26,614:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:26,614:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:26,618:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:26,618:WARNING:  warnings.warn(
2024-03-03 19:55:27,002:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:27,002:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:27,002:WARNING:
2024-03-03 19:55:27,002:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:27,002:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:27,002:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:27,002:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:27,002:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:27,007:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:27,007:WARNING:  warnings.warn(
2024-03-03 19:55:27,407:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:27,407:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:27,407:WARNING:
2024-03-03 19:55:27,407:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:27,407:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:27,407:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:27,407:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:27,407:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:27,411:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:27,411:WARNING:  warnings.warn(
2024-03-03 19:55:27,805:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:27,805:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:27,805:WARNING:
2024-03-03 19:55:27,806:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:27,806:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:27,806:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:27,806:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:27,806:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:27,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:27,810:WARNING:  warnings.warn(
2024-03-03 19:55:28,179:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:28,179:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:28,179:WARNING:
2024-03-03 19:55:28,180:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:28,180:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:28,180:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:28,180:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:28,180:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:28,184:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:28,184:WARNING:  warnings.warn(
2024-03-03 19:55:28,561:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:28,561:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:28,561:WARNING:
2024-03-03 19:55:28,561:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:28,561:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:28,561:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:28,561:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:28,561:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:28,567:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:28,567:WARNING:  warnings.warn(
2024-03-03 19:55:28,961:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:28,961:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:28,961:WARNING:
2024-03-03 19:55:28,961:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:28,961:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:28,961:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:28,961:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:28,962:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:28,965:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:28,965:WARNING:  warnings.warn(
2024-03-03 19:55:29,363:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:29,363:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:29,363:WARNING:
2024-03-03 19:55:29,363:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:29,363:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:29,363:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:29,363:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:29,363:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:29,366:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:29,366:WARNING:  warnings.warn(
2024-03-03 19:55:29,753:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:29,753:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:29,753:WARNING:
2024-03-03 19:55:29,753:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:29,753:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:29,754:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:29,754:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:29,754:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:29,758:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:29,758:WARNING:  warnings.warn(
2024-03-03 19:55:30,137:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:30,138:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:30,138:WARNING:
2024-03-03 19:55:30,138:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:30,138:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:30,138:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:30,138:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:30,138:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:30,142:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:30,142:WARNING:  warnings.warn(
2024-03-03 19:55:30,513:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:30,513:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:30,513:WARNING:
2024-03-03 19:55:30,513:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:30,513:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:30,513:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:30,513:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:30,513:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:30,517:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:30,517:WARNING:  warnings.warn(
2024-03-03 19:55:30,902:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:30,902:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:30,902:WARNING:
2024-03-03 19:55:30,902:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:30,902:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:30,902:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:30,903:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:30,903:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:30,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:30,907:WARNING:  warnings.warn(
2024-03-03 19:55:31,298:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:31,299:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:31,299:WARNING:
2024-03-03 19:55:31,299:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:31,299:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:31,299:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:31,299:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:31,299:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:31,305:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:31,305:WARNING:  warnings.warn(
2024-03-03 19:55:31,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:31,701:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:31,701:WARNING:
2024-03-03 19:55:31,701:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:31,701:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:31,701:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:31,701:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:31,701:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:31,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:31,705:WARNING:  warnings.warn(
2024-03-03 19:55:32,098:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:32,098:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:32,098:WARNING:
2024-03-03 19:55:32,098:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:32,098:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:32,098:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:32,098:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:32,098:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:32,102:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:32,102:WARNING:  warnings.warn(
2024-03-03 19:55:32,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:32,491:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:32,491:WARNING:
2024-03-03 19:55:32,493:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:32,493:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:32,493:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:32,493:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:32,493:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:32,496:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:32,496:WARNING:  warnings.warn(
2024-03-03 19:55:32,872:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:32,872:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:32,872:WARNING:
2024-03-03 19:55:32,873:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:32,873:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:32,873:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:32,873:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:32,873:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:32,877:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:32,877:WARNING:  warnings.warn(
2024-03-03 19:55:33,244:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:33,244:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:33,244:WARNING:
2024-03-03 19:55:33,244:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:33,244:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:33,244:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:33,244:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:33,245:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:33,249:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:33,249:WARNING:  warnings.warn(
2024-03-03 19:55:33,644:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:33,644:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:33,644:WARNING:
2024-03-03 19:55:33,644:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:33,644:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:33,644:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:33,644:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:33,644:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:33,648:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:33,648:WARNING:  warnings.warn(
2024-03-03 19:55:34,037:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:34,037:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:34,037:WARNING:
2024-03-03 19:55:34,037:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:34,037:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:34,037:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:34,037:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:34,037:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:34,042:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:34,042:WARNING:  warnings.warn(
2024-03-03 19:55:34,424:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:34,424:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:34,424:WARNING:
2024-03-03 19:55:34,424:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:34,424:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:34,425:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:34,425:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:34,425:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:34,429:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:34,429:WARNING:  warnings.warn(
2024-03-03 19:55:34,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:34,810:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:34,810:WARNING:
2024-03-03 19:55:34,811:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:34,811:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:34,811:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:34,811:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:34,811:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:34,814:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:34,814:WARNING:  warnings.warn(
2024-03-03 19:55:35,204:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:35,204:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:35,204:WARNING:
2024-03-03 19:55:35,204:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:35,204:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:35,204:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:35,204:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:35,204:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:35,208:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:35,208:WARNING:  warnings.warn(
2024-03-03 19:55:35,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:35,593:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:35,593:WARNING:
2024-03-03 19:55:35,593:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:35,593:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:35,593:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:35,593:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:35,593:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:35,597:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:35,597:WARNING:  warnings.warn(
2024-03-03 19:55:36,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:36,014:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:36,014:WARNING:
2024-03-03 19:55:36,014:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:36,014:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:36,014:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:36,014:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:36,014:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:36,018:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:36,018:WARNING:  warnings.warn(
2024-03-03 19:55:36,396:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:36,396:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:36,396:WARNING:
2024-03-03 19:55:36,397:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:36,397:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:36,397:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:36,397:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:36,397:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:36,401:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:36,401:WARNING:  warnings.warn(
2024-03-03 19:55:36,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:36,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:36,794:WARNING:
2024-03-03 19:55:36,794:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:36,794:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:36,794:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:36,794:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:36,794:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:36,798:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:36,798:WARNING:  warnings.warn(
2024-03-03 19:55:37,190:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:37,190:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:37,190:WARNING:
2024-03-03 19:55:37,190:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:37,191:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:37,191:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:37,191:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:37,191:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:37,195:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:37,195:WARNING:  warnings.warn(
2024-03-03 19:55:37,577:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:37,577:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:37,577:WARNING:
2024-03-03 19:55:37,577:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:37,577:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:37,577:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:37,577:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:37,577:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:37,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:37,581:WARNING:  warnings.warn(
2024-03-03 19:55:37,976:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:37,976:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:37,976:WARNING:
2024-03-03 19:55:37,976:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:37,976:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:37,976:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:37,976:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:37,976:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:37,983:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:37,983:WARNING:  warnings.warn(
2024-03-03 19:55:38,356:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:38,356:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:38,356:WARNING:
2024-03-03 19:55:38,356:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:38,356:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:38,356:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:38,356:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:38,356:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:38,360:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:38,360:WARNING:  warnings.warn(
2024-03-03 19:55:38,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:38,727:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:38,727:WARNING:
2024-03-03 19:55:38,727:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:38,727:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:38,727:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:38,728:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:38,728:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:38,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:38,732:WARNING:  warnings.warn(
2024-03-03 19:55:39,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:39,101:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:39,101:WARNING:
2024-03-03 19:55:39,101:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:39,101:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:39,101:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:39,101:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:39,102:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:39,105:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:39,105:WARNING:  warnings.warn(
2024-03-03 19:55:39,483:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:39,483:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:39,483:WARNING:
2024-03-03 19:55:39,483:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:39,483:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:39,483:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:39,483:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:39,483:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:39,487:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:39,487:WARNING:  warnings.warn(
2024-03-03 19:55:39,859:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:39,859:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:39,859:WARNING:
2024-03-03 19:55:39,859:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:39,859:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:39,859:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:39,859:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:39,859:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:39,863:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:39,863:WARNING:  warnings.warn(
2024-03-03 19:55:40,257:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:40,257:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:40,257:WARNING:
2024-03-03 19:55:40,257:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:40,257:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:40,257:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:40,258:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:40,258:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:40,261:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:40,262:WARNING:  warnings.warn(
2024-03-03 19:55:40,628:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:40,628:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:40,628:WARNING:
2024-03-03 19:55:40,628:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:40,628:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:40,628:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:40,628:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:40,628:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:40,633:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:40,633:WARNING:  warnings.warn(
2024-03-03 19:55:41,036:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:41,036:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:41,036:WARNING:
2024-03-03 19:55:41,036:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:41,036:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:41,036:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:41,036:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:41,036:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:41,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:41,040:WARNING:  warnings.warn(
2024-03-03 19:55:41,423:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:41,423:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:41,423:WARNING:
2024-03-03 19:55:41,423:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:41,424:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:41,424:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:41,424:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:41,424:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:41,428:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:41,428:WARNING:  warnings.warn(
2024-03-03 19:55:41,799:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:41,799:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:41,800:WARNING:
2024-03-03 19:55:41,800:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:41,800:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:41,800:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:41,800:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:41,800:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:41,804:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:41,804:WARNING:  warnings.warn(
2024-03-03 19:55:42,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:42,180:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:42,180:WARNING:
2024-03-03 19:55:42,180:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:42,180:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:42,180:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:42,180:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:42,180:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:42,185:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:42,185:WARNING:  warnings.warn(
2024-03-03 19:55:42,569:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:42,571:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:42,571:WARNING:
2024-03-03 19:55:42,571:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:42,571:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:42,571:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:42,571:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:42,571:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:42,575:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:42,575:WARNING:  warnings.warn(
2024-03-03 19:55:42,946:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:42,946:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:42,946:WARNING:
2024-03-03 19:55:42,946:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:42,946:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:42,946:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:42,946:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:42,946:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:42,950:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:42,950:WARNING:  warnings.warn(
2024-03-03 19:55:43,327:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:43,327:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:43,327:WARNING:
2024-03-03 19:55:43,327:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:43,327:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:43,328:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:43,328:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:43,328:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:43,331:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:43,332:WARNING:  warnings.warn(
2024-03-03 19:55:43,710:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:43,710:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:43,710:WARNING:
2024-03-03 19:55:43,710:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:43,710:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:43,710:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:43,710:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:43,710:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:43,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:43,714:WARNING:  warnings.warn(
2024-03-03 19:55:44,112:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:44,112:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:44,112:WARNING:
2024-03-03 19:55:44,112:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:44,112:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:44,112:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:44,112:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:44,112:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:44,116:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:44,116:WARNING:  warnings.warn(
2024-03-03 19:55:44,501:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:44,501:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:44,501:WARNING:
2024-03-03 19:55:44,501:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:44,501:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:44,501:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:44,501:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:44,501:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:44,505:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:44,505:WARNING:  warnings.warn(
2024-03-03 19:55:44,861:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:44,861:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:44,861:WARNING:
2024-03-03 19:55:44,861:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:44,861:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:44,861:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:44,861:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:44,861:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:44,865:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:44,866:WARNING:  warnings.warn(
2024-03-03 19:55:45,230:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:45,230:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:45,230:WARNING:
2024-03-03 19:55:45,231:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:45,231:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:45,231:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:45,231:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:45,231:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:45,235:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:45,235:WARNING:  warnings.warn(
2024-03-03 19:55:45,601:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:45,602:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:45,602:WARNING:
2024-03-03 19:55:45,602:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:45,602:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:45,602:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:45,602:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:45,602:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:45,605:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:45,606:WARNING:  warnings.warn(
2024-03-03 19:55:45,976:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:45,976:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:45,976:WARNING:
2024-03-03 19:55:45,977:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:45,977:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:45,977:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:45,977:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:45,977:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:45,981:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:45,981:WARNING:  warnings.warn(
2024-03-03 19:55:46,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:46,348:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:46,348:WARNING:
2024-03-03 19:55:46,348:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:46,348:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:46,348:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:46,348:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:46,348:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:46,353:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:46,353:WARNING:  warnings.warn(
2024-03-03 19:55:46,743:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:46,743:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:46,743:WARNING:
2024-03-03 19:55:46,743:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:46,743:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:46,743:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:46,743:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:46,743:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:46,747:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:46,747:WARNING:  warnings.warn(
2024-03-03 19:55:47,139:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:47,139:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:47,139:WARNING:
2024-03-03 19:55:47,139:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:47,139:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:47,139:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:47,139:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:47,139:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:47,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:47,144:WARNING:  warnings.warn(
2024-03-03 19:55:47,522:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:47,522:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:47,522:WARNING:
2024-03-03 19:55:47,522:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:47,522:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:47,522:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:47,522:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:47,522:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:47,526:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:47,526:WARNING:  warnings.warn(
2024-03-03 19:55:47,879:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:47,879:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:47,879:WARNING:
2024-03-03 19:55:47,879:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:47,880:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:47,880:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:47,880:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:47,880:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:47,884:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:47,884:WARNING:  warnings.warn(
2024-03-03 19:55:48,239:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:48,239:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:48,239:WARNING:
2024-03-03 19:55:48,239:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:48,239:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:48,239:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:48,239:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:48,239:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:48,243:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:48,243:WARNING:  warnings.warn(
2024-03-03 19:55:48,631:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:48,631:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:48,631:WARNING:
2024-03-03 19:55:48,631:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:48,631:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:48,631:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:48,631:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:48,631:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:48,635:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:48,635:WARNING:  warnings.warn(
2024-03-03 19:55:49,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:49,020:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:49,020:WARNING:
2024-03-03 19:55:49,020:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:49,020:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:49,020:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:49,020:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:49,020:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:49,024:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:49,024:WARNING:  warnings.warn(
2024-03-03 19:55:49,395:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:49,395:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:49,395:WARNING:
2024-03-03 19:55:49,395:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:49,395:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:49,395:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:49,395:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:49,395:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:49,399:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:49,399:WARNING:  warnings.warn(
2024-03-03 19:55:49,790:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:49,790:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:49,790:WARNING:
2024-03-03 19:55:49,790:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:49,790:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:49,790:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:49,790:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:49,790:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:49,795:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:49,795:WARNING:  warnings.warn(
2024-03-03 19:55:50,194:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:50,194:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:50,195:WARNING:
2024-03-03 19:55:50,195:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:50,195:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:50,195:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:50,195:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:50,195:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:50,199:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:50,199:WARNING:  warnings.warn(
2024-03-03 19:55:50,567:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:50,567:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:50,567:WARNING:
2024-03-03 19:55:50,567:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:50,567:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:50,567:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:50,567:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:50,567:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:50,571:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:50,571:WARNING:  warnings.warn(
2024-03-03 19:55:50,960:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:50,960:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:50,960:WARNING:
2024-03-03 19:55:50,960:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:50,960:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:50,960:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:50,960:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:50,960:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:50,963:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:50,963:WARNING:  warnings.warn(
2024-03-03 19:55:51,345:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:51,345:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:51,345:WARNING:
2024-03-03 19:55:51,345:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:51,345:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:51,345:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:51,345:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:51,345:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:51,350:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:51,350:WARNING:  warnings.warn(
2024-03-03 19:55:51,736:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:51,736:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:51,736:WARNING:
2024-03-03 19:55:51,736:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:51,736:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:51,736:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:51,736:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:51,736:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:51,740:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:51,740:WARNING:  warnings.warn(
2024-03-03 19:55:52,128:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:52,128:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:52,128:WARNING:
2024-03-03 19:55:52,128:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:52,128:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:52,128:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:52,128:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:52,128:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:52,132:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:52,132:WARNING:  warnings.warn(
2024-03-03 19:55:52,518:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:52,518:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:52,518:WARNING:
2024-03-03 19:55:52,518:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:52,518:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:52,518:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:52,518:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:52,518:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:52,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:52,523:WARNING:  warnings.warn(
2024-03-03 19:55:52,922:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:52,922:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:52,922:WARNING:
2024-03-03 19:55:52,922:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:52,922:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:52,922:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:52,923:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:52,923:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:52,927:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:52,927:WARNING:  warnings.warn(
2024-03-03 19:55:53,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:53,315:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:53,315:WARNING:
2024-03-03 19:55:53,315:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:53,315:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:53,315:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:53,315:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:53,315:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:53,319:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:53,319:WARNING:  warnings.warn(
2024-03-03 19:55:53,694:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:53,696:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:53,696:WARNING:
2024-03-03 19:55:53,696:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:53,696:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:53,696:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:53,696:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:53,696:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:53,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:53,700:WARNING:  warnings.warn(
2024-03-03 19:55:54,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:54,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:54,083:WARNING:
2024-03-03 19:55:54,083:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:54,083:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:54,083:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:54,083:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:54,083:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:54,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:54,088:WARNING:  warnings.warn(
2024-03-03 19:55:54,464:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:54,464:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:54,464:WARNING:
2024-03-03 19:55:54,464:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:54,464:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:54,464:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:54,464:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:54,464:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:54,469:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:54,469:WARNING:  warnings.warn(
2024-03-03 19:55:54,836:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:54,836:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:54,836:WARNING:
2024-03-03 19:55:54,836:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:54,836:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:54,836:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:54,836:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:54,836:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:54,840:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:54,840:WARNING:  warnings.warn(
2024-03-03 19:55:55,243:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:55,243:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:55,243:WARNING:
2024-03-03 19:55:55,243:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:55,243:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:55,243:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:55,243:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:55,243:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:55,247:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:55,247:WARNING:  warnings.warn(
2024-03-03 19:55:55,598:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:55,599:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:55,599:WARNING:
2024-03-03 19:55:55,599:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:55,599:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:55,599:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:55,599:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:55,599:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:55,603:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:55,603:WARNING:  warnings.warn(
2024-03-03 19:55:55,955:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:55,955:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:55,955:WARNING:
2024-03-03 19:55:55,955:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:55,955:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:55,955:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:55,955:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:55,955:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:55,959:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:55,960:WARNING:  warnings.warn(
2024-03-03 19:55:56,343:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:56,343:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:56,343:WARNING:
2024-03-03 19:55:56,343:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:56,343:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:56,343:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:56,344:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:56,344:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:56,348:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:56,348:WARNING:  warnings.warn(
2024-03-03 19:55:56,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:56,705:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:56,705:WARNING:
2024-03-03 19:55:56,705:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:56,705:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:56,705:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:56,705:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:56,705:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:56,709:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:56,709:WARNING:  warnings.warn(
2024-03-03 19:55:57,074:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:57,074:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:57,074:WARNING:
2024-03-03 19:55:57,074:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:57,074:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:57,074:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:57,074:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:57,074:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:57,078:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:57,078:WARNING:  warnings.warn(
2024-03-03 19:55:57,476:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:57,477:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:57,477:WARNING:
2024-03-03 19:55:57,477:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:57,477:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:57,477:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:57,477:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:57,477:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:57,481:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:57,481:WARNING:  warnings.warn(
2024-03-03 19:55:57,864:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:57,864:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:57,864:WARNING:
2024-03-03 19:55:57,864:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:57,864:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:57,864:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:57,865:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:57,865:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:57,868:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:57,869:WARNING:  warnings.warn(
2024-03-03 19:55:58,227:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:58,227:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:58,227:WARNING:
2024-03-03 19:55:58,227:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:58,227:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:58,227:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:58,227:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:58,227:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:58,231:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:58,231:WARNING:  warnings.warn(
2024-03-03 19:55:58,613:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:58,614:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:58,614:WARNING:
2024-03-03 19:55:58,614:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:58,614:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:58,614:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:58,614:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:58,614:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:58,618:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:58,618:WARNING:  warnings.warn(
2024-03-03 19:55:59,016:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:59,016:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:59,016:WARNING:
2024-03-03 19:55:59,016:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:59,016:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:59,016:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:59,016:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:59,016:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:59,020:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:59,021:WARNING:  warnings.warn(
2024-03-03 19:55:59,397:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:59,398:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:59,398:WARNING:
2024-03-03 19:55:59,398:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:59,398:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:59,398:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:59,398:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:59,398:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:59,404:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:59,404:WARNING:  warnings.warn(
2024-03-03 19:55:59,775:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:55:59,775:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:55:59,775:WARNING:
2024-03-03 19:55:59,775:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:55:59,775:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:55:59,775:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:55:59,775:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:55:59,775:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:55:59,779:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:55:59,779:WARNING:  warnings.warn(
2024-03-03 19:56:00,143:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:00,143:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:00,143:WARNING:
2024-03-03 19:56:00,143:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:00,143:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:00,143:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:00,143:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:00,144:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:00,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:00,148:WARNING:  warnings.warn(
2024-03-03 19:56:00,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:00,510:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:00,510:WARNING:
2024-03-03 19:56:00,510:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:00,510:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:00,510:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:00,510:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:00,510:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:00,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:00,514:WARNING:  warnings.warn(
2024-03-03 19:56:00,915:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:00,915:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:00,915:WARNING:
2024-03-03 19:56:00,915:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:00,915:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:00,915:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:00,915:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:00,915:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:00,919:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:00,919:WARNING:  warnings.warn(
2024-03-03 19:56:01,293:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:01,293:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:01,293:WARNING:
2024-03-03 19:56:01,293:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:01,293:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:01,293:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:01,293:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:01,293:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:01,297:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:01,297:WARNING:  warnings.warn(
2024-03-03 19:56:01,689:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:01,689:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:01,689:WARNING:
2024-03-03 19:56:01,689:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:01,689:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:01,689:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:01,689:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:01,689:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:01,693:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:01,693:WARNING:  warnings.warn(
2024-03-03 19:56:02,082:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:02,082:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:02,082:WARNING:
2024-03-03 19:56:02,082:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:02,082:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:02,082:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:02,082:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:02,083:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:02,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:02,086:WARNING:  warnings.warn(
2024-03-03 19:56:02,477:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:02,477:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:02,479:WARNING:
2024-03-03 19:56:02,479:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:02,479:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:02,479:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:02,479:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:02,479:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:02,482:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:02,483:WARNING:  warnings.warn(
2024-03-03 19:56:02,854:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:02,854:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:02,854:WARNING:
2024-03-03 19:56:02,854:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:02,854:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:02,854:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:02,854:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:02,854:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:02,858:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:02,858:WARNING:  warnings.warn(
2024-03-03 19:56:03,222:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:03,222:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:03,222:WARNING:
2024-03-03 19:56:03,222:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:03,222:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:03,222:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:03,222:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:03,222:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:03,226:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:03,226:WARNING:  warnings.warn(
2024-03-03 19:56:03,621:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:03,621:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:03,621:WARNING:
2024-03-03 19:56:03,621:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:03,621:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:03,621:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:03,621:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:03,621:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:03,625:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:03,625:WARNING:  warnings.warn(
2024-03-03 19:56:04,009:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:04,009:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:04,009:WARNING:
2024-03-03 19:56:04,009:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:04,009:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:04,009:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:04,009:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:04,009:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:04,013:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:04,014:WARNING:  warnings.warn(
2024-03-03 19:56:04,406:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:04,406:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:04,406:WARNING:
2024-03-03 19:56:04,406:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:04,406:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:04,406:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:04,406:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:04,406:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:04,410:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:04,410:WARNING:  warnings.warn(
2024-03-03 19:56:04,763:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:04,763:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:04,763:WARNING:
2024-03-03 19:56:04,763:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:04,763:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:04,763:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:04,763:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:04,763:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:04,767:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:04,767:WARNING:  warnings.warn(
2024-03-03 19:56:05,159:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:05,159:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:05,159:WARNING:
2024-03-03 19:56:05,159:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:05,159:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:05,161:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:05,161:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:05,161:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:05,164:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:05,164:WARNING:  warnings.warn(
2024-03-03 19:56:05,524:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:05,524:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:05,524:WARNING:
2024-03-03 19:56:05,524:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:05,524:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:05,524:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:05,524:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:05,524:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:05,527:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:05,527:WARNING:  warnings.warn(
2024-03-03 19:56:05,906:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:05,906:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:05,906:WARNING:
2024-03-03 19:56:05,906:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:05,906:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:05,906:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:05,906:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:05,906:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:05,911:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:05,911:WARNING:  warnings.warn(
2024-03-03 19:56:06,300:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:06,300:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:06,300:WARNING:
2024-03-03 19:56:06,300:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:06,300:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:06,300:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:06,300:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:06,300:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:06,304:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:06,304:WARNING:  warnings.warn(
2024-03-03 19:56:06,692:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:06,693:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:06,693:WARNING:
2024-03-03 19:56:06,693:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:06,693:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:06,693:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:06,693:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:06,693:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:06,697:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:06,697:WARNING:  warnings.warn(
2024-03-03 19:56:07,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:07,096:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:07,096:WARNING:
2024-03-03 19:56:07,096:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:07,096:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:07,096:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:07,096:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:07,096:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:07,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:07,101:WARNING:  warnings.warn(
2024-03-03 19:56:07,491:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:07,491:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:07,491:WARNING:
2024-03-03 19:56:07,491:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:07,491:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:07,491:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:07,491:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:07,491:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:07,495:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:07,495:WARNING:  warnings.warn(
2024-03-03 19:56:07,853:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:07,853:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:07,853:WARNING:
2024-03-03 19:56:07,853:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:07,853:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:07,853:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:07,853:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:07,853:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:07,858:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:07,858:WARNING:  warnings.warn(
2024-03-03 19:56:08,248:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:08,248:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:08,248:WARNING:
2024-03-03 19:56:08,248:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:08,248:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:08,248:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:08,248:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:08,248:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:08,253:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:08,253:WARNING:  warnings.warn(
2024-03-03 19:56:08,632:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:08,632:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:08,632:WARNING:
2024-03-03 19:56:08,632:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:08,632:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:08,632:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:08,632:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:08,632:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:08,636:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:08,636:WARNING:  warnings.warn(
2024-03-03 19:56:09,011:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:09,012:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:09,012:WARNING:
2024-03-03 19:56:09,012:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:09,012:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:09,012:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:09,012:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:09,012:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:09,015:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:09,015:WARNING:  warnings.warn(
2024-03-03 19:56:09,388:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:09,388:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:09,388:WARNING:
2024-03-03 19:56:09,388:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:09,388:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:09,388:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:09,388:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:09,388:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:09,393:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:09,393:WARNING:  warnings.warn(
2024-03-03 19:56:09,770:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:09,772:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:09,772:WARNING:
2024-03-03 19:56:09,772:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:09,772:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:09,772:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:09,772:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:09,772:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:09,775:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:09,776:WARNING:  warnings.warn(
2024-03-03 19:56:10,169:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:10,170:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:10,170:WARNING:
2024-03-03 19:56:10,170:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:10,170:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:10,170:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:10,170:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:10,170:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:10,175:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:10,175:WARNING:  warnings.warn(
2024-03-03 19:56:10,549:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:10,549:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:10,549:WARNING:
2024-03-03 19:56:10,549:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:10,549:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:10,549:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:10,549:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:10,549:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:10,553:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:10,553:WARNING:  warnings.warn(
2024-03-03 19:56:10,940:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:10,940:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:10,940:WARNING:
2024-03-03 19:56:10,940:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:10,940:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:10,940:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:10,940:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:10,940:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:10,945:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:10,945:WARNING:  warnings.warn(
2024-03-03 19:56:11,353:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:11,353:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:11,353:WARNING:
2024-03-03 19:56:11,353:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:11,353:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:11,353:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:11,353:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:11,353:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:11,357:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:11,357:WARNING:  warnings.warn(
2024-03-03 19:56:11,754:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:11,754:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:11,754:WARNING:
2024-03-03 19:56:11,754:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:11,754:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:11,754:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:11,754:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:11,755:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:11,758:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:11,758:WARNING:  warnings.warn(
2024-03-03 19:56:12,149:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:12,149:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:12,149:WARNING:
2024-03-03 19:56:12,149:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:12,150:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:12,150:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:12,150:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:12,150:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:12,153:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:12,153:WARNING:  warnings.warn(
2024-03-03 19:56:12,546:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:12,546:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:12,546:WARNING:
2024-03-03 19:56:12,546:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:12,546:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:12,546:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:12,546:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:12,546:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:12,551:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:12,551:WARNING:  warnings.warn(
2024-03-03 19:56:12,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:12,932:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:12,932:WARNING:
2024-03-03 19:56:12,933:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:12,933:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:12,933:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:12,933:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:12,933:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:12,936:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:12,936:WARNING:  warnings.warn(
2024-03-03 19:56:13,310:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:13,310:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:13,311:WARNING:
2024-03-03 19:56:13,311:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:13,311:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:13,311:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:13,311:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:13,311:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:13,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:13,315:WARNING:  warnings.warn(
2024-03-03 19:56:13,691:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:13,691:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:13,691:WARNING:
2024-03-03 19:56:13,691:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:13,691:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:13,691:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:13,691:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:13,692:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:13,696:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:13,696:WARNING:  warnings.warn(
2024-03-03 19:56:14,086:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:14,086:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:14,086:WARNING:
2024-03-03 19:56:14,086:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:14,086:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:14,086:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:14,086:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:14,087:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:14,091:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:14,091:WARNING:  warnings.warn(
2024-03-03 19:56:14,456:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:14,456:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:14,456:WARNING:
2024-03-03 19:56:14,456:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:14,456:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:14,456:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:14,456:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:14,456:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:14,461:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:14,461:WARNING:  warnings.warn(
2024-03-03 19:56:14,844:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:14,845:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:14,845:WARNING:
2024-03-03 19:56:14,845:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:14,845:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:14,845:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:14,845:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:14,845:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:14,849:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:14,849:WARNING:  warnings.warn(
2024-03-03 19:56:15,218:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:15,218:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:15,218:WARNING:
2024-03-03 19:56:15,218:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:15,218:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:15,218:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:15,218:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:15,218:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:15,222:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:15,222:WARNING:  warnings.warn(
2024-03-03 19:56:15,593:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:15,593:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:15,593:WARNING:
2024-03-03 19:56:15,593:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:15,593:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:15,593:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:15,593:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:15,593:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:15,597:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:15,597:WARNING:  warnings.warn(
2024-03-03 19:56:15,932:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:15,932:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:15,932:WARNING:
2024-03-03 19:56:15,932:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:15,932:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:15,932:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:15,932:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:15,932:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:15,936:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:15,936:WARNING:  warnings.warn(
2024-03-03 19:56:16,298:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:16,298:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:16,298:WARNING:
2024-03-03 19:56:16,298:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:16,299:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:16,299:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:16,299:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:16,299:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:16,303:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:16,303:WARNING:  warnings.warn(
2024-03-03 19:56:16,693:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:16,693:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:16,693:WARNING:
2024-03-03 19:56:16,693:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:16,693:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:16,693:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:16,693:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:16,693:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:16,699:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:16,699:WARNING:  warnings.warn(
2024-03-03 19:56:17,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:17,087:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:17,087:WARNING:
2024-03-03 19:56:17,087:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:17,087:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:17,087:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:17,087:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:17,087:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:17,091:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:17,091:WARNING:  warnings.warn(
2024-03-03 19:56:17,476:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:17,476:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:17,476:WARNING:
2024-03-03 19:56:17,476:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:17,476:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:17,476:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:17,476:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:17,476:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:17,480:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:17,480:WARNING:  warnings.warn(
2024-03-03 19:56:17,856:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:17,856:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:17,856:WARNING:
2024-03-03 19:56:17,856:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:17,856:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:17,856:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:17,856:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:17,856:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:17,861:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:17,861:WARNING:  warnings.warn(
2024-03-03 19:56:18,248:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:18,248:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:18,248:WARNING:
2024-03-03 19:56:18,248:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:18,248:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:18,248:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:18,248:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:18,248:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:18,252:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:18,252:WARNING:  warnings.warn(
2024-03-03 19:56:18,621:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:18,622:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:18,622:WARNING:
2024-03-03 19:56:18,622:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:18,622:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:18,622:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:18,622:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:18,622:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:18,626:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:18,626:WARNING:  warnings.warn(
2024-03-03 19:56:19,039:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:19,040:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:19,040:WARNING:
2024-03-03 19:56:19,040:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:19,040:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:19,040:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:19,040:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:19,040:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:19,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:19,045:WARNING:  warnings.warn(
2024-03-03 19:56:19,405:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:19,405:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:19,405:WARNING:
2024-03-03 19:56:19,405:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:19,405:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:19,405:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:19,405:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:19,405:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:19,409:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:19,409:WARNING:  warnings.warn(
2024-03-03 19:56:19,801:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:19,801:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:19,801:WARNING:
2024-03-03 19:56:19,801:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:19,801:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:19,801:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:19,801:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:19,801:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:19,807:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:19,807:WARNING:  warnings.warn(
2024-03-03 19:56:20,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:20,196:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:20,196:WARNING:
2024-03-03 19:56:20,197:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:20,197:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:20,197:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:20,197:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:20,197:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:20,200:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:20,201:WARNING:  warnings.warn(
2024-03-03 19:56:20,566:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:20,566:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:20,566:WARNING:
2024-03-03 19:56:20,566:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:20,566:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:20,566:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:20,566:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:20,566:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:20,570:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:20,570:WARNING:  warnings.warn(
2024-03-03 19:56:20,938:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:20,938:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:20,938:WARNING:
2024-03-03 19:56:20,939:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:20,939:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:20,939:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:20,939:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:20,939:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:20,942:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:20,942:WARNING:  warnings.warn(
2024-03-03 19:56:21,335:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:21,335:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:21,335:WARNING:
2024-03-03 19:56:21,335:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:21,335:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:21,335:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:21,335:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:21,335:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:21,339:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:21,339:WARNING:  warnings.warn(
2024-03-03 19:56:21,716:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:21,716:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:21,716:WARNING:
2024-03-03 19:56:21,716:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:21,716:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:21,716:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:21,716:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:21,716:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:21,720:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:21,720:WARNING:  warnings.warn(
2024-03-03 19:56:22,089:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:22,089:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:22,089:WARNING:
2024-03-03 19:56:22,089:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:22,089:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:22,089:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:22,089:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:22,089:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:22,093:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:22,093:WARNING:  warnings.warn(
2024-03-03 19:56:22,465:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:22,465:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:22,465:WARNING:
2024-03-03 19:56:22,465:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:22,465:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:22,465:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:22,465:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:22,465:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:22,468:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:22,468:WARNING:  warnings.warn(
2024-03-03 19:56:22,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:22,823:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:22,823:WARNING:
2024-03-03 19:56:22,823:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:22,823:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:22,824:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:22,824:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:22,824:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:22,827:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:22,827:WARNING:  warnings.warn(
2024-03-03 19:56:23,205:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:23,205:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:23,205:WARNING:
2024-03-03 19:56:23,206:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:23,206:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:23,206:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:23,206:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:23,206:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:23,211:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:23,211:WARNING:  warnings.warn(
2024-03-03 19:56:23,598:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:23,599:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:23,599:WARNING:
2024-03-03 19:56:23,599:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:23,599:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:23,599:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:23,599:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:23,599:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:23,603:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:23,603:WARNING:  warnings.warn(
2024-03-03 19:56:23,956:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:23,956:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:23,956:WARNING:
2024-03-03 19:56:23,957:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:23,957:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:23,957:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:23,957:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:23,957:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:23,961:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:23,961:WARNING:  warnings.warn(
2024-03-03 19:56:24,308:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:24,308:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:24,309:WARNING:
2024-03-03 19:56:24,309:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:24,309:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:24,309:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:24,309:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:24,309:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:24,313:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:24,313:WARNING:  warnings.warn(
2024-03-03 19:56:24,671:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:24,671:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:24,671:WARNING:
2024-03-03 19:56:24,671:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:24,671:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:24,671:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:24,671:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:24,671:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:24,675:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:24,676:WARNING:  warnings.warn(
2024-03-03 19:56:25,040:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:25,040:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:25,040:WARNING:
2024-03-03 19:56:25,040:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:25,040:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:25,040:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:25,040:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:25,040:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:25,044:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:25,044:WARNING:  warnings.warn(
2024-03-03 19:56:25,406:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:25,406:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:25,406:WARNING:
2024-03-03 19:56:25,406:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:25,406:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:25,406:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:25,406:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:25,406:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:25,411:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:25,411:WARNING:  warnings.warn(
2024-03-03 19:56:25,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:25,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:25,793:WARNING:
2024-03-03 19:56:25,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:25,793:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:25,793:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:25,793:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:25,793:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:25,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:25,797:WARNING:  warnings.warn(
2024-03-03 19:56:26,202:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:26,202:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:26,202:WARNING:
2024-03-03 19:56:26,202:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:26,202:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:26,202:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:26,202:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:26,202:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:26,207:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:26,207:WARNING:  warnings.warn(
2024-03-03 19:56:26,607:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:26,607:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:26,607:WARNING:
2024-03-03 19:56:26,607:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:26,607:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:26,607:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:26,607:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:26,607:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:26,612:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:26,612:WARNING:  warnings.warn(
2024-03-03 19:56:26,982:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:26,982:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:26,983:WARNING:
2024-03-03 19:56:26,983:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:26,983:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:26,983:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:26,983:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:26,983:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:26,987:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:26,988:WARNING:  warnings.warn(
2024-03-03 19:56:27,363:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:27,363:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:27,363:WARNING:
2024-03-03 19:56:27,363:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:27,363:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:27,363:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:27,363:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:27,363:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:27,369:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:27,369:WARNING:  warnings.warn(
2024-03-03 19:56:27,766:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:27,766:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:27,766:WARNING:
2024-03-03 19:56:27,766:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:27,766:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:27,766:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:27,766:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:27,766:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:27,771:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:27,771:WARNING:  warnings.warn(
2024-03-03 19:56:28,144:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:28,144:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:28,144:WARNING:
2024-03-03 19:56:28,144:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:28,144:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:28,144:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:28,144:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:28,144:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:28,148:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:28,148:WARNING:  warnings.warn(
2024-03-03 19:56:28,503:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:28,503:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:28,503:WARNING:
2024-03-03 19:56:28,503:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:28,503:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:28,503:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:28,503:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:28,503:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:28,508:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:28,508:WARNING:  warnings.warn(
2024-03-03 19:56:28,878:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:28,879:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:28,879:WARNING:
2024-03-03 19:56:28,879:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:28,879:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:28,879:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:28,879:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:28,879:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:28,884:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:28,947:WARNING:  warnings.warn(
2024-03-03 19:56:29,346:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:29,346:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:29,346:WARNING:
2024-03-03 19:56:29,346:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:29,346:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:29,346:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:29,346:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:29,346:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:29,350:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:29,350:WARNING:  warnings.warn(
2024-03-03 19:56:29,712:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:29,712:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:29,712:WARNING:
2024-03-03 19:56:29,712:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:29,712:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:29,712:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:29,712:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:29,712:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:29,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:29,719:WARNING:  warnings.warn(
2024-03-03 19:56:30,121:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:30,121:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:30,121:WARNING:
2024-03-03 19:56:30,121:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:30,121:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:30,121:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:30,121:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:30,121:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:30,126:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:30,126:WARNING:  warnings.warn(
2024-03-03 19:56:30,502:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:30,502:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:30,502:WARNING:
2024-03-03 19:56:30,502:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:30,502:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:30,502:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:30,503:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:30,503:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:30,507:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:30,507:WARNING:  warnings.warn(
2024-03-03 19:56:30,881:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:30,881:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:30,881:WARNING:
2024-03-03 19:56:30,881:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:30,881:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:30,881:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:30,881:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:30,881:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:30,885:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:30,885:WARNING:  warnings.warn(
2024-03-03 19:56:31,269:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:31,269:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:31,269:WARNING:
2024-03-03 19:56:31,270:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:31,270:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:31,270:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:31,270:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:31,270:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:31,274:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:31,274:WARNING:  warnings.warn(
2024-03-03 19:56:31,650:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:31,650:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:31,650:WARNING:
2024-03-03 19:56:31,650:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:31,650:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:31,650:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:31,650:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:31,651:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:31,655:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:31,655:WARNING:  warnings.warn(
2024-03-03 19:56:32,062:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:32,062:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:32,062:WARNING:
2024-03-03 19:56:32,062:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:32,062:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:32,062:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:32,062:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:32,062:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:32,066:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:32,066:WARNING:  warnings.warn(
2024-03-03 19:56:32,443:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:32,443:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:32,443:WARNING:
2024-03-03 19:56:32,444:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:32,444:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:32,444:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:32,444:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:32,444:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:32,447:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:32,447:WARNING:  warnings.warn(
2024-03-03 19:56:32,793:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:32,793:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:32,793:WARNING:
2024-03-03 19:56:32,793:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:32,793:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:32,793:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:32,793:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:32,793:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:32,797:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:32,797:WARNING:  warnings.warn(
2024-03-03 19:56:33,165:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:33,166:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:33,166:WARNING:
2024-03-03 19:56:33,166:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:33,166:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:33,166:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:33,166:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:33,166:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:33,170:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:33,170:WARNING:  warnings.warn(
2024-03-03 19:56:33,542:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:33,542:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:33,542:WARNING:
2024-03-03 19:56:33,542:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:33,542:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:33,543:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:33,543:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:33,543:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:33,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:33,547:WARNING:  warnings.warn(
2024-03-03 19:56:33,895:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:33,895:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:33,895:WARNING:
2024-03-03 19:56:33,895:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:33,895:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:33,895:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:33,895:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:33,895:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:33,899:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:33,899:WARNING:  warnings.warn(
2024-03-03 19:56:34,300:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:34,300:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:34,301:WARNING:
2024-03-03 19:56:34,301:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:34,301:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:34,301:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:34,301:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:34,301:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:34,305:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:34,306:WARNING:  warnings.warn(
2024-03-03 19:56:34,683:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:34,684:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:34,684:WARNING:
2024-03-03 19:56:34,684:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:34,684:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:34,684:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:34,684:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:34,684:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:34,688:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:34,688:WARNING:  warnings.warn(
2024-03-03 19:56:35,072:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:35,072:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:35,072:WARNING:
2024-03-03 19:56:35,072:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:35,072:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:35,072:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:35,072:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:35,072:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:35,077:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:35,077:WARNING:  warnings.warn(
2024-03-03 19:56:35,440:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:35,440:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:35,440:WARNING:
2024-03-03 19:56:35,440:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:35,440:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:35,440:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:35,440:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:35,440:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:35,444:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:35,444:WARNING:  warnings.warn(
2024-03-03 19:56:35,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:35,819:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:35,819:WARNING:
2024-03-03 19:56:35,819:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:35,819:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:35,819:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:35,819:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:35,819:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:35,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:35,823:WARNING:  warnings.warn(
2024-03-03 19:56:36,206:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:36,206:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:36,206:WARNING:
2024-03-03 19:56:36,206:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:36,206:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:36,206:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:36,206:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:36,207:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:36,212:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:36,212:WARNING:  warnings.warn(
2024-03-03 19:56:36,606:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:36,606:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:36,606:WARNING:
2024-03-03 19:56:36,606:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:36,607:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:36,607:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:36,607:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:36,607:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:36,610:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:36,610:WARNING:  warnings.warn(
2024-03-03 19:56:36,989:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:36,989:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:36,989:WARNING:
2024-03-03 19:56:36,989:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:36,989:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:36,989:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:36,989:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:36,989:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:36,993:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:36,993:WARNING:  warnings.warn(
2024-03-03 19:56:37,350:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:37,350:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:37,350:WARNING:
2024-03-03 19:56:37,350:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:37,350:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:37,350:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:37,350:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:37,350:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:37,354:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:37,354:WARNING:  warnings.warn(
2024-03-03 19:56:37,723:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:37,723:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:37,723:WARNING:
2024-03-03 19:56:37,723:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:37,723:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:37,723:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:37,723:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:37,723:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:37,727:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:37,727:WARNING:  warnings.warn(
2024-03-03 19:56:38,122:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:38,122:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:38,122:WARNING:
2024-03-03 19:56:38,122:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:38,123:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:38,123:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:38,123:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:38,123:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:38,127:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:38,127:WARNING:  warnings.warn(
2024-03-03 19:56:38,519:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:38,519:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:38,519:WARNING:
2024-03-03 19:56:38,519:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:38,519:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:38,519:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:38,519:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:38,519:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:38,523:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:38,524:WARNING:  warnings.warn(
2024-03-03 19:56:38,905:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:38,905:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:38,905:WARNING:
2024-03-03 19:56:38,905:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:38,905:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:38,905:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:38,905:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:38,905:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:38,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:38,909:WARNING:  warnings.warn(
2024-03-03 19:56:39,281:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:39,281:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:39,281:WARNING:
2024-03-03 19:56:39,282:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:39,282:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:39,282:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:39,282:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:39,282:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:39,285:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:39,285:WARNING:  warnings.warn(
2024-03-03 19:56:39,664:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:39,664:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:39,665:WARNING:
2024-03-03 19:56:39,665:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:39,665:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:39,665:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:39,665:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:39,665:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:39,669:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:39,669:WARNING:  warnings.warn(
2024-03-03 19:56:40,047:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:40,047:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:40,047:WARNING:
2024-03-03 19:56:40,047:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:40,047:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:40,047:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:40,047:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:40,047:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:40,051:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:40,051:WARNING:  warnings.warn(
2024-03-03 19:56:40,403:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:40,403:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:40,404:WARNING:
2024-03-03 19:56:40,404:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:40,404:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:40,404:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:40,404:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:40,404:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:40,407:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:40,408:WARNING:  warnings.warn(
2024-03-03 19:56:40,812:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:40,813:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:40,813:WARNING:
2024-03-03 19:56:40,813:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:40,813:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:40,813:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:40,813:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:40,813:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:40,817:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:40,817:WARNING:  warnings.warn(
2024-03-03 19:56:41,210:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:41,210:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:41,210:WARNING:
2024-03-03 19:56:41,210:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:41,210:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:41,210:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:41,210:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:41,210:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:41,214:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:41,214:WARNING:  warnings.warn(
2024-03-03 19:56:41,577:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:41,577:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:41,577:WARNING:
2024-03-03 19:56:41,577:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:41,577:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:41,577:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:41,577:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:41,577:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:41,581:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:41,581:WARNING:  warnings.warn(
2024-03-03 19:56:41,980:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:41,980:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:41,980:WARNING:
2024-03-03 19:56:41,980:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:41,980:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:41,980:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:41,980:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:41,980:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:41,984:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:41,984:WARNING:  warnings.warn(
2024-03-03 19:56:42,343:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:42,343:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:42,343:WARNING:
2024-03-03 19:56:42,343:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:42,343:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:42,343:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:42,343:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:42,343:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:42,347:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:42,348:WARNING:  warnings.warn(
2024-03-03 19:56:42,732:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:42,732:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:42,732:WARNING:
2024-03-03 19:56:42,732:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:42,732:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:42,732:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:42,732:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:42,732:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:42,738:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:42,738:WARNING:  warnings.warn(
2024-03-03 19:56:43,117:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:43,117:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:43,117:WARNING:
2024-03-03 19:56:43,117:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:43,117:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:43,117:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:43,117:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:43,117:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:43,121:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:43,121:WARNING:  warnings.warn(
2024-03-03 19:56:43,510:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:43,510:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:43,510:WARNING:
2024-03-03 19:56:43,510:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:43,510:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:43,510:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:43,510:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:43,510:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:43,514:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:43,514:WARNING:  warnings.warn(
2024-03-03 19:56:43,873:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:43,936:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:43,936:WARNING:
2024-03-03 19:56:43,936:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:43,936:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:43,936:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:43,936:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:43,936:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:43,946:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:43,947:WARNING:  warnings.warn(
2024-03-03 19:56:44,336:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:44,336:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:44,336:WARNING:
2024-03-03 19:56:44,336:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:44,336:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:44,336:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:44,336:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:44,336:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:44,340:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:44,340:WARNING:  warnings.warn(
2024-03-03 19:56:44,714:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:44,714:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:44,714:WARNING:
2024-03-03 19:56:44,714:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:44,714:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:44,714:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:44,714:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:44,714:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:44,718:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:44,718:WARNING:  warnings.warn(
2024-03-03 19:56:45,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:45,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:45,083:WARNING:
2024-03-03 19:56:45,083:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:45,083:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:45,083:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:45,083:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:45,083:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:45,087:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:45,087:WARNING:  warnings.warn(
2024-03-03 19:56:45,445:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:45,445:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:45,445:WARNING:
2024-03-03 19:56:45,445:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:45,445:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:45,445:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:45,445:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:45,445:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:45,449:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:45,449:WARNING:  warnings.warn(
2024-03-03 19:56:45,810:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:45,810:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:45,810:WARNING:
2024-03-03 19:56:45,810:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:45,810:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:45,811:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:45,811:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:45,811:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:45,814:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:45,814:WARNING:  warnings.warn(
2024-03-03 19:56:46,166:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:46,166:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:46,166:WARNING:
2024-03-03 19:56:46,166:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:46,166:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:46,166:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:46,166:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:46,168:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:46,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:46,171:WARNING:  warnings.warn(
2024-03-03 19:56:46,543:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:46,543:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:46,543:WARNING:
2024-03-03 19:56:46,543:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:46,543:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:46,543:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:46,543:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:46,543:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:46,547:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:46,547:WARNING:  warnings.warn(
2024-03-03 19:56:46,909:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:46,909:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:46,909:WARNING:
2024-03-03 19:56:46,909:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:46,909:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:46,909:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:46,909:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:46,909:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:46,914:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:46,914:WARNING:  warnings.warn(
2024-03-03 19:56:47,315:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:47,316:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:47,316:WARNING:
2024-03-03 19:56:47,316:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:47,316:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:47,316:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:47,316:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:47,316:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:47,320:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:47,320:WARNING:  warnings.warn(
2024-03-03 19:56:47,715:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:47,715:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:47,715:WARNING:
2024-03-03 19:56:47,715:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:47,715:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:47,715:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:47,715:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:47,715:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:47,719:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:47,719:WARNING:  warnings.warn(
2024-03-03 19:56:48,109:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:48,109:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:48,109:WARNING:
2024-03-03 19:56:48,109:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:48,109:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:48,109:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:48,109:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:48,109:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:48,113:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:48,113:WARNING:  warnings.warn(
2024-03-03 19:56:48,478:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:48,478:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:48,478:WARNING:
2024-03-03 19:56:48,478:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:48,478:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:48,478:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:48,478:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:48,478:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:48,482:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:48,482:WARNING:  warnings.warn(
2024-03-03 19:56:48,819:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:48,819:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:48,819:WARNING:
2024-03-03 19:56:48,819:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:48,819:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:48,819:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:48,819:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:48,819:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:48,824:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:48,824:WARNING:  warnings.warn(
2024-03-03 19:56:49,176:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:49,176:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:49,176:WARNING:
2024-03-03 19:56:49,176:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:49,176:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:49,176:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:49,176:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:49,176:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:49,180:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:49,180:WARNING:  warnings.warn(
2024-03-03 19:56:49,558:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:49,558:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:49,558:WARNING:
2024-03-03 19:56:49,558:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:49,558:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:49,558:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:49,558:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:49,559:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:49,562:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:49,562:WARNING:  warnings.warn(
2024-03-03 19:56:49,938:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:49,938:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:49,939:WARNING:
2024-03-03 19:56:49,939:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:49,939:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:49,939:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:49,939:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:49,939:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:49,946:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:49,946:WARNING:  warnings.warn(
2024-03-03 19:56:50,321:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:50,321:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:50,321:WARNING:
2024-03-03 19:56:50,321:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:50,321:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:50,321:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:50,321:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:50,321:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:50,325:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:50,325:WARNING:  warnings.warn(
2024-03-03 19:56:50,700:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:50,749:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:50,749:WARNING:
2024-03-03 19:56:50,749:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:50,749:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:50,749:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:50,749:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:50,749:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:50,761:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:50,761:WARNING:  warnings.warn(
2024-03-03 19:56:51,167:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:51,167:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:51,167:WARNING:
2024-03-03 19:56:51,167:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:51,167:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:51,167:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:51,167:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:51,167:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:51,171:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:51,171:WARNING:  warnings.warn(
2024-03-03 19:56:51,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:51,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:51,583:WARNING:
2024-03-03 19:56:51,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:51,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:51,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:51,583:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:51,583:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:51,588:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:51,588:WARNING:  warnings.warn(
2024-03-03 19:56:51,952:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:51,952:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:51,953:WARNING:
2024-03-03 19:56:51,953:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:51,953:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:51,953:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:51,953:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:51,953:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:51,956:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:51,957:WARNING:  warnings.warn(
2024-03-03 19:56:52,346:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:52,346:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:52,346:WARNING:
2024-03-03 19:56:52,346:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:52,346:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:52,346:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:52,346:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:52,346:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:52,351:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:52,351:WARNING:  warnings.warn(
2024-03-03 19:56:52,729:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:52,729:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:52,729:WARNING:
2024-03-03 19:56:52,729:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:52,729:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:52,729:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:52,729:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:52,729:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:52,734:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:52,734:WARNING:  warnings.warn(
2024-03-03 19:56:53,096:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:53,097:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:53,097:WARNING:
2024-03-03 19:56:53,097:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:53,097:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:53,097:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:53,097:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:53,097:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:53,101:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:53,101:WARNING:  warnings.warn(
2024-03-03 19:56:53,473:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:53,475:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:53,475:WARNING:
2024-03-03 19:56:53,475:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:53,475:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:53,475:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:53,475:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:53,475:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:53,479:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:53,479:WARNING:  warnings.warn(
2024-03-03 19:56:53,866:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:53,866:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:53,866:WARNING:
2024-03-03 19:56:53,866:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:53,866:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:53,866:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:53,866:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:53,866:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:53,870:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:53,870:WARNING:  warnings.warn(
2024-03-03 19:56:54,243:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:54,243:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:54,243:WARNING:
2024-03-03 19:56:54,243:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:54,243:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:54,243:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:54,243:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:54,243:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:54,247:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:54,247:WARNING:  warnings.warn(
2024-03-03 19:56:54,635:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:54,635:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:54,635:WARNING:
2024-03-03 19:56:54,635:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:54,635:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:54,635:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:54,635:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:54,635:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:54,639:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:54,639:WARNING:  warnings.warn(
2024-03-03 19:56:55,008:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:55,008:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:55,008:WARNING:
2024-03-03 19:56:55,008:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:55,008:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:55,008:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:55,008:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:55,008:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:55,012:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:55,012:WARNING:  warnings.warn(
2024-03-03 19:56:55,368:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:55,369:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:55,369:WARNING:
2024-03-03 19:56:55,369:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:55,369:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:55,369:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:55,369:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:55,369:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:55,372:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:55,372:WARNING:  warnings.warn(
2024-03-03 19:56:55,747:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:55,747:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:55,747:WARNING:
2024-03-03 19:56:55,747:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:55,747:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:55,747:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:55,747:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:55,748:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:55,752:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:55,752:WARNING:  warnings.warn(
2024-03-03 19:56:56,158:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:56,158:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:56,158:WARNING:
2024-03-03 19:56:56,158:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:56,159:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:56,159:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:56,159:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:56,159:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:56,163:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:56,163:WARNING:  warnings.warn(
2024-03-03 19:56:56,534:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:56,534:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:56,534:WARNING:
2024-03-03 19:56:56,534:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:56,534:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:56,534:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:56,535:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:56,535:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:56,538:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:56,538:WARNING:  warnings.warn(
2024-03-03 19:56:56,921:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:56,921:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:56,921:WARNING:
2024-03-03 19:56:56,921:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:56,921:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:56,921:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:56,921:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:56,921:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:56,925:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:56,925:WARNING:  warnings.warn(
2024-03-03 19:56:57,294:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:57,295:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:57,295:WARNING:
2024-03-03 19:56:57,295:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:57,295:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:57,295:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:57,295:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:57,295:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:57,299:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:57,299:WARNING:  warnings.warn(
2024-03-03 19:56:57,680:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:57,680:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:57,680:WARNING:
2024-03-03 19:56:57,680:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:57,680:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:57,680:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:57,680:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:57,680:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:57,684:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:57,684:WARNING:  warnings.warn(
2024-03-03 19:56:58,083:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:58,083:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:58,083:WARNING:
2024-03-03 19:56:58,083:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:58,083:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:58,083:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:58,084:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:58,084:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:58,088:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:58,088:WARNING:  warnings.warn(
2024-03-03 19:56:58,449:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:58,449:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:58,449:WARNING:
2024-03-03 19:56:58,449:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:58,449:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:58,449:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:58,449:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:58,449:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:58,452:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:58,452:WARNING:  warnings.warn(
2024-03-03 19:56:58,823:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:58,823:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:58,823:WARNING:
2024-03-03 19:56:58,823:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:58,823:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:58,823:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:58,823:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:58,823:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:58,828:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:58,828:WARNING:  warnings.warn(
2024-03-03 19:56:59,192:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:59,192:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:59,192:WARNING:
2024-03-03 19:56:59,192:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:59,192:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:59,192:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:59,192:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:59,192:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:59,196:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:59,196:WARNING:  warnings.warn(
2024-03-03 19:56:59,583:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:59,583:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:59,583:WARNING:
2024-03-03 19:56:59,583:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:59,583:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:59,583:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:59,583:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:59,583:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:59,587:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:59,587:WARNING:  warnings.warn(
2024-03-03 19:56:59,925:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:56:59,925:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:56:59,925:WARNING:
2024-03-03 19:56:59,925:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:56:59,925:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:56:59,925:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:56:59,925:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:56:59,925:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:56:59,929:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:56:59,929:WARNING:  warnings.warn(
2024-03-03 19:57:00,327:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:57:00,327:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:57:00,327:WARNING:
2024-03-03 19:57:00,327:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:57:00,328:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:57:00,328:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:57:00,328:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:57:00,328:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:57:00,332:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:57:00,332:WARNING:  warnings.warn(
2024-03-03 19:57:00,701:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:57:00,701:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:57:00,701:WARNING:
2024-03-03 19:57:00,701:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:57:00,701:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:57:00,701:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:57:00,701:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:57:00,701:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:57:00,705:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:1175: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
2024-03-03 19:57:00,705:WARNING:  warnings.warn(
2024-03-03 19:57:01,085:WARNING:d:\dev\venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2024-03-03 19:57:01,085:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2024-03-03 19:57:01,085:WARNING:
2024-03-03 19:57:01,085:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2024-03-03 19:57:01,085:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2024-03-03 19:57:01,085:WARNING:Please also refer to the documentation for alternative solver options:
2024-03-03 19:57:01,085:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2024-03-03 19:57:01,085:WARNING:  n_iter_i = _check_optimize_result(
2024-03-03 19:57:01,659:INFO:Visual Rendered Successfully
2024-03-03 19:57:01,796:INFO:plot_model() successfully completed......................................
2024-03-03 20:02:37,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 20:02:37,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 20:02:37,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 20:02:37,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-03 20:05:31,951:INFO:PyCaret ClusteringExperiment
2024-03-03 20:05:31,953:INFO:Logging name: cluster-default-name
2024-03-03 20:05:31,953:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-03-03 20:05:31,953:INFO:version 3.3.0
2024-03-03 20:05:31,953:INFO:Initializing setup()
2024-03-03 20:05:31,953:INFO:self.USI: 7dfc
2024-03-03 20:05:31,953:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'gpu_param', 'pipeline', 'USI', 'data', 'logging_param', 'X', 'memory', '_available_plots', 'exp_id', 'html_param', 'idx', 'seed', 'n_jobs_param', 'log_plots_param', 'gpu_n_jobs_param'}
2024-03-03 20:05:31,953:INFO:Checking environment
2024-03-03 20:05:31,953:INFO:python_version: 3.11.0
2024-03-03 20:05:31,953:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-03-03 20:05:31,953:INFO:machine: AMD64
2024-03-03 20:05:31,953:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-03 20:05:31,957:INFO:Memory: svmem(total=8428179456, available=1619521536, percent=80.8, used=6808657920, free=1619521536)
2024-03-03 20:05:31,959:INFO:Physical Core: 4
2024-03-03 20:05:31,959:INFO:Logical Core: 8
2024-03-03 20:05:31,959:INFO:Checking libraries
2024-03-03 20:05:31,959:INFO:System:
2024-03-03 20:05:31,959:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-03-03 20:05:31,959:INFO:executable: d:\dev\venv\Scripts\python.exe
2024-03-03 20:05:31,959:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-03 20:05:31,959:INFO:PyCaret required dependencies:
2024-03-03 20:05:32,892:INFO:                 pip: 23.2.1
2024-03-03 20:05:32,892:INFO:          setuptools: 68.2.2
2024-03-03 20:05:32,892:INFO:             pycaret: 3.3.0
2024-03-03 20:05:32,892:INFO:             IPython: 8.14.0
2024-03-03 20:05:32,892:INFO:          ipywidgets: 8.1.1
2024-03-03 20:05:32,892:INFO:                tqdm: 4.66.1
2024-03-03 20:05:32,892:INFO:               numpy: 1.26.0
2024-03-03 20:05:32,892:INFO:              pandas: 2.1.1
2024-03-03 20:05:32,892:INFO:              jinja2: 3.1.2
2024-03-03 20:05:32,892:INFO:               scipy: 1.11.3
2024-03-03 20:05:32,892:INFO:              joblib: 1.3.2
2024-03-03 20:05:32,892:INFO:             sklearn: 1.4.1.post1
2024-03-03 20:05:32,892:INFO:                pyod: 1.1.3
2024-03-03 20:05:32,892:INFO:            imblearn: 0.12.0
2024-03-03 20:05:32,892:INFO:   category_encoders: 2.6.3
2024-03-03 20:05:32,892:INFO:            lightgbm: 4.3.0
2024-03-03 20:05:32,892:INFO:               numba: 0.59.0
2024-03-03 20:05:32,892:INFO:            requests: 2.31.0
2024-03-03 20:05:32,892:INFO:          matplotlib: 3.7.5
2024-03-03 20:05:32,892:INFO:          scikitplot: 0.3.7
2024-03-03 20:05:32,892:INFO:         yellowbrick: 1.5
2024-03-03 20:05:32,892:INFO:              plotly: 5.19.0
2024-03-03 20:05:32,892:INFO:    plotly-resampler: Not installed
2024-03-03 20:05:32,892:INFO:             kaleido: 0.2.1
2024-03-03 20:05:32,892:INFO:           schemdraw: 0.15
2024-03-03 20:05:32,892:INFO:         statsmodels: 0.14.1
2024-03-03 20:05:32,892:INFO:              sktime: 0.27.0
2024-03-03 20:05:32,892:INFO:               tbats: 1.1.3
2024-03-03 20:05:32,892:INFO:            pmdarima: 2.0.4
2024-03-03 20:05:32,893:INFO:              psutil: 5.9.5
2024-03-03 20:05:32,893:INFO:          markupsafe: 2.1.3
2024-03-03 20:05:32,893:INFO:             pickle5: Not installed
2024-03-03 20:05:32,893:INFO:         cloudpickle: 3.0.0
2024-03-03 20:05:32,893:INFO:         deprecation: 2.1.0
2024-03-03 20:05:32,893:INFO:              xxhash: 3.4.1
2024-03-03 20:05:32,893:INFO:           wurlitzer: Not installed
2024-03-03 20:05:32,893:INFO:PyCaret optional dependencies:
2024-03-03 20:05:33,199:INFO:                shap: Not installed
2024-03-03 20:05:33,199:INFO:           interpret: Not installed
2024-03-03 20:05:33,199:INFO:                umap: Not installed
2024-03-03 20:05:33,199:INFO:     ydata_profiling: Not installed
2024-03-03 20:05:33,199:INFO:  explainerdashboard: Not installed
2024-03-03 20:05:33,199:INFO:             autoviz: Not installed
2024-03-03 20:05:33,199:INFO:           fairlearn: Not installed
2024-03-03 20:05:33,200:INFO:          deepchecks: Not installed
2024-03-03 20:05:33,200:INFO:             xgboost: 2.0.3
2024-03-03 20:05:33,200:INFO:            catboost: Not installed
2024-03-03 20:05:33,200:INFO:              kmodes: Not installed
2024-03-03 20:05:33,200:INFO:             mlxtend: Not installed
2024-03-03 20:05:33,200:INFO:       statsforecast: Not installed
2024-03-03 20:05:33,200:INFO:        tune_sklearn: Not installed
2024-03-03 20:05:33,200:INFO:                 ray: Not installed
2024-03-03 20:05:33,200:INFO:            hyperopt: Not installed
2024-03-03 20:05:33,200:INFO:              optuna: Not installed
2024-03-03 20:05:33,200:INFO:               skopt: Not installed
2024-03-03 20:05:33,200:INFO:              mlflow: Not installed
2024-03-03 20:05:33,200:INFO:              gradio: Not installed
2024-03-03 20:05:33,200:INFO:             fastapi: Not installed
2024-03-03 20:05:33,200:INFO:             uvicorn: Not installed
2024-03-03 20:05:33,200:INFO:              m2cgen: Not installed
2024-03-03 20:05:33,200:INFO:           evidently: Not installed
2024-03-03 20:05:33,200:INFO:               fugue: Not installed
2024-03-03 20:05:33,200:INFO:           streamlit: 1.31.1
2024-03-03 20:05:33,200:INFO:             prophet: Not installed
2024-03-03 20:05:33,200:INFO:None
2024-03-03 20:05:33,200:INFO:Set up data.
2024-03-03 20:05:33,203:INFO:Set up index.
2024-03-03 20:05:33,203:INFO:Assigning column types.
2024-03-03 20:05:33,205:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-03-03 20:05:33,205:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-03-03 20:05:33,205:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,205:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-03-03 20:05:33,205:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,205:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-03-03 20:05:33,206:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,206:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,235:INFO:Preparing preprocessing pipeline...
2024-03-03 20:05:33,235:INFO:Set up simple imputation.
2024-03-03 20:05:33,257:INFO:Finished creating preprocessing pipeline.
2024-03-03 20:05:33,267:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amir\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'Income', 'SpendingScore',
                                             'Savings'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-03-03 20:05:33,267:INFO:Creating final display dataframe.
2024-03-03 20:05:33,334:INFO:Setup _display_container:                Description                 Value
0               Session id                  6446
1      Original data shape              (505, 4)
2   Transformed data shape              (505, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  cluster-default-name
12                     USI                  7dfc
2024-03-03 20:05:33,340:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,341:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-03 20:05:33,355:INFO:setup() successfully completed in 1.41s...............
2024-03-03 20:06:32,805:INFO:Initializing create_model()
2024-03-03 20:06:32,806:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-03-03 20:06:32,806:INFO:Checking exceptions
2024-03-03 20:06:32,854:INFO:Importing untrained model
2024-03-03 20:06:32,860:INFO:K-Means Clustering Imported successfully
2024-03-03 20:06:32,864:INFO:Fitting Model
2024-03-03 20:06:33,656:INFO:KMeans(n_clusters=4, random_state=6446)
2024-03-03 20:06:33,656:INFO:create_models() successfully completed......................................
2024-03-03 20:06:33,660:INFO:Uploading results into container
2024-03-03 20:06:33,661:INFO:Uploading model into container now
2024-03-03 20:06:33,670:INFO:_master_model_container: 1
2024-03-03 20:06:33,670:INFO:_display_container: 2
2024-03-03 20:06:33,670:INFO:KMeans(n_clusters=4, random_state=6446)
2024-03-03 20:06:33,671:INFO:create_model() successfully completed......................................
2024-03-03 20:07:23,909:INFO:Initializing plot_model()
2024-03-03 20:07:23,910:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=elbow, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 20:07:23,910:INFO:Checking exceptions
2024-03-03 20:07:23,913:INFO:Preloading libraries
2024-03-03 20:07:23,913:INFO:Copying training dataset
2024-03-03 20:07:23,913:INFO:Plot type: elbow
2024-03-03 20:07:24,458:INFO:Fitting Model
2024-03-03 20:07:25,251:INFO:Visual Rendered Successfully
2024-03-03 20:07:25,339:INFO:plot_model() successfully completed......................................
2024-03-03 20:08:13,558:INFO:Initializing plot_model()
2024-03-03 20:08:13,558:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=tsne, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 20:08:13,558:INFO:Checking exceptions
2024-03-03 20:08:13,562:INFO:Preloading libraries
2024-03-03 20:08:13,563:INFO:Copying training dataset
2024-03-03 20:08:13,563:INFO:Plot type: tsne
2024-03-03 20:08:13,563:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:08:13,564:INFO:Initializing assign_model()
2024-03-03 20:08:13,564:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=True, score=False, verbose=False)
2024-03-03 20:08:13,564:INFO:Checking exceptions
2024-03-03 20:08:13,564:INFO:Determining Trained Model
2024-03-03 20:08:13,564:INFO:Trained Model : K-Means Clustering
2024-03-03 20:08:13,564:INFO:Copying data
2024-03-03 20:08:13,580:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-03-03 20:08:13,581:INFO:(505, 5)
2024-03-03 20:08:13,581:INFO:assign_model() successfully completed......................................
2024-03-03 20:08:13,581:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:08:13,581:INFO:Fitting TSNE()
2024-03-03 20:08:17,280:INFO:Sorting dataframe
2024-03-03 20:08:17,281:INFO:Rendering Visual
2024-03-03 20:08:34,897:INFO:Visual Rendered Successfully
2024-03-03 20:08:35,011:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:18,168:INFO:Initializing plot_model()
2024-03-03 20:10:18,170:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=distribution, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-03-03 20:10:18,170:INFO:Checking exceptions
2024-03-03 20:10:18,176:INFO:Preloading libraries
2024-03-03 20:10:18,176:INFO:Copying training dataset
2024-03-03 20:10:18,176:INFO:Plot type: distribution
2024-03-03 20:10:18,176:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:10:18,177:INFO:Initializing assign_model()
2024-03-03 20:10:18,177:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=False, score=True, verbose=False)
2024-03-03 20:10:18,177:INFO:Checking exceptions
2024-03-03 20:10:18,177:INFO:Determining Trained Model
2024-03-03 20:10:18,177:INFO:Trained Model : K-Means Clustering
2024-03-03 20:10:18,177:INFO:Copying data
2024-03-03 20:10:18,178:INFO:(505, 5)
2024-03-03 20:10:18,178:INFO:assign_model() successfully completed......................................
2024-03-03 20:10:18,178:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:10:18,178:INFO:Sorting dataframe
2024-03-03 20:10:18,182:INFO:Rendering Visual
2024-03-03 20:10:19,724:INFO:Visual Rendered Successfully
2024-03-03 20:10:19,843:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:39,893:INFO:Initializing evaluate_model()
2024-03-03 20:10:39,893:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-03 20:10:40,028:INFO:Initializing plot_model()
2024-03-03 20:10:40,028:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=pipeline, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:40,028:INFO:Checking exceptions
2024-03-03 20:10:40,029:INFO:Preloading libraries
2024-03-03 20:10:40,029:INFO:Copying training dataset
2024-03-03 20:10:40,029:INFO:Plot type: pipeline
2024-03-03 20:10:40,332:INFO:Visual Rendered Successfully
2024-03-03 20:10:40,440:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:45,059:INFO:Initializing plot_model()
2024-03-03 20:10:45,059:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=cluster, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:45,059:INFO:Checking exceptions
2024-03-03 20:10:45,060:INFO:Preloading libraries
2024-03-03 20:10:45,060:INFO:Copying training dataset
2024-03-03 20:10:45,060:INFO:Plot type: cluster
2024-03-03 20:10:45,060:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:10:45,061:INFO:Initializing assign_model()
2024-03-03 20:10:45,061:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=True, score=True, verbose=False)
2024-03-03 20:10:45,061:INFO:Checking exceptions
2024-03-03 20:10:45,061:INFO:Determining Trained Model
2024-03-03 20:10:45,062:INFO:Trained Model : K-Means Clustering
2024-03-03 20:10:45,062:INFO:Copying data
2024-03-03 20:10:45,078:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-03-03 20:10:45,079:INFO:(505, 5)
2024-03-03 20:10:45,079:INFO:assign_model() successfully completed......................................
2024-03-03 20:10:45,079:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:10:45,080:INFO:Fitting PCA()
2024-03-03 20:10:45,084:INFO:Sorting dataframe
2024-03-03 20:10:45,085:INFO:Rendering Visual
2024-03-03 20:10:45,452:INFO:Visual Rendered Successfully
2024-03-03 20:10:45,569:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:46,479:INFO:Initializing plot_model()
2024-03-03 20:10:46,479:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=tsne, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:46,479:INFO:Checking exceptions
2024-03-03 20:10:46,481:INFO:Preloading libraries
2024-03-03 20:10:46,481:INFO:Copying training dataset
2024-03-03 20:10:46,481:INFO:Plot type: tsne
2024-03-03 20:10:46,482:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:10:46,482:INFO:Initializing assign_model()
2024-03-03 20:10:46,482:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=True, score=False, verbose=False)
2024-03-03 20:10:46,482:INFO:Checking exceptions
2024-03-03 20:10:46,482:INFO:Determining Trained Model
2024-03-03 20:10:46,483:INFO:Trained Model : K-Means Clustering
2024-03-03 20:10:46,483:INFO:Copying data
2024-03-03 20:10:46,495:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-03-03 20:10:46,496:INFO:(505, 5)
2024-03-03 20:10:46,496:INFO:assign_model() successfully completed......................................
2024-03-03 20:10:46,496:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:10:46,496:INFO:Fitting TSNE()
2024-03-03 20:10:49,385:INFO:Sorting dataframe
2024-03-03 20:10:49,386:INFO:Rendering Visual
2024-03-03 20:10:49,442:INFO:Visual Rendered Successfully
2024-03-03 20:10:49,561:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:49,931:INFO:Initializing plot_model()
2024-03-03 20:10:49,931:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=elbow, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:49,931:INFO:Checking exceptions
2024-03-03 20:10:49,932:INFO:Preloading libraries
2024-03-03 20:10:49,932:INFO:Copying training dataset
2024-03-03 20:10:49,933:INFO:Plot type: elbow
2024-03-03 20:10:49,956:INFO:Fitting Model
2024-03-03 20:10:50,322:INFO:Visual Rendered Successfully
2024-03-03 20:10:50,442:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:52,173:INFO:Initializing plot_model()
2024-03-03 20:10:52,173:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=silhouette, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:52,174:INFO:Checking exceptions
2024-03-03 20:10:52,175:INFO:Preloading libraries
2024-03-03 20:10:52,175:INFO:Copying training dataset
2024-03-03 20:10:52,176:INFO:Plot type: silhouette
2024-03-03 20:10:52,191:INFO:Fitting Model
2024-03-03 20:10:52,191:WARNING:d:\dev\venv\Lib\site-packages\sklearn\base.py:493: UserWarning:
2024-03-03 20:10:52,191:WARNING:
2024-03-03 20:10:52,191:WARNING:X does not have valid feature names, but KMeans was fitted with feature names
2024-03-03 20:10:52,191:WARNING:
2024-03-03 20:10:52,391:INFO:Visual Rendered Successfully
2024-03-03 20:10:52,491:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:53,580:INFO:Initializing plot_model()
2024-03-03 20:10:53,580:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=distance, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:53,580:INFO:Checking exceptions
2024-03-03 20:10:53,582:INFO:Preloading libraries
2024-03-03 20:10:53,583:INFO:Copying training dataset
2024-03-03 20:10:53,583:INFO:Plot type: distance
2024-03-03 20:10:53,623:INFO:Fitting Model
2024-03-03 20:10:53,623:WARNING:d:\dev\venv\Lib\site-packages\sklearn\base.py:493: UserWarning:
2024-03-03 20:10:53,623:WARNING:
2024-03-03 20:10:53,623:WARNING:X does not have valid feature names, but KMeans was fitted with feature names
2024-03-03 20:10:53,623:WARNING:
2024-03-03 20:10:53,623:WARNING:d:\dev\venv\Lib\site-packages\sklearn\manifold\_mds.py:626: UserWarning:
2024-03-03 20:10:53,623:WARNING:
2024-03-03 20:10:53,623:WARNING:The MDS API has changed. ``fit`` now constructs an dissimilarity matrix from data. To use a custom dissimilarity matrix, set ``dissimilarity='precomputed'``.
2024-03-03 20:10:53,623:WARNING:
2024-03-03 20:10:54,281:INFO:Visual Rendered Successfully
2024-03-03 20:10:54,376:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:55,218:INFO:Initializing plot_model()
2024-03-03 20:10:55,218:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=distribution, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:55,218:INFO:Checking exceptions
2024-03-03 20:10:55,220:INFO:Preloading libraries
2024-03-03 20:10:55,220:INFO:Copying training dataset
2024-03-03 20:10:55,221:INFO:Plot type: distribution
2024-03-03 20:10:55,221:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:10:55,221:INFO:Initializing assign_model()
2024-03-03 20:10:55,222:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=False, score=True, verbose=False)
2024-03-03 20:10:55,222:INFO:Checking exceptions
2024-03-03 20:10:55,222:INFO:Determining Trained Model
2024-03-03 20:10:55,222:INFO:Trained Model : K-Means Clustering
2024-03-03 20:10:55,222:INFO:Copying data
2024-03-03 20:10:55,225:INFO:(505, 5)
2024-03-03 20:10:55,225:INFO:assign_model() successfully completed......................................
2024-03-03 20:10:55,225:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:10:55,225:INFO:Sorting dataframe
2024-03-03 20:10:55,228:INFO:Rendering Visual
2024-03-03 20:10:55,297:INFO:Visual Rendered Successfully
2024-03-03 20:10:55,394:INFO:plot_model() successfully completed......................................
2024-03-03 20:10:57,433:INFO:Initializing plot_model()
2024-03-03 20:10:57,433:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=KMeans(n_clusters=4, random_state=6446), plot=cluster, scale=1, save=False, fold=None, fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-03 20:10:57,434:INFO:Checking exceptions
2024-03-03 20:10:57,436:INFO:Preloading libraries
2024-03-03 20:10:57,436:INFO:Copying training dataset
2024-03-03 20:10:57,436:INFO:Plot type: cluster
2024-03-03 20:10:57,437:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:10:57,437:INFO:Initializing assign_model()
2024-03-03 20:10:57,437:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=True, score=True, verbose=False)
2024-03-03 20:10:57,437:INFO:Checking exceptions
2024-03-03 20:10:57,437:INFO:Determining Trained Model
2024-03-03 20:10:57,437:INFO:Trained Model : K-Means Clustering
2024-03-03 20:10:57,437:INFO:Copying data
2024-03-03 20:10:57,452:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-03-03 20:10:57,453:INFO:(505, 5)
2024-03-03 20:10:57,453:INFO:assign_model() successfully completed......................................
2024-03-03 20:10:57,453:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:10:57,454:INFO:Fitting PCA()
2024-03-03 20:10:57,457:INFO:Sorting dataframe
2024-03-03 20:10:57,458:INFO:Rendering Visual
2024-03-03 20:10:57,505:INFO:Visual Rendered Successfully
2024-03-03 20:10:57,600:INFO:plot_model() successfully completed......................................
2024-03-03 20:12:05,227:INFO:Initializing assign_model()
2024-03-03 20:12:05,227:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=KMeans(n_clusters=4, random_state=6446), transformation=False, score=True, verbose=True)
2024-03-03 20:12:05,227:INFO:Checking exceptions
2024-03-03 20:12:05,228:INFO:Determining Trained Model
2024-03-03 20:12:05,228:INFO:Trained Model : K-Means Clustering
2024-03-03 20:12:05,229:INFO:Copying data
2024-03-03 20:12:05,230:INFO:(505, 5)
2024-03-03 20:12:05,230:INFO:assign_model() successfully completed......................................
2024-03-03 20:13:01,865:INFO:Initializing create_model()
2024-03-03 20:13:01,866:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-03-03 20:13:01,866:INFO:Checking exceptions
2024-03-03 20:13:01,921:INFO:Importing untrained model
2024-03-03 20:13:01,926:INFO:Agglomerative Clustering Imported successfully
2024-03-03 20:13:01,938:INFO:Fitting Model
2024-03-03 20:13:02,591:INFO:AgglomerativeClustering(n_clusters=4)
2024-03-03 20:13:02,591:INFO:create_models() successfully completed......................................
2024-03-03 20:13:02,595:INFO:Uploading results into container
2024-03-03 20:13:02,596:INFO:Uploading model into container now
2024-03-03 20:13:02,604:INFO:_master_model_container: 2
2024-03-03 20:13:02,606:INFO:_display_container: 3
2024-03-03 20:13:02,606:INFO:AgglomerativeClustering(n_clusters=4)
2024-03-03 20:13:02,606:INFO:create_model() successfully completed......................................
2024-03-03 20:13:37,615:INFO:Initializing plot_model()
2024-03-03 20:13:37,615:INFO:plot_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, estimator=AgglomerativeClustering(n_clusters=4), plot=cluster, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=True, verbose=True, system=True, display=None, display_format=None)
2024-03-03 20:13:37,615:INFO:Checking exceptions
2024-03-03 20:13:37,619:INFO:Preloading libraries
2024-03-03 20:13:37,621:INFO:Copying training dataset
2024-03-03 20:13:37,621:INFO:Plot type: cluster
2024-03-03 20:13:37,621:INFO:SubProcess assign_model() called ==================================
2024-03-03 20:13:37,621:INFO:Initializing assign_model()
2024-03-03 20:13:37,621:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002A517B07CD0>, model=AgglomerativeClustering(n_clusters=4), transformation=True, score=True, verbose=False)
2024-03-03 20:13:37,621:INFO:Checking exceptions
2024-03-03 20:13:37,622:INFO:Determining Trained Model
2024-03-03 20:13:37,622:INFO:Trained Model : Agglomerative Clustering
2024-03-03 20:13:37,622:INFO:Copying data
2024-03-03 20:13:37,634:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-03-03 20:13:37,635:INFO:(505, 5)
2024-03-03 20:13:37,635:INFO:assign_model() successfully completed......................................
2024-03-03 20:13:37,636:INFO:SubProcess assign_model() end ==================================
2024-03-03 20:13:37,637:INFO:Fitting PCA()
2024-03-03 20:13:37,642:INFO:Sorting dataframe
2024-03-03 20:13:37,645:INFO:Rendering Visual
2024-03-03 20:13:38,060:INFO:Visual Rendered Successfully
2024-03-03 20:13:38,160:INFO:plot_model() successfully completed......................................
